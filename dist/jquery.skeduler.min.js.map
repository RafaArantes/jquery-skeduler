{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jquery.skeduler.js","src/adapter.js","src/index.js","src/settings.js","src/skeduler.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_skeduler","_skeduler2","$","fn","skeduler","options","this","each","$container","./skeduler","2","Object","defineProperty","value","_adapter","./adapter","3","defaultSettings","headers","tasks","cardTemplate","onClick","task","containerCssClass","headerContainerCssClass","schedulerContainerCssClass","taskPlaceholderCssClass","workingIntervalPlaceholderCssClass","cellCssClass","resizableHandlerCssClass","resizableSliderCssClass","lineHeight","borderWidth","columnWidth","minColumnWidth","rowsPerHour","columnResizeEnabled","debug","itemsOptions","enabled","4","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_settings","Skeduler","settings","extend","$ownerDocument","ownerDocument","$headerContainer","$scheduleEl","operation","console","time","populate","populateSkedulerItems","timeEnd","_this","empty","addClass","data","map","getHeader","div","clone","log","forEach","element","text","appendTo","append","scheduleTimelineEl","scheduleBodyEl","gridColumnElement","j","timelineCell","height","css","toTimeString","el","tasksPlaceholder","appendTasks","filter","column","workingIntervalsPlaceholder","intervals","find","d","id","workingTimeIntervals","appendAvailableInterval","prepend","updateColumnWidth","configureResizing","_this2","$skedulerItemsEl","containerSelector","mouseUp","event","_operation","$movingCard","remove","off","mouseMove","_operation2","top","clientY","left","clientX","mouseDownOnCard","which","$card","currentTarget","duration","parseInt","Math","ceil","parent","on","preventDefault","_this3","skedulerElResizableHandler","width","resizableSliderHeight","index","_","offsetLeft","clientWidth","onPointerDown","bind","floor","durationInMinutes","heightOfMinute","startTime","startTimeInt","parseTime","test","split","result","hasOwnProperty","replace","placeholder","_this4","innerContent","renderInnerCardContent","getCardTopPosition","getCardHeight","card","attr","style","title","_this5","interval","start","end","op","difference","pageX","startX","columnNumber","toFixed","onPointerUp","$currentGrip","gripIndex","$leftColumn","eq","leftWidth","onPointerMove","max","diff","$el","./settings"],"mappings":"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","file":"jquery.skeduler.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * jquery-skeduler - This is jQuery plugin which provider you simple scheduler with some items on OX and 24-hours timeline on OY.\n * @date Tue Jun 27 2017 12:46:04 GMT+1000 (Russia TZ 9 Standard Time)\n * @version v0.0.1\n * @link \n * @license ISC\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\n// export type Task = {\n//     id: number;\n//     startTime: number;\n//     duration: number;\n//     column: number\n// }\n\n// export type Options = {\n//     headers: string[];\n//     tasks: Task[];\n//     containerCssClass: string;\n//     headerContainerCssClass: string;\n//     schedulerContainerCssClass: string;\n//     lineHeight: number;\n//     borderWidth: number;\n// }\n\n/**\r\n* Generate scheduler grid with task cards\r\n* options:\r\n* - headers: string[] - array of headers\r\n* - tasks: Task[] - array of tasks\r\n* - containerCssClass: string - css class of main container\r\n* - headerContainerCssClass: string - css class of header container\r\n* - schedulerContainerCssClass: string - css class of scheduler\r\n* - lineHeight - height of one half-hour cell in grid\r\n* - borderWidth - width of border of cell in grid\r\n*/\n$.fn.skeduler = function (options) {\n    return this.each(function () {\n        var $container = $(this);\n\n        var skeduler = new _skeduler2['default']($container, options);\n    });\n};\n\n$.skeduler = _skeduler2['default'];\n\n},{\"./skeduler\":4}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nexports['default'] = _skeduler2['default'];\nmodule.exports = exports['default'];\n\n},{\"./adapter\":1,\"./skeduler\":4}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar defaultSettings = {\n    // Data attributes\n    headers: null, // String[] - Array of column headers\n    tasks: [], // Task[] - Array of tasks. Required fields:\n    // id: number, startTime: number, duration: number, column: number\n\n    // Card template - Inner content of task card.\n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function onClick(e, task) {},\n\n    // Css classes\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30, // height of one line in grid\n    borderWidth: 1, // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2, // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false\n    }\n};\n\nexports.defaultSettings = defaultSettings;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _settings = require('./settings');\n\nvar Skeduler = (function () {\n    function Skeduler($container, options) {\n        _classCallCheck(this, Skeduler);\n\n        this.settings = $.extend(_settings.defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null;\n        this.operation = null;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.populate($container, options);\n        if (this.settings.itemsOptions.enabled) {\n            this.populateSkedulerItems(this.settings.itemsOptions);\n        }\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    _createClass(Skeduler, [{\n        key: 'populate',\n        value: function populate() {\n            var _this = this;\n\n            this.$container.empty();\n            this.$container.addClass(this.settings.containerCssClass);\n\n            var headers = this.settings.headers ? this.settings.headers : this.settings.data.map(this.settings.getHeader);\n\n            var div = $('<div></div>');\n\n            // Add headers\n            this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\n            console.log('this.$headerContainer', this.$headerContainer);\n            headers.forEach(function (element) {\n                div.clone().text(element).appendTo(_this.$headerContainer);\n            }, this);\n            this.$container.append(this.$headerContainer);\n\n            // Add scheduler\n            this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\n            var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\n            var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\n\n            var gridColumnElement = div.clone();\n\n            for (var i = 0; i < 24; i++) {\n                // Populate timeline\n                for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                    var timelineCell = div.clone().height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                    if (j == 0) {\n                        timelineCell = timelineCell.css(\"line-height\", this.settings.lineHeight + 'px').text(j == 0 ? this.toTimeString(i) : \"\");\n                    }\n                    timelineCell.appendTo(scheduleTimelineEl);\n\n                    div.clone().addClass(this.settings.cellCssClass).height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\").appendTo(gridColumnElement);\n                }\n            }\n\n            // Populate grid\n            for (var j = 0; j < headers.length; j++) {\n                var el = gridColumnElement.clone();\n\n                var tasksPlaceholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\n                this.appendTasks(tasksPlaceholder, this.settings.tasks.filter(function (t) {\n                    return t.column == j;\n                }));\n\n                // fixme\n                var workingIntervalsPlaceholder = div.clone().addClass(this.settings.workingIntervalPlaceholderCssClass);\n                var intervals = this.settings.data.find(function (d) {\n                    return d.id === j + 1;\n                }).workingTimeIntervals;\n                this.appendAvailableInterval(workingIntervalsPlaceholder, intervals);\n\n                el.prepend(tasksPlaceholder);\n                el.prepend(workingIntervalsPlaceholder);\n                el.appendTo(scheduleBodyEl);\n\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            this.$scheduleEl.append(scheduleTimelineEl);\n            this.$scheduleEl.append(scheduleBodyEl);\n\n            this.$container.append(this.$scheduleEl);\n\n            // Set default width for columns\n            for (var j = 0; j < headers.length; j++) {\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            // Configure resizing\n            if (this.settings.columnResizeEnabled) {\n                this.configureResizing();\n            }\n        }\n    }, {\n        key: 'populateSkedulerItems',\n        value: function populateSkedulerItems(options) {\n            var _this2 = this;\n\n            var $skedulerItemsEl = $(options.containerSelector);\n\n            // $skedulerItemsEl.html(`\n            //   <div></div>\n            // `);\n            var operation = null;\n\n            var mouseUp = function mouseUp(event) {\n                if (operation == null) return;\n\n                var _operation = operation;\n                var $movingCard = _operation.$movingCard;\n\n                $movingCard.remove();\n\n                operation = null;\n                _this2.$ownerDocument.off('mousemove', mouseMove);\n                _this2.$ownerDocument.off('mouseup', mouseUp);\n            };\n\n            var mouseMove = function mouseMove(event) {\n                if (operation == null) return;\n\n                var _operation2 = operation;\n                var $movingCard = _operation2.$movingCard;\n\n                $movingCard.css({\n                    top: event.clientY + 10 + 'px',\n                    left: event.clientX - 50 + 'px'\n                });\n            };\n\n            var mouseDownOnCard = function mouseDownOnCard(event /*: MouseEvent */) {\n                if (event.which !== 1) {\n                    return;\n                }\n\n                var $card = $(event.currentTarget);\n                var duration = parseInt($card.data('duration'));\n                var height = Math.ceil(_this2.settings.lineHeight * _this2.settings.rowsPerHour / 60 * duration);\n\n                var $movingCard = $card.clone().addClass('si-card-moving').appendTo($skedulerItemsEl.parent());\n\n                $movingCard.height(height + 'px').css({\n                    top: event.clientY + 10 + 'px',\n                    left: event.clientX - 50 + 'px'\n                });\n\n                operation = {\n                    $card: $card, $movingCard: $movingCard\n                };\n\n                _this2.$ownerDocument.on('mousemove', mouseMove);\n                _this2.$ownerDocument.on('mouseup', mouseUp);\n\n                event.preventDefault();\n            };\n\n            $skedulerItemsEl.find('.si-card').on('mousedown', mouseDownOnCard);\n        }\n    }, {\n        key: 'configureResizing',\n        value: function configureResizing() {\n            var _this3 = this;\n\n            var div = $('<div></div>');\n\n            var skedulerElResizableHandler = div.clone().addClass(this.settings.resizableHandlerCssClass);\n\n            this.$container.prepend(skedulerElResizableHandler);\n\n            skedulerElResizableHandler.width(this.$container.width());\n\n            var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n            var index = 0;\n            this.$headerContainer.find('div').each(function (_, el) {\n                div.clone().addClass(_this3.settings.resizableSliderCssClass).css('left', el.offsetLeft + el.clientWidth).height(resizableSliderHeight).data('column-id', index++).appendTo(skedulerElResizableHandler);\n            });\n\n            skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n        }\n\n        /**\r\n           * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\r\n           */\n    }, {\n        key: 'toTimeString',\n        value: function toTimeString(value) {\n            return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n        }\n\n        /**\r\n         * Return height of task card based on duration of the task\r\n         * duration - in hours\r\n         */\n    }, {\n        key: 'getCardHeight',\n        value: function getCardHeight(duration) {\n            var durationInMinutes = duration * 60;\n            var heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n            return Math.ceil(durationInMinutes * heightOfMinute);\n        }\n\n        /**\r\n         * Return top offset of task card based on start time of the task\r\n         * startTime - in hours\r\n         */\n    }, {\n        key: 'getCardTopPosition',\n        value: function getCardTopPosition(startTime) {\n            var startTimeInt = this.parseTime(startTime);\n            return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n        }\n    }, {\n        key: 'parseTime',\n        value: function parseTime(time) {\n            return (/\\d{2}\\:\\d{2}/.test(time) ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 : parseInt(time)\n            );\n        }\n\n        /**\r\n        * Render card template\r\n        */\n    }, {\n        key: 'renderInnerCardContent',\n        value: function renderInnerCardContent(task) {\n            var result = this.settings.cardTemplate;\n            for (var key in task) {\n                if (task.hasOwnProperty(key)) {\n                    // TODO: replace all\n                    result = result.replace('${' + key + '}', task[key]);\n                }\n            }\n\n            return $(result);\n        }\n\n        /** \r\n         * Generate task cards\r\n         */\n    }, {\n        key: 'appendTasks',\n        value: function appendTasks(placeholder, tasks) {\n            var _this4 = this;\n\n            tasks.forEach(function (task) {\n                var innerContent = _this4.renderInnerCardContent(task);\n                var top = _this4.getCardTopPosition(task.startTime);\n                var height = _this4.getCardHeight(task.duration);\n\n                var card = $('<div></div>').attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\n                    title: _this4.toTimeString(task.startTime) + ' - ' + _this4.toTimeString(task.startTime + task.duration)\n                });\n                card.on('click', function (e) {\n                    _this4.settings.onClick && _this4.settings.onClick(e, task);\n                });\n                card.append(innerContent).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'appendAvailableInterval',\n        value: function appendAvailableInterval(placeholder, intervals) {\n            var _this5 = this;\n\n            var div = $('<div></div>');\n            intervals.forEach(function (interval) {\n                var innerContent = div.clone().text('Not allocated');\n                var top = _this5.getCardTopPosition(interval.start) + 2;\n                var duration = _this5.parseTime(interval.end) - _this5.parseTime(interval.start);\n                var height = _this5.getCardHeight(duration) - 5;\n\n                var card = div.clone().attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n                card.append(innerContent).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'onPointerUp',\n        value: function onPointerUp(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            this.$ownerDocument.off('mouseup');\n            this.$ownerDocument.off('mousemove');\n\n            this.operation = null;\n        }\n    }, {\n        key: 'onPointerMove',\n        value: function onPointerMove(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            // Determine the delta change between start and new mouse position, as a percentage of the table width\n            var difference = event.pageX - op.startX; // / this.$scheduleEl.width() * 100;\n            if (difference === 0) {\n                return;\n            }\n\n            var columnNumber = op.columnNumber;\n            var width = op.width + difference;\n            this.updateColumnWidth(columnNumber, width.toFixed(2));\n        }\n    }, {\n        key: 'onPointerDown',\n        value: function onPointerDown(event) {\n            // Only applies to left-click dragging\n            if (event.which !== 1) {\n                return;\n            }\n\n            // If a previous this.operation is defined, we missed the last mouseup.\n            // Probably gobbled up by user mousing out the window then releasing.\n            // We'll simulate a pointerup here prior to it\n            if (this.operation) {\n                this.onPointerUp(event);\n            }\n\n            var $currentGrip = $(event.currentTarget);\n            var columnNumber = $currentGrip.data('column-id');\n\n            console.log(this.$headerContainer);\n\n            var gripIndex = $currentGrip.index();\n            var $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n            var leftWidth = $leftColumn[0].clientWidth;\n\n            this.operation = {\n                columnNumber: columnNumber,\n                startX: event.pageX,\n                width: leftWidth\n            };\n\n            this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n            this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'updateColumnWidth',\n        value: function updateColumnWidth(columnNumber, width) {\n            width = Math.max(width, this.settings.minColumnWidth);\n            $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')').css('flex-basis', width + 'px');\n\n            var column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n            var diff = column.width() - width;\n            column.width(width);\n\n            $('.' + this.settings.resizableHandlerCssClass + ' > div').each(function (index, el) {\n                if (index >= columnNumber) {\n                    var $el = $(el);\n                    var left = parseInt($el.css('left').replace('px', ''));\n                    $el.css('left', left - diff);\n                }\n            });\n        }\n    }]);\n\n    return Skeduler;\n})();\n\nexports['default'] = Skeduler;\nmodule.exports = exports['default'];\n\n},{\"./settings\":3}]},{},[2])\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import Skeduler from './skeduler';\r\n\r\n// export type Task = {\r\n//     id: number;\r\n//     startTime: number;\r\n//     duration: number;\r\n//     column: number\r\n// }\r\n\r\n// export type Options = {\r\n//     headers: string[];\r\n//     tasks: Task[];\r\n//     containerCssClass: string;\r\n//     headerContainerCssClass: string;\r\n//     schedulerContainerCssClass: string;\r\n//     lineHeight: number;\r\n//     borderWidth: number;\r\n// }\r\n\r\n/**\r\n* Generate scheduler grid with task cards\r\n* options:\r\n* - headers: string[] - array of headers\r\n* - tasks: Task[] - array of tasks\r\n* - containerCssClass: string - css class of main container\r\n* - headerContainerCssClass: string - css class of header container\r\n* - schedulerContainerCssClass: string - css class of scheduler\r\n* - lineHeight - height of one half-hour cell in grid\r\n* - borderWidth - width of border of cell in grid\r\n*/\r\n$.fn.skeduler = function (options) {\r\n    return this.each(function () {\r\n        let $container = $(this);\r\n \r\n        var skeduler = new Skeduler($container, options);\r\n    });\r\n};\r\n\r\n$.skeduler = Skeduler;\r\n","import Skeduler from './skeduler';\r\nimport adapter from './adapter';\r\n\r\nexport default Skeduler;","const defaultSettings = {\r\n    // Data attributes\r\n    headers: null,  // String[] - Array of column headers\r\n    tasks: [],    // Task[] - Array of tasks. Required fields: \r\n    // id: number, startTime: number, duration: number, column: number\r\n\r\n    // Card template - Inner content of task card. \r\n    // You're able to use ${key} inside template, where key is any property from task.\r\n    cardTemplate: '<div>${id}</div>',\r\n\r\n    // OnClick event handler\r\n    onClick: function (e, task) { },\r\n\r\n    // Css classes\r\n    containerCssClass: 'skeduler-container',\r\n    headerContainerCssClass: 'skeduler-headers',\r\n    schedulerContainerCssClass: 'skeduler-main',\r\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\r\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\r\n    cellCssClass: 'skeduler-cell',\r\n    resizableHandlerCssClass: 'resizable-handler',\r\n    resizableSliderCssClass: 'resizable-slider',\r\n\r\n    lineHeight: 30,         // height of one line in grid\r\n    borderWidth: 1,         // width of board of grid cell\r\n    columnWidth: 200,\r\n    minColumnWidth: 100,\r\n\r\n    rowsPerHour: 2,         // count of rows for one hour\r\n\r\n    columnResizeEnabled: true, // is columns resizable\r\n\r\n    debug: true,\r\n\r\n    itemsOptions: {\r\n        enabled: false\r\n    }\r\n};\r\n\r\nexport { defaultSettings };","import { defaultSettings } from './settings';\r\n\r\nclass Skeduler {\r\n    constructor($container, options) {\r\n        this.settings = $.extend(defaultSettings, options);\r\n        this.$container = $container;\r\n        this.$ownerDocument = $($container[0].ownerDocument);\r\n        this.$headerContainer = null;\r\n        this.$scheduleEl = null\r\n        this.operation = null;\r\n\r\n        if (this.settings.debug) {\r\n            console.time('skeduler');\r\n        }\r\n\r\n        this.populate($container, options);\r\n        if (this.settings.itemsOptions.enabled) {\r\n            this.populateSkedulerItems(this.settings.itemsOptions);\r\n        }\r\n\r\n        if (this.settings.debug) {\r\n            console.timeEnd('skeduler');\r\n        }\r\n    }\r\n\r\n    populate() {\r\n        this.$container.empty();\r\n        this.$container.addClass(this.settings.containerCssClass);\r\n\r\n        const headers = this.settings.headers \r\n            ? this.settings.headers\r\n            : this.settings.data.map(this.settings.getHeader);\r\n\r\n        const div = $('<div></div>');\r\n\r\n        // Add headers\r\n        this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\r\n        console.log('this.$headerContainer', this.$headerContainer);\r\n        headers.forEach((element) => {\r\n            div.clone()\r\n                .text(element)\r\n                .appendTo(this.$headerContainer);\r\n        }, this);\r\n        this.$container.append(this.$headerContainer);\r\n\r\n        // Add scheduler\r\n        this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\r\n        var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\r\n        var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\r\n\r\n        var gridColumnElement = div.clone();\r\n\r\n        for (var i = 0; i < 24; i++) {\r\n            // Populate timeline\r\n            for (var j = 0; j < this.settings.rowsPerHour; j++) {\r\n                var timelineCell = div.clone()\r\n                    .height(this.settings.lineHeight)\r\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\r\n\r\n                if (j == 0) {\r\n                    timelineCell = timelineCell\r\n                        .css(\"line-height\", this.settings.lineHeight + 'px')\r\n                        .text(j == 0 ? this.toTimeString(i) : \"\");\r\n                }\r\n                timelineCell.appendTo(scheduleTimelineEl);\r\n\r\n                div.clone()\r\n                    .addClass(this.settings.cellCssClass)\r\n                    .height(this.settings.lineHeight)\r\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\")\r\n                    .appendTo(gridColumnElement);\r\n            }\r\n        }\r\n\r\n        // Populate grid\r\n        for (var j = 0; j < headers.length; j++) {\r\n            var el = gridColumnElement.clone();\r\n\r\n            var tasksPlaceholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\r\n            this.appendTasks(tasksPlaceholder, this.settings.tasks.filter(t => t.column == j ));\r\n\r\n            // fixme\r\n            var workingIntervalsPlaceholder = div.clone().addClass(this.settings.workingIntervalPlaceholderCssClass);\r\n            var intervals = this.settings.data.find(d => d.id === j + 1).workingTimeIntervals;\r\n            this.appendAvailableInterval(workingIntervalsPlaceholder, intervals);\r\n\r\n            el.prepend(tasksPlaceholder);\r\n            el.prepend(workingIntervalsPlaceholder);\r\n            el.appendTo(scheduleBodyEl);\r\n\r\n            this.updateColumnWidth(j, this.settings.columnWidth);\r\n        }\r\n\r\n        this.$scheduleEl.append(scheduleTimelineEl);\r\n        this.$scheduleEl.append(scheduleBodyEl);\r\n\r\n        this.$container.append(this.$scheduleEl);\r\n\r\n        // Set default width for columns\r\n        for (var j = 0; j < headers.length; j++) {\r\n            this.updateColumnWidth(j, this.settings.columnWidth);\r\n        }\r\n\r\n        // Configure resizing\r\n        if (this.settings.columnResizeEnabled) {\r\n            this.configureResizing();\r\n        }\r\n    }\r\n\r\n    populateSkedulerItems(options) {\r\n        const $skedulerItemsEl = $(options.containerSelector);\r\n\r\n        // $skedulerItemsEl.html(`\r\n        //   <div></div>\r\n        // `);\r\n        let operation = null;\r\n\r\n        const mouseUp = (event) => {\r\n            if (operation == null) return;\r\n\r\n            const { $movingCard } = operation;\r\n\r\n            $movingCard.remove();\r\n\r\n            operation = null;\r\n            this.$ownerDocument.off('mousemove', mouseMove);\r\n            this.$ownerDocument.off('mouseup', mouseUp);\r\n        };\r\n\r\n        const mouseMove = (event) => {\r\n            if (operation == null) return;\r\n\r\n            const { $movingCard } = operation;\r\n\r\n            $movingCard.css({\r\n                top: (event.clientY + 10) + 'px',\r\n                left: (event.clientX - 50) + 'px'\r\n            });\r\n        };\r\n\r\n        const mouseDownOnCard = (event /*: MouseEvent */) => {\r\n            if (event.which !== 1) { return; }\r\n\r\n            const $card = $(event.currentTarget);\r\n            const duration = parseInt($card.data('duration'));\r\n            const height = Math.ceil(this.settings.lineHeight * this.settings.rowsPerHour / 60 * duration);\r\n\r\n            const $movingCard = $card.clone()\r\n                .addClass('si-card-moving')\r\n                .appendTo($skedulerItemsEl.parent());\r\n\r\n            $movingCard\r\n                .height(height + 'px')\r\n                .css({\r\n                    top: (event.clientY + 10) + 'px',\r\n                    left: (event.clientX - 50) + 'px'\r\n                })\r\n\r\n            operation = {\r\n                $card, $movingCard\r\n            };\r\n\r\n            this.$ownerDocument.on('mousemove', mouseMove);\r\n            this.$ownerDocument.on('mouseup', mouseUp);\r\n\r\n            event.preventDefault();\r\n        };\r\n\r\n        $skedulerItemsEl.find('.si-card').on('mousedown', mouseDownOnCard);\r\n    }\r\n\r\n    configureResizing() {\r\n        const div = $('<div></div>');\r\n\r\n        const skedulerElResizableHandler = div.clone()\r\n            .addClass(this.settings.resizableHandlerCssClass);\r\n\r\n        this.$container.prepend(skedulerElResizableHandler);\r\n\r\n        skedulerElResizableHandler.width(this.$container.width());\r\n\r\n        const resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\r\n        let index = 0;\r\n        this.$headerContainer.find('div').each((_, el) => {\r\n            div.clone()\r\n                .addClass(this.settings.resizableSliderCssClass)\r\n                .css('left', el.offsetLeft + el.clientWidth)\r\n                .height(resizableSliderHeight)\r\n                .data('column-id', index++)\r\n                .appendTo(skedulerElResizableHandler)\r\n        });\r\n\r\n        skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\r\n    }\r\n\r\n    /**\r\n       * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\r\n       */\r\n    toTimeString(value) {\r\n        return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\r\n    }\r\n\r\n    /**\r\n     * Return height of task card based on duration of the task\r\n     * duration - in hours\r\n     */\r\n    getCardHeight(duration) {\r\n        const durationInMinutes = duration * 60;\r\n        const heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\r\n        return Math.ceil(durationInMinutes * heightOfMinute);\r\n    }\r\n\r\n    /**\r\n     * Return top offset of task card based on start time of the task\r\n     * startTime - in hours\r\n     */\r\n    getCardTopPosition(startTime) {\r\n        const startTimeInt = this.parseTime(startTime);\r\n        return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\r\n    }\r\n\r\n    parseTime(time) {\r\n        return /\\d{2}\\:\\d{2}/.test(time)\r\n            ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60\r\n            : parseInt(time);\r\n    }\r\n\r\n    /**\r\n    * Render card template\r\n    */\r\n    renderInnerCardContent(task) {\r\n        var result = this.settings.cardTemplate;\r\n        for (var key in task) {\r\n            if (task.hasOwnProperty(key)) {\r\n                // TODO: replace all\r\n                result = result.replace('${' + key + '}', task[key]);\r\n            }\r\n        }\r\n\r\n        return $(result);\r\n    }\r\n\r\n    /** \r\n     * Generate task cards\r\n     */\r\n    appendTasks(placeholder, tasks) {\r\n        tasks.forEach((task) => {\r\n            var innerContent = this.renderInnerCardContent(task);\r\n            var top = this.getCardTopPosition(task.startTime);\r\n            var height = this.getCardHeight(task.duration);\r\n\r\n            var card = $('<div></div>')\r\n                .attr({\r\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\r\n                    title: this.toTimeString(task.startTime) + ' - ' + this.toTimeString(task.startTime + task.duration)\r\n                });\r\n            card.on('click', (e) => { this.settings.onClick && this.settings.onClick(e, task) });\r\n            card.append(innerContent)\r\n                .appendTo(placeholder);\r\n        }, this);\r\n    }\r\n\r\n    appendAvailableInterval(placeholder, intervals) {\r\n        const div = $('<div></div>');\r\n        intervals.forEach((interval) => {\r\n            const innerContent = div.clone().text('Not allocated');\r\n            const top = this.getCardTopPosition(interval.start) + 2;\r\n            const duration = this.parseTime(interval.end) - this.parseTime(interval.start);\r\n            const height = this.getCardHeight(duration) - 5;\r\n\r\n            const card = div.clone()\r\n                .attr({\r\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\r\n                });\r\n            \r\n            card.append(innerContent)\r\n                .appendTo(placeholder);\r\n        }, this);\r\n    }\r\n\r\n    onPointerUp(event) {\r\n        let op = this.operation;\r\n        if (!this.operation) { return; }\r\n\r\n        this.$ownerDocument.off('mouseup');\r\n        this.$ownerDocument.off('mousemove');\r\n\r\n        this.operation = null;\r\n    }\r\n\r\n    onPointerMove(event) {\r\n        let op = this.operation;\r\n        if (!this.operation) { return; }\r\n\r\n        // Determine the delta change between start and new mouse position, as a percentage of the table width\r\n        let difference = (event.pageX - op.startX);// / this.$scheduleEl.width() * 100;\r\n        if (difference === 0) {\r\n            return;\r\n        }\r\n\r\n        let columnNumber = op.columnNumber;\r\n        let width = op.width + difference;\r\n        this.updateColumnWidth(columnNumber, width.toFixed(2));\r\n    }\r\n\r\n    onPointerDown(event) {\r\n        // Only applies to left-click dragging\r\n        if (event.which !== 1) { return; }\r\n\r\n        // If a previous this.operation is defined, we missed the last mouseup.\r\n        // Probably gobbled up by user mousing out the window then releasing.\r\n        // We'll simulate a pointerup here prior to it\r\n        if (this.operation) {\r\n            this.onPointerUp(event);\r\n        }\r\n\r\n        let $currentGrip = $(event.currentTarget);\r\n        let columnNumber = $currentGrip.data('column-id');\r\n\r\n        console.log(this.$headerContainer);\r\n\r\n        let gripIndex = $currentGrip.index();\r\n        let $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\r\n\r\n        let leftWidth = $leftColumn[0].clientWidth;\r\n\r\n        this.operation = {\r\n            columnNumber,\r\n            startX: event.pageX,\r\n            width: leftWidth\r\n        };\r\n\r\n        this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\r\n        this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    updateColumnWidth(columnNumber, width) {\r\n        width = Math.max(width, this.settings.minColumnWidth);\r\n        $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')')\r\n            .css('flex-basis', width + 'px');\r\n\r\n        let column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\r\n        var diff = column.width() - width;\r\n        column.width(width);\r\n\r\n        $('.' + this.settings.resizableHandlerCssClass + ' > div').each((index, el) => {\r\n            if (index >= columnNumber) {\r\n                let $el = $(el);\r\n                let left = parseInt($el.css('left').replace('px', ''));\r\n                $el.css('left', left - diff);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Skeduler;"]}