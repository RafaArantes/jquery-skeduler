{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jquery.skeduler.js","src/adapter.js","src/index.js","src/items/index.js","src/settings.js","src/skeduler.js","src/template/index.js","src/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_skeduler","_skeduler2","$","fn","skeduler","options","$container","this","./skeduler","2","Object","defineProperty","value","_adapter","./adapter","3","_template","_utils","div","cssClass","addClass","getItemDivs","settings","$div","itemsOptions","itemCardCssClass","items","template","compileTemplate","itemCardTemplate","time","item","interval","start","end","map","clone","data","index","html","findStartTime","rowIndex","rowsPerHour","Math","max","hoursFromTop","toTime","parseTime","populateSkedulerItems","getItem","isAssigned","tasks","filter","$skedulerItemsEl","containerSelector","empty","itemsCssClass","$ownerDocument","ownerDocument","$shifts","availableIntervalPlaceholderCssClass","$skedulerItemsContainerEl","title","appendTo","$items","forEach","el","append","operation","mouseUp","event","_operation","$movingCard","$card","startTime","$siEl","highlightItemCss","parseInt","push","detach","css","top","left","height","width","removeClass","on","mouseDown","remove","column","lineHeight","parent","offsetInMinutes","availableIntervals","onItemWillBeAssigned","offsetTop","clientHeight","task","find","onItemDidAssigned","show","hide","off","mouseMove","_operation2","offsetX","offsetY","newOffsetX","pageX","newOffsetY","pageY","_window","defaultView","x","y","scrollY","rowHeight","duration","each","$this","elementBounding","getBoundingClientRect","right","bottom","_this","$el","floor","min","matchResult","matchFunc","color","match","taskStart","movingTaskStart","console","log","name","which","$skedulerWrapper","skedulerWrapperCssClass","currentTarget","preventDefault","../template","../utils","4","_arguments","arguments","defaultSettings","headers","notAllocatedLabel","cardTemplate","containerCssClass","headerContainerCssClass","schedulerContainerCssClass","taskPlaceholderCssClass","cellCssClass","resizableHandlerCssClass","resizableSliderCssClass","borderWidth","columnWidth","minColumnWidth","columnResizeEnabled","debug","enabled","5","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_settings","_items","_items2","Skeduler","extend","$headerContainer","$scheduleEl","resizeAllColumns","refresh","timeEnd","assign","populate","_this2","getHeader","element","text","scheduleTimelineEl","scheduleBodyEl","gridColumnElement","j","timelineCell","toTimeString","availableIntervalsPlaceholder","intervals","appendAvailableInterval","prepend","updateColumnWidth","configureResizing","_this3","skedulerElResizableHandler","resizableSliderHeight","_","offsetLeft","clientWidth","onResizePointerDown","bind","placeholder","_this4","innerContent","getCardTopPosition","getCardHeight","skItemHightlightDiv","shiftDiv","attr","style","appendTasks","intervalStart","_this5","getItemDiv","op","difference","startX","columnNumber","toFixed","Resize","$currentGrip","gripIndex","$leftColumn","eq","leftWidth","onResizePointerMove","diff","replace","ceil","durationInMinutes","heightOfMinute","offsetTime","startTimeInt","./items","./settings","./template","./utils","6","funcs","result","regKeys","regFuncs","exec","hasOwnProperty","7","test","split"],"mappings":";;;;;;;CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCQA,YAEA,SAASK,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAEzF,GAAIG,GAAYf,ECZK,cDcjBgB,EAAaL,EAAuBI,ECDxCE,GAAEC,GAAGC,SAAW,SAASC,GACrB,GAAIC,GAAaJ,EAAEK,MACfH,EAAW,GAAAH,GAAA,WAAaK,EAAYD,EAExC,OAAOD,IAGXF,EAAEE,SAAQH,EAAA,aDgBPO,aAAa,IAAIC,GAAG,SAASxB,EAAQU,EAAOJ,GAC/C,YAMA,SAASK,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAJzFa,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GAKT,IAAIZ,GAAYf,EE7CK,cF+CjBgB,EAAaL,EAAuBI,GAEpCa,EAAW5B,EEhDK,YFkDJW,GAAuBiB,EAEvCtB,GAAQ,WAAaU,EAAW,WAChCN,EAAOJ,QAAUA,EAAQ,aAEtBuB,YAAY,EAAEN,aAAa,IAAIO,GAAG,SAAS9B,EAAQU,EAAOJ,GAC7D,YAEAmB,QAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAII,GAAY/B,EG/DgB,eHiE5BgC,EAAShC,EGhEqB,YAE5BiC,EAAM,SAACC,GHiET,MGjEsBjB,GAAE,eAAekB,SAASD,IAE9CE,EAAc,SAACC,GACjB,GAAMC,GAAOL,EAAII,EAASE,aAAaC,kBACjCC,EAAQJ,EAASI,MACjBC,GAAW,EAAAX,EAAAY,iBAAgBN,EAASE,aAAaK,kBACnDC,KAAM,SAACC,GHmEH,MGnEYA,GAAKC,SAAcD,EAAKC,SAASC,MAAK,OAAOF,EAAKC,SAASE,IAAQ,KAGvF,OAAOR,GAAMS,IAAI,SAACJ,GHqEd,MGrEuBR,GAAKa,QAC3BC,KAAK,QAASN,EAAKO,OACnBC,KAAKZ,EAASI,OAIjBS,EAAgB,SAACC,EAAUC,EAAaV,GAC1CS,EAAWE,KAAKC,IAAI,EAAGH,EACvB,IAAMI,GAAeJ,EAAWC,CAEhC,QAAO,EAAAzB,EAAA6B,QAAOD,GAAe,EAAA5B,EAAA8B,WAAUf,EAASC,SAG9Ce,EAAwB,SAAC1B,GAC3B,GAAM2B,GAAU,SAACX,EAAOY,GACpB,MAAOA,GACD5B,EAAS6B,MAAMC,OAAO,SAAA1E,GHmExB,MGnE6BA,GAAEqD,KAAKO,QAAUA,IAAO,GAAGP,KACtDT,EAASI,MAAM0B,OAAO,SAAAlE,GHoExB,MGpE6BA,GAAEoD,QAAUA,IAAO,IAGlDe,EAAmBnD,EAAEoB,EAASE,aAAa8B,mBAC5CC,QACAnC,SAASE,EAASE,aAAagC,eAC9BC,EAAiBvD,EAAEmD,EAAiB,GAAGK,eACvCC,EAAUzD,EAAE,IAAMoB,EAASsC,qCAAuC,UAMlEC,GAJa3C,IACdqB,KAAK,yBAA2BjB,EAASE,aAAasC,MAAQ,SAC9DC,SAASV,GAEoBnC,EAAI,iBAClC8C,EAAS3C,EAAYC,EACzB0C,GAAOC,QAAQ,SAAAC,GACXL,EAA0BM,OAAOD,KAErCL,EAA0BE,SAASV,EAEnC,IAAIe,GAAY,KAEVC,EAAU,QAAVA,GAAWC,GACb,GAAiB,MAAbF,EAAJ,CHmEA,GAAIG,GGjEsCH,EAAlCI,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,MAAOC,EAASH,EAATG,UAEtBC,EAAQzE,EAAE,IAAMoB,EAASE,aAAaoD,iBAAmB,YAEzDtC,EAAQuC,SAASL,EAAYnC,KAAK,UAClCa,IAAesB,EAAYnC,KAAK,YAChCN,EAAOkB,EAAQX,EAAOY,EAE5B,IAAkD,GAA9CW,EAA0BxB,KAAK,YAC3Ba,IACA5B,EAAS6B,MAAQ7B,EAAS6B,MAAMC,OAAO,SAAA1E,GHqEnC,MGrEwCA,GAAEqD,KAAKO,OAASA,IAC5DhB,EAASI,MAAMoD,KAAK/C,IAGxByC,EACKO,SACAC,KAAMC,IAAK,OAAQC,KAAM,SACzBC,OAAO,QACPC,MAAM,QACN/C,KAAK,WAAY,GACjBgD,YAAe/D,EAASE,aAAaC,iBAAgB,WACrD4D,YAAe/D,EAASE,aAAaC,iBAAgB,WACrDsC,SAASF,GAEdW,EAAYc,GAAG,YAAaC,GAC5Bd,EAAMe,aACH,IAAqB,IAAjBb,EAAMlF,QAAuC,GAAvBkF,EAAMtC,KAAK,SAAe,CACvD,GACMoD,IADYnE,EAASoE,WAAa,EACzBb,SAASF,EAAMgB,SAAStD,KAAK,YACxCuD,EAAyC,IAAvB,EAAA3E,EAAA8B,WAAU2B,GAE1B1C,EAAWV,EAASe,KAAKoD,GAAQI,mBAAmBlB,EAAMgB,SAAStD,KAAK,cAiB9E,IAfAf,EAASE,aAAasE,sBAAwBxE,EAASE,aAAasE,sBAAuB/D,KAAAA,EAAMC,SAAAA,EAAU4D,gBAAAA,IAE3GpB,EACKO,SACAC,KAAMC,IAAKN,EAAM,GAAGoB,UAAWb,KAAM,IACrCC,OAAOR,EAAM,GAAGqB,cAChBZ,MAAM,QACN/C,KAAK,WAAY,GACjBgD,YAAe/D,EAASE,aAAaC,iBAAgB,WACrDL,SAAYE,EAASE,aAAaC,iBAAgB,WAClDsC,SAASY,EAAMgB,UAEpBnB,EAAYc,GAAG,YAAaC,GAC5Bd,EAAMe,SAEDtC,EAME,CACH,GAAI+C,GAAO3E,EAAS6B,MAAM+C,KAAK,SAAAxH,GHuD3B,MGvDgCA,GAAEqD,KAAKO,QAAUA,GACrD2D,GAAKhE,MAAQyC,EACTuB,EAAKR,OAASA,MARlBnE,GAAS6B,MAAM2B,MACXW,OAAAA,EACAxD,MAAOyC,EACP3C,KAAAA,GAQRT,GAASE,aAAa2E,mBAAqB7E,EAASE,aAAa2E,mBAAoBpE,KAAAA,EAAMC,SAAAA,EAAU4D,gBAAAA,QAErGpB,GAAYgB,SACZf,EAAM2B,MAGVlG,GAAE,IAAMoB,EAASE,aAAaoD,kBAAkByB,OAChDxC,EAA0BwB,YAAY,eACtCxB,EAA0BxB,KAAK,WAAY,GAE3C+B,EAAY,KACZX,EAAe6C,IAAI,YAAaC,GAChC9C,EAAe6C,IAAI,UAAWjC,KAG5BkC,EAAY,SAACjC,GACf,GAAiB,MAAbF,EAAJ,CHyDA,GAAIoC,GGvDsCpC,EAAlCI,EAAWgC,EAAXhC,YAAaiC,EAAOD,EAAPC,QAASC,EAAOF,EAAPE,QAExBC,EAAarC,EAAMsC,MAAQH,EAC7BI,EAAavC,EAAMwC,MAAQJ,CAE/BlC,GAAYQ,KACRC,IAAK4B,EAAa,KAClB3B,KAAMyB,EAAa,MAIvB,IAAMI,GAAUtD,EAAe,GAAGuD,YAC5BC,EAAI3C,EAAMsC,MACVM,EAAI5C,EAAMwC,MAAQC,EAAQI,QAE1BC,EAAY9F,EAASoE,WAAa,EAClChD,EAAcpB,EAASoB,YAEvBJ,EAAQuC,SAASL,EAAYnC,KAAK,UAClCa,IAAesB,EAAYnC,KAAK,YAChCN,EAAOkB,EAAQX,EAAOY,GACtBmE,EAAWtF,EAAKsF,SAChBlC,EAASkC,GAAYD,EAAY1E,EAAc,GAErDmB,GAA0ByD,KAAK,WAC3B,GAAMC,GAAQrH,EAAEK,MACViH,EAAkBjH,KAAKkH,uBAEzBR,GAAIO,EAAgBtC,MAAQ+B,EAAIO,EAAgBE,OAChDR,EAAIM,EAAgBvC,KAAOiC,EAAIM,EAAgBG,QAC/CJ,EAAMnG,SAAS,eACfyC,EAA0BxB,KAAK,WAAY,KAE3CkF,EAAMlC,YAAY,eAClBxB,EAA0BxB,KAAK,WAAY,MAGnDsB,EAAQ2D,KAAK,WH0DT,GAAIM,GAAQrH,KGzDNgH,EAAQrH,EAAEK,MACViH,EAAkBjH,KAAKkH,wBACvBI,EAAMN,EAAMrB,KAAK,IAAM5E,EAASE,aAAaoD,iBAE/CqC,GAAIO,EAAgBtC,MAAQ+B,EAAIO,EAAgBE,OAChDR,EAAIM,EAAgBvC,KAAOiC,EAAIM,EAAgBG,QH2D/C,WGzDA,GAAM5B,GAAYmB,EAAIM,EAAgBvC,IAChCxC,EAAYE,KAAKmF,MAAM/B,EAAYqB,GAAa,EAChDnC,EAAMtC,KAAKoF,IACbpF,KAAKC,IAAI,EAAGH,EAAW2E,GACvBQ,EAAK5B,aAAeb,GAGlBM,GAAU8B,EAAMlF,KAAK,UACrBuD,EAAkB,GAAKtE,EAASoB,aAAeuC,EAAMmC,GACrDpF,EAAWV,EAASe,KAAKoD,GAAQI,mBAAmB0B,EAAMlF,KAAK,eAC/D2F,EAAc1G,EAASE,aAAayG,UAAUlG,EAAMC,EAAU4D,EAEpExB,GAAUM,UAAYlC,EAAcC,EAAUC,EAAaV,GAE3D6F,EAAI7C,KAAMC,IAAKA,IACVD,IAAI,mBAAoBgD,EAAYE,OACpC/C,OAAOA,GACPiB,OAGLyB,EAAIxF,KAAK,SAAU2F,EAAYG,OAE3BH,EAAYG,OACZ7G,EAAS6B,MAAMC,OAAO,SAAA1E,GHqDd,MGrDmBA,GAAE+G,QAAUA,IAAQxB,QAAQ,SAAAvF,GACnD,GAAM0J,IAAY,EAAAnH,EAAA8B,WAAUrE,EAAEuD,OACxBoG,GAAkB,EAAApH,EAAA8B,WAAUqB,EAAUM,UAEtC0D,IAAaC,EAAkBtG,EAAKsF,SAAW,IAC5Ce,EAAY1J,EAAEqD,KAAKsF,SAAW,IAAMgB,GAErCC,QAAQC,IAAI7J,EAAEqD,KAAKyG,YAKnCX,EAAIxF,KAAK,QAAS,GAClBwF,EAAIxB,YAKVd,EAAY,SAACjB,GACf,GAAoB,IAAhBA,EAAMmE,MAAV,CAEA,GAAMC,GAAmBxI,EAAC,IAAKoB,EAASqH,yBAClClE,EAAQvE,EAAEoE,EAAMsE,eAEhBpE,EACFC,EAAMrC,QACDC,KAAK,QAASoC,EAAMpC,KAAK,UACzBA,KAAK,WAAYoC,EAAMpC,KAAK,aAC5BjB,SAAYE,EAASE,aAAaC,iBAAgB,WAClD4D,YAAe/D,EAASE,aAAaC,iBAAgB,WACrD2D,MAAMX,EAAMW,SACZrB,SAAS2E,GAIZjC,EAAUnC,EAAMsC,MAAQtC,EAAMmC,QAChCC,EAAUpC,EAAMwC,MAAQxC,EAAMoC,OAElClC,GAAYQ,KACRC,IAAKyB,EAAU,KACfxB,KAAMuB,EAAU,OAGpBrC,GACIK,MAAAA,EACAD,YAAAA,EACAiC,QAASnC,EAAMmC,QACfC,QAASpC,EAAMoC,QAGnB,IAAMpE,GAAQuC,SAASJ,EAAMpC,KAAK,UAC5Ba,IAAesB,EAAYnC,KAAK,WACzBY,GAAQX,EAAOY,EAE5BuB,GAAM4B,OAEN5C,EAAe6B,GAAG,YAAaiB,GAC/B9C,EAAe6B,GAAG,UAAWjB,GAE7BC,EAAMuE,kBAGV3I,GAAE,IAAMoB,EAASE,aAAaC,kBAAkB6D,GAAG,YAAaC,GHoDpEhG,GAAQ,WGjDOyD,EHkDfrD,EAAOJ,QAAUA,EAAQ,aAEtBuJ,cAAc,EAAEC,WAAW,IAAIC,GAAG,SAAS/J,EAAQU,EAAOJ,GAC7D,YAEAmB,QAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAEX,IAAIqI,GAAaC,UInUXC,GAEFC,QAAS,KACTjG,SAGAzB,SAEA2H,kBAAmB,gBAInBC,aAAc,mBAGdX,wBAAyB,mBACzBY,kBAAmB,qBACnBC,wBAAyB,mBACzBC,2BAA4B,gBAC5BC,wBAAyB,4BACzB9F,qCAAsC,gCACtC+F,aAAc,gBACdC,yBAA0B,oBAC1BC,wBAAyB,mBAEzBnE,WAAY,GACZoE,YAAa,EACbC,YAAa,IACbC,eAAgB,IAEhBtH,YAAa,EAEbuH,qBAAqB,EAErBC,OAAO,EAEP1I,cACI2I,SAAS,EACT3G,cAAe,iBACfoB,iBAAkB,oBAClBtB,kBAAmB,kBACnB7B,iBAAkB,UAClBI,iBAAkB,yBAClBiC,MAAO,QACPgC,qBAAsB,WAAQwC,QAAQC,IAAGU,IACzC9C,kBAAmB,WAAQmC,QAAQC,IAAGU,IACtChB,UAAW,WAAQ,OAASE,OAAO,KJ8U3C5I,GI1US4J,gBAAAA,OJ4UHiB,GAAG,SAASnL,EAAQU,EAAOJ,GACjC,YAQA,SAASK,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAEzF,QAASwK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCARhH9J,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAI6J,GAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI1L,GAAI,EAAGA,EAAI0L,EAAMnL,OAAQP,IAAK,CAAE,GAAI2L,GAAaD,EAAM1L,EAAI2L,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMtK,OAAOC,eAAegK,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MAM7hBc,EAAYpM,EK3YgB,cL6Y5BqM,EAASrM,EK5YqB,WL8Y9BsM,EAAU3L,EAAuB0L,GAEjCtK,EAAY/B,EK/YgB,cLiZ5BgC,EAAShC,EKhZa,WAEpBiC,EAAM,SAACC,GLiZT,MKjZsBjB,GAAE,eAAekB,SAASD,IAE9CqK,EAAQ,WACC,QADTA,GACUlL,EAAYD,GLmZpBgK,EAAgB9J,KKpZlBiL,GAEEjL,KAAKe,SAAWpB,EAAEuL,QAAO,EAAIJ,EAAAlC,gBAAmB9I,GAChDE,KAAKD,WAAaA,EAClBC,KAAKkD,eAAiBvD,EAAEI,EAAW,GAAGoD,eACtCnD,KAAKmL,iBAAmB,KACxBnL,KAAKoL,YAAc,KACnBpL,KAAK6D,UAAY,KACjB7D,KAAKqL,kBAAmB,EAEpBrL,KAAKe,SAAS4I,OACd5B,QAAQxG,KAAK,YAGjBvB,KAAKsL,UAEDtL,KAAKe,SAAS4I,OACd5B,QAAQwD,QAAQ,YLssBxB,MA9SArB,GKzaEe,IL0aEP,IAAK,iBACLrK,MKtZU,SAAC8B,GACXnC,KAAKe,SAASoB,YAAcA,EAC5BnC,KAAKsL,aLyZLZ,IAAK,sBACLrK,MKvZe,SAACgL,GAChBrL,KAAKqL,iBAAmBA,KL0ZxBX,IAAK,UACLrK,MKxZG,WLyZC,GAAIgH,GAAQrH,IKxZhBA,MAAKe,SAASI,MAAQnB,KAAKe,SAASI,OAASnB,KAAKe,SAASI,MAAMS,IAC7D,SAACJ,EAAMO,GL0ZH,MK1Za5B,QAAOqL,WAAYzJ,MAAAA,GAAQP,SAEhDxB,KAAKe,SAAS6B,MAAQ5C,KAAKe,SAAS6B,OAAS5C,KAAKe,SAAS6B,MAAMhB,IAC7D,SAAC8D,EAAM3D,GAEH,MADA2D,GAAKlE,KAAOrB,OAAOqL,WAAYzJ,MAAOA,EAAQsF,EAAKtG,SAASI,MAAMjC,QAASwG,EAAKlE,MACzEkE,QAIf1F,KAAKyL,WACDzL,KAAKe,SAASE,aAAa2I,UAC3B,EAAAoB,EAAA,YAAsBhL,KAAKe,aL4Z/B2J,IAAK,WACLrK,MKzZI,WL0ZA,GAAIqL,GAAS1L,IKzZjBA,MAAKD,WAAWiD,QAChBhD,KAAKD,WAAWc,SAASb,KAAKe,SAASiI,kBAEvC,IAAMH,GAAU7I,KAAKe,SAAS8H,QAC1B7I,KAAKe,SAAS8H,QACd7I,KAAKe,SAASe,KAAKF,IAAI5B,KAAKe,SAAS4K,UAGzC3L,MAAKmL,iBAAmBxK,EAAIX,KAAKe,SAASkI,yBAC1CJ,EAAQnF,QAAQ,SAACkI,GACbjL,IAAMkL,KAAKD,GACNpI,SAASkI,EAAKP,mBACpBnL,MACHA,KAAKD,WAAW6D,OAAO5D,KAAKmL,kBAG5BnL,KAAKoL,YAAczK,EAAIX,KAAKe,SAASmI,2BAMrC,KAAK,GALC4C,GAAqBnL,EAAIX,KAAKe,SAASmI,2BAA6B,aACpE6C,EAAiBpL,EAAIX,KAAKe,SAASmI,2BAA6B,SAEhE8C,EAAoBrL,IAEjBhC,EAAI,EAAGA,EAAI,GAAIA,IAEpB,IAAK,GAAIsN,GAAI,EAAGA,EAAIjM,KAAKe,SAASoB,YAAa8J,IAAK,CAChD,GAAIC,GAAevL,IACdiE,OAAO5E,KAAKe,SAASoE,YACrBtE,SAASoL,GAAKjM,KAAKe,SAASoB,YAAc,EAAI,OAAS,GAEnD,IAAL8J,IACAC,EAAeA,EACVzH,IAAI,cAAezE,KAAKe,SAASoE,WAAa,MAC9C0G,KAAU,GAALI,EAASjM,KAAKmM,aAAaxN,GAAK,KAE9CuN,EAAa1I,SAASsI,GAEtBnL,EAAIX,KAAKe,SAASqI,cACbxE,OAAO5E,KAAKe,SAASoE,YACrBtE,SAASoL,GAAKjM,KAAKe,SAASoB,YAAc,EAAI,OAAS,IACvDqB,SAASwI,GAKtB,IAAK,GAAIC,GAAI,EAAGA,EAAIpD,EAAQ3J,OAAQ+M,IAAK,CACrC,GAAMtI,GAAKqI,EAAkBnK,QAGvBuK,EAAgCzL,EAAIX,KAAKe,SAASsC,sCAClDgJ,EAAYrM,KAAKe,SAASe,KAAKmK,GAAG3G,kBACxCtF,MAAKsM,wBAAwBF,EAA+BC,EAAWJ,GAEvEtI,EAAG4I,QAAQH,GACXzI,EAAGH,SAASuI,GAEZ/L,KAAKwM,kBAAkBP,EAAGjM,KAAKe,SAASyI,aAG5CxJ,KAAKoL,YAAYxH,OAAOkI,GACxB9L,KAAKoL,YAAYxH,OAAOmI,GAExB/L,KAAKD,WAAW6D,OAAO5D,KAAKoL,YAG5B,KAAK,GAAIa,GAAI,EAAGA,EAAIpD,EAAQ3J,OAAQ+M,IAChCjM,KAAKwM,kBAAkBP,EAAGjM,KAAKe,SAASyI,YAIxCxJ,MAAKe,SAAS2I,qBACd1J,KAAKyM,uBLqZT/B,IAAK,QACLrK,MKlZC,WACD,MAAOL,MAAKe,SAAS6B,SLqZrB8H,IAAK,oBACLrK,MKnZa,WLoZT,GAAIqM,GAAS1M,KKnZX2M,EAA6BhM,EAAIX,KAAKe,SAASsI,yBAErDrJ,MAAKD,WAAWwM,QAAQI,GAExBA,EAA2B9H,MAAM7E,KAAKD,WAAW8E,QAEjD,IAAM+H,GAAwB5M,KAAKoL,YAAYxG,SAAW5E,KAAKmL,iBAAiBvG,SAC5E7C,EAAQ,CACZ/B,MAAKmL,iBAAiBxF,KAAK,OAAOoB,KAAK,SAAC8F,EAAGlJ,GACvChD,EAAI+L,EAAK3L,SAASuI,yBACb7E,IAAI,OAAQd,EAAGmJ,WAAanJ,EAAGoJ,aAC/BnI,OAAOgI,GACP9K,KAAK,YAAaC,KAClByB,SAASmJ,KAGlBA,EAA2B5H,GAAG,YAAa,IAAM/E,KAAKe,SAASuI,wBAAyBtJ,KAAKgN,oBAAoBC,KAAKjN,ULoZtH0K,IAAK,0BACLrK,MKlZmB,SAAC6M,EAAab,EAAWnH,GLmZxC,GAAIiI,GAASnN,IKlZjBqM,GAAU3I,QAAQ,SAACjC,EAAUM,GACzB,GAAMqL,GAAezM,IAAMkL,KAAKsB,EAAKpM,SAAS+H,mBACxCpE,EAAMyI,EAAKE,mBAAmB5L,EAASC,OAAS,EAChDoF,GAAW,EAAApG,EAAA8B,WAAUf,EAASE,MAAO,EAAAjB,EAAA8B,WAAUf,EAASC,OACxDkD,EAASuI,EAAKG,cAAcxG,GAAY,EAExCyG,EAAsB5M,EAAIwM,EAAKpM,SAASE,aAAaoD,kBAAkByB,OAEvE0H,EAAW7M,IACZ8M,MACGC,MAAO,QAAUhJ,EAAM,eAAiBE,EAAS,MAGzD4I,GACK1L,KAAK,SAAUoD,GACfpD,KAAK,aAAcC,GACnB6B,OAAOwJ,GACPxJ,OAAO2J,GACP/J,SAAS0J,GAEdC,EAAKQ,YACDH,EACA/L,EAASC,MACTyL,EAAKpM,SAAS6B,MAAMC,OAAO,SAAA1E,GL4YvB,MK5Y4BA,GAAE+G,QAAUA,MAGjDlF,SLmZH0K,IAAK,cACLrK,MK9YO,SAAC6M,EAAaU,EAAehL,GL+YhC,GAAIiL,GAAS7N,IK9YjB4C,GAAMc,QAAQ,SAACgC,GACX,GAAIhB,GAAMmJ,EAAKR,mBAAmB3H,EAAKhE,MAAOkM,GAC1ChJ,EAASiJ,EAAKP,cAAc5H,EAAKlE,KAAKsF,SAAW,GAErD+G,GAAKC,WAAWpI,EAAKlE,MAChBiM,MACGC,MAAO,QAAUhJ,EAAM,eAAiBE,EAAS,OAEpD/D,SAAQ,GAAIgN,EAAK9M,SAASE,aAAaC,kBACvCL,SAAYgN,EAAK9M,SAASE,aAAaC,iBAAgB,WACvD2D,MAAM,QACN/C,KAAK,QAAS4D,EAAKlE,KAAKO,OACxBD,KAAK,WAAY,GACjB0B,SAAS0J,IACflN,SL4YH0K,IAAK,oBACLrK,MK1Ya,SAAC0D,GACL/D,KAAK6D,SACT7D,MAAK6D,YAEV7D,KAAKkD,eAAe6C,IAAI,WACxB/F,KAAKkD,eAAe6C,IAAI,aAExB/F,KAAK6D,UAAY,SL+YjB6G,IAAK,sBACLrK,MK7Ye,SAAC0D,GAChB,GAAIgK,GAAK/N,KAAK6D,SACd,IAAK7D,KAAK6D,UAAV,CAGA,GAAImK,GAAcjK,EAAMsC,MAAQ0H,EAAGE,MACnC,IAAmB,IAAfD,EAAJ,CAIA,GAAIE,GAAeH,EAAGG,aAClBrJ,EAAQkJ,EAAGlJ,MAAQmJ,CACvB,IAAIhO,KAAKqL,iBACL,IAAK,GAAI1M,GAAI,EAAGA,EAAIqB,KAAKe,SAASe,KAAK5C,OAAQP,IAC3CqB,KAAKwM,kBAAkB7N,EAAGkG,EAAMsJ,QAAQ,QAG5CnO,MAAKwM,kBAAkB0B,EAAcrJ,EAAMsJ,QAAQ,SLmZvDzD,IAAK,sBACLrK,MKhZe,SAAC0D,GAEhB,GAAoB,IAAhBA,EAAMmE,MAAV,CAKIlI,KAAK6D,WACL7D,KAAKoO,OAAOrK,EAGhB,IAAIsK,GAAe1O,EAAEoE,EAAMsE,eACvB6F,EAAeG,EAAavM,KAAK,aAEjCwM,EAAYD,EAAatM,QACzBwM,EAAcvO,KAAKmL,iBAAiBxF,KAAK,OAAO6I,GAAGF,GAEnDG,EAAYF,EAAY,GAAGxB,WAE/B/M,MAAK6D,WACDqK,aAAAA,EACAD,OAAQlK,EAAMsC,MACdxB,MAAO4J,GAGXzO,KAAKkD,eAAe6B,GAAG,YAAa/E,KAAK0O,oBAAoBzB,KAAKjN,OAClEA,KAAKkD,eAAe6B,GAAG,UAAW/E,KAAKoO,OAAOnB,KAAKjN,OAEnD+D,EAAMuE,qBLqZNoC,IAAK,oBACLrK,MKnZa,SAAC6N,EAAcrJ,GAC5BA,EAAQzC,KAAKC,IAAIwC,EAAO7E,KAAKe,SAAS0I,gBACtC9J,EAAE,IAAMK,KAAKe,SAASkI,wBAA0B,aAAeiF,EAAe,KACzEzJ,IAAI,aAAcI,EAAQ,KAE/B,IAAIK,GAASvF,EAAE,IAAMK,KAAKe,SAASmI,2BAA6B,kBAAoBgF,EAAe,QAAUlO,KAAKe,SAASqI,cACvHuF,EAAOzJ,EAAOL,QAAUA,CAC5BK,GAAOL,MAAMA,GAEblF,EAAE,IAAMK,KAAKe,SAASsI,yBAA2B,UAAUtC,KAAK,SAAChF,EAAO4B,GACpE,GAAI5B,GAASmM,EAAc,CACvB,GAAI5G,GAAM3H,EAAEgE,GACRgB,EAAOL,SAASgD,EAAI7C,IAAI,QAAQmK,QAAQ,KAAM,IAClDtH,GAAI7C,IAAI,OAAQE,EAAOgK,SLuZ/BjE,IAAK,aACLrK,MKnZM,SAACmB,GACP,GACMJ,IADOT,EAAIX,KAAKe,SAASE,aAAaC,mBAC3B,EAAAT,EAAAY,iBAAgBrB,KAAKe,SAASE,aAAaK,kBACxDC,KAAM,SAACC,GLoZC,MKpZQA,GAAKC,SAAcD,EAAKC,SAASC,MAAK,OAAOF,EAAKC,SAASE,IAAQ,MAGvF,OAAOhB,KAAMqB,KAAKZ,EAASI,OL4Z3BkJ,IAAK,eACLrK,MKvZQ,SAACA,GACT,OAAQA,EAAQ,GAAK,IAAM,IAAM+B,KAAKmF,MAAMlH,IAAU+B,KAAKyM,KAAKxO,GAAS+B,KAAKmF,MAAMlH,GAAS,MAAQ,UL+ZrGqK,IAAK,gBACLrK,MKzZS,SAACyG,GACV,GAAMgI,GAA+B,GAAXhI,EACpBiI,GAAkB/O,KAAKe,SAASoE,WAAanF,KAAKe,SAASwI,aAAevJ,KAAKe,SAASoB,YAAc,EAC5G,OAAOC,MAAKyM,KAAKC,EAAoBC,MLiarCrE,IAAK,qBACLrK,MK3Zc,SAAC8D,EAAW6K,GAC1B,GAAIC,IAAe,EAAAvO,EAAA8B,WAAU2B,EAI7B,OAHI6K,KACAC,IAAgB,EAAAvO,EAAA8B,WAAUwM,KAEtBhP,KAAKe,SAASoE,WAAanF,KAAKe,SAASwI,cAAgB0F,EAAejP,KAAKe,SAASoB,iBAxThG8I,IL0tBNjM,GAAQ,WK9ZOiM,EL+Zf7L,EAAOJ,QAAUA,EAAQ,aAEtBkQ,UAAU,EAAEC,aAAa,EAAEC,aAAa,EAAEC,UAAU,IAAIC,GAAG,SAAS5Q,EAAQU,EAAOJ,GACtF,YAEAmB,QAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GMxuBX,IAAMgB,GAAkB,SAACD,EAAUmO,GN2uB/B,MM3uByC,UAAA/N,GAMzC,IALA,GAAIgO,GAASpO,EACPqO,EAAU,eACVC,EAAW,mBAEb9H,EAAQ,IACC,CAET,GADAA,EAAQ6H,EAAQE,KAAKvO,IAChBwG,EAAO,KAEZ,IAAI8C,GAAM9C,EAAM,EACZpG,GAAKoO,eAAelF,KACpB8E,EAASA,EAAOZ,QAAQhH,EAAM,GAAIpG,EAAKkJ,KAI/C,KAAO6E,IACH3H,EAAQ8H,EAASC,KAAKvO,KADZ,CAIV,GAAIsJ,GAAM9C,EAAM,EACZ2H,GAAMK,eAAelF,KACrB8E,EAASA,EAAOZ,QAAQhH,EAAM,GAAI2H,EAAM7E,GAAKlJ,KAIrD,MAAOgO,IN+uBXxQ,GAAQ,YM5uBSqC,gBAAAA,GN6uBjBjC,EAAOJ,QAAUA,EAAQ,gBAEnB6Q,GAAG,SAASnR,EAAQU,EAAOJ,GAKjC,YO7wBO,SAASwD,GAAUjB,GACtB,MAAO,iBAAiBuO,KAAKvO,GACzB+C,SAAS/C,EAAKwO,MAAM,KAAK,IAAMzL,SAAS/C,EAAKwO,MAAM,KAAK,IAAM,GAC9DzL,SAAS/C,GAGV,QAASgB,GAAOlC,GAEnB,OAAQA,EAAQ,GAAK,IAAM,IAAM+B,KAAKmF,MAAMlH,IAAU+B,KAAKyM,KAAKxO,GAAS+B,KAAKmF,MAAMlH,GAAS,MAAQ,OPuwBzGF,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,IAEXrB,EAAQwD,UAAYA,EACpBxD,EAAQuD,OAASA,YAYN","file":"jquery.skeduler.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * jquery-skeduler - This is jQuery plugin which provider you simple scheduler with some items on OX and 24-hours timeline on OY.\n * @date Sun Aug 20 2017 22:00:42 GMT+1000 (+10)\n * @version v0.2.0-beta.0\n * @link \n * @license ISC\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\n/**\n * Generate scheduler grid with task cards\n * options:\n * - headers: string[] - array of headers\n * - tasks: Task[] - array of tasks\n * - containerCssClass: string - css class of main container\n * - headerContainerCssClass: string - css class of header container\n * - schedulerContainerCssClass: string - css class of scheduler\n * - lineHeight - height of one half-hour cell in grid\n * - borderWidth - width of border of cell in grid\n */\n$.fn.skeduler = function (options) {\n  var $container = $(this);\n  var skeduler = new _skeduler2['default']($container, options);\n\n  return skeduler;\n};\n\n$.skeduler = _skeduler2['default'];\n\n},{\"./skeduler\":5}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nexports['default'] = _skeduler2['default'];\nmodule.exports = exports['default'];\n\n},{\"./adapter\":1,\"./skeduler\":5}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _template = require('../template');\n\nvar _utils = require('../utils');\n\nvar div = function div(cssClass) {\n    return $('<div></div>').addClass(cssClass);\n};\n\nvar getItemDivs = function getItemDivs(settings) {\n    var $div = div(settings.itemsOptions.itemCardCssClass);\n    var items = settings.items;\n    var template = (0, _template.compileTemplate)(settings.itemsOptions.itemCardTemplate, {\n        time: function time(item) {\n            return item.interval ? item.interval.start + ' to ' + item.interval.end : '';\n        }\n    });\n\n    return items.map(function (item) {\n        return $div.clone().data('index', item.index).html(template(item));\n    });\n};\n\nvar findStartTime = function findStartTime(rowIndex, rowsPerHour, interval) {\n    rowIndex = Math.max(0, rowIndex);\n    var hoursFromTop = rowIndex / rowsPerHour;\n\n    return (0, _utils.toTime)(hoursFromTop + (0, _utils.parseTime)(interval.start));\n};\n\nvar populateSkedulerItems = function populateSkedulerItems(settings) {\n    var getItem = function getItem(index, isAssigned) {\n        return isAssigned ? settings.tasks.filter(function (t) {\n            return t.item.index === index;\n        })[0].item : settings.items.filter(function (i) {\n            return i.index === index;\n        })[0];\n    };\n\n    var $skedulerItemsEl = $(settings.itemsOptions.containerSelector).empty().addClass(settings.itemsOptions.itemsCssClass);\n    var $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    var $shifts = $('.' + settings.availableIntervalPlaceholderCssClass + ' > div');\n\n    var $headerDiv = div().html('<h1 class=\"si-header\">' + settings.itemsOptions.title + '</h1>').appendTo($skedulerItemsEl);\n\n    var $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(function (el) {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    var operation = null;\n\n    var mouseUp = function mouseUp(event) {\n        if (operation == null) return;\n\n        var _operation = operation;\n        var $movingCard = _operation.$movingCard;\n        var $card = _operation.$card;\n        var startTime = _operation.startTime;\n\n        var $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        var index = parseInt($movingCard.data('index'));\n        var isAssigned = !!$movingCard.data('assigned');\n        var item = getItem(index, isAssigned);\n\n        if ($skedulerItemsContainerEl.data('selected') == 1) {\n            if (isAssigned) {\n                settings.tasks = settings.tasks.filter(function (t) {\n                    return t.item.index != index;\n                });\n                settings.items.push(item);\n            }\n\n            $movingCard.detach().css({ top: 'auto', left: 'auto' }).height('auto').width('auto').data('assigned', 0).removeClass(settings.itemsOptions.itemCardCssClass + '-moving').removeClass(settings.itemsOptions.itemCardCssClass + '-pinned').appendTo($skedulerItemsContainerEl);\n\n            $movingCard.on('mousedown', mouseDown);\n            $card.remove();\n        } else if ($siEl.length !== 0 && $siEl.data('match') == 1) {\n            var rowHeight = settings.lineHeight + 1;\n            var column = parseInt($siEl.parent().data('column'));\n            var offsetInMinutes = (0, _utils.parseTime)(startTime) * 60;\n\n            var interval = settings.data[column].availableIntervals[$siEl.parent().data('item-index')];\n\n            settings.itemsOptions.onItemWillBeAssigned && settings.itemsOptions.onItemWillBeAssigned({ item: item, interval: interval, offsetInMinutes: offsetInMinutes });\n\n            $movingCard.detach().css({ top: $siEl[0].offsetTop, left: 0 }).height($siEl[0].clientHeight).width('auto').data('assigned', 1).removeClass(settings.itemsOptions.itemCardCssClass + '-moving').addClass(settings.itemsOptions.itemCardCssClass + '-pinned').appendTo($siEl.parent());\n\n            $movingCard.on('mousedown', mouseDown);\n            $card.remove();\n\n            if (!isAssigned) {\n                settings.tasks.push({\n                    column: column,\n                    start: startTime,\n                    item: item\n                });\n            } else {\n                var task = settings.tasks.find(function (t) {\n                    return t.item.index === index;\n                });\n                task.start = startTime, task.column = column;\n            }\n\n            settings.itemsOptions.onItemDidAssigned && settings.itemsOptions.onItemDidAssigned({ item: item, interval: interval, offsetInMinutes: offsetInMinutes });\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\n        $skedulerItemsContainerEl.removeClass('highlighted');\n        $skedulerItemsContainerEl.data('selected', 0);\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    var mouseMove = function mouseMove(event) {\n        if (operation == null) return;\n\n        var _operation2 = operation;\n        var $movingCard = _operation2.$movingCard;\n        var offsetX = _operation2.offsetX;\n        var offsetY = _operation2.offsetY;\n\n        var newOffsetX = event.pageX - offsetX,\n            newOffsetY = event.pageY - offsetY;\n\n        $movingCard.css({\n            top: newOffsetY + 'px',\n            left: newOffsetX + 'px'\n        });\n\n        // Higlight shifts\n        var _window = $ownerDocument[0].defaultView;\n        var x = event.pageX;\n        var y = event.pageY - _window.scrollY;\n\n        var rowHeight = settings.lineHeight + 1;\n        var rowsPerHour = settings.rowsPerHour;\n\n        var index = parseInt($movingCard.data('index'));\n        var isAssigned = !!$movingCard.data('assigned');\n        var item = getItem(index, isAssigned);\n        var duration = item.duration;\n        var height = duration * (rowHeight * rowsPerHour / 60);\n\n        $skedulerItemsContainerEl.each(function () {\n            var $this = $(this);\n            var elementBounding = this.getBoundingClientRect();\n\n            if (x > elementBounding.left && x < elementBounding.right && y > elementBounding.top && y < elementBounding.bottom) {\n                $this.addClass('highlighted');\n                $skedulerItemsContainerEl.data('selected', 1);\n            } else {\n                $this.removeClass('highlighted');\n                $skedulerItemsContainerEl.data('selected', 0);\n            }\n        });\n        $shifts.each(function () {\n            var _this = this;\n\n            var $this = $(this);\n            var elementBounding = this.getBoundingClientRect();\n            var $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\n\n            if (x > elementBounding.left && x < elementBounding.right && y > elementBounding.top && y < elementBounding.bottom) {\n                (function () {\n\n                    var offsetTop = y - elementBounding.top;\n                    var rowIndex = Math.floor(offsetTop / rowHeight) - 1;\n                    var top = Math.min(Math.max(0, rowIndex * rowHeight), _this.clientHeight - height);\n\n                    var column = +$this.data('column');\n                    var offsetInMinutes = 60 / settings.rowsPerHour * (top / rowHeight); // <<== FIXME\n                    var interval = settings.data[column].availableIntervals[$this.data('item-index')];\n                    var matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\n\n                    operation.startTime = findStartTime(rowIndex, rowsPerHour, interval);\n\n                    $el.css({ top: top }).css('background-color', matchResult.color).height(height).show();\n\n                    $el.data('match', +matchResult.match);\n\n                    if (matchResult.match) {\n                        settings.tasks.filter(function (t) {\n                            return t.column == column;\n                        }).forEach(function (t) {\n                            var taskStart = (0, _utils.parseTime)(t.start);\n                            var movingTaskStart = (0, _utils.parseTime)(operation.startTime);\n\n                            if (!(taskStart >= movingTaskStart + item.duration / 60) && !(taskStart + t.item.duration / 60 <= movingTaskStart)) {\n                                // TODO t is a conflicted task\n                                console.log(t.item.name);\n                            }\n                        });\n                    }\n                })();\n            } else {\n                $el.data('match', 0);\n                $el.hide();\n            }\n        });\n    };\n\n    var mouseDown = function mouseDown(event /*: MouseEvent */) {\n        if (event.which !== 1) {\n            return;\n        }\n\n        var $skedulerWrapper = $('.' + settings.skedulerWrapperCssClass);\n        var $card = $(event.currentTarget);\n\n        var $movingCard = $card.clone().data('index', $card.data('index')).data('assigned', $card.data('assigned')).addClass(settings.itemsOptions.itemCardCssClass + '-moving').removeClass(settings.itemsOptions.itemCardCssClass + '-pinned').width($card.width()).appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        var offsetX = event.pageX - event.offsetX,\n            offsetY = event.pageY - event.offsetY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card: $card,\n            $movingCard: $movingCard,\n            offsetX: event.offsetX,\n            offsetY: event.offsetY\n        };\n\n        var index = parseInt($card.data('index'));\n        var isAssigned = !!$movingCard.data('assigned');\n        var item = getItem(index, isAssigned);\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDown);\n};\n\nexports['default'] = populateSkedulerItems;\nmodule.exports = exports['default'];\n\n},{\"../template\":6,\"../utils\":7}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar _arguments = arguments;\nvar defaultSettings = {\n    // Data attributes\n    headers: null, // string[] - Array of column headers\n    tasks: [], // Task[] - Array of tasks. Required fields:\n    // id: number, startTime: number, duration: number, column: number\n\n    items: [], // Item[] - Array of not-assingned tasks\n\n    notAllocatedLabel: 'Not allocated',\n\n    // Card template - Inner content of task card.\n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    availableIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30, // height of one line in grid\n    borderWidth: 1, // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2, // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: false,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '<div>${duration}</div>',\n        title: 'Items',\n        onItemWillBeAssigned: function onItemWillBeAssigned() {\n            console.log(_arguments);\n        },\n        onItemDidAssigned: function onItemDidAssigned() {\n            console.log(_arguments);\n        },\n        matchFunc: function matchFunc() {\n            return { match: true };\n        }\n    }\n};\n\nexports.defaultSettings = defaultSettings;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _settings = require('./settings');\n\nvar _items = require('./items');\n\nvar _items2 = _interopRequireDefault(_items);\n\nvar _template = require('./template');\n\nvar _utils = require('./utils');\n\nvar div = function div(cssClass) {\n    return $('<div></div>').addClass(cssClass);\n};\n\nvar Skeduler = (function () {\n    function Skeduler($container, options) {\n        _classCallCheck(this, Skeduler);\n\n        this.settings = $.extend(true, _settings.defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null;\n        this.operation = null;\n        this.resizeAllColumns = true;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.refresh();\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    _createClass(Skeduler, [{\n        key: 'setRowsPerHour',\n        value: function setRowsPerHour(rowsPerHour) {\n            this.settings.rowsPerHour = rowsPerHour;\n            this.refresh();\n        }\n    }, {\n        key: 'setResizeAllColumns',\n        value: function setResizeAllColumns(resizeAllColumns) {\n            this.resizeAllColumns = resizeAllColumns;\n        }\n    }, {\n        key: 'refresh',\n        value: function refresh() {\n            var _this = this;\n\n            this.settings.items = this.settings.items && this.settings.items.map(function (item, index) {\n                return Object.assign({}, { index: index }, item);\n            }) || [];\n            this.settings.tasks = this.settings.tasks && this.settings.tasks.map(function (task, index) {\n                task.item = Object.assign({}, { index: index + _this.settings.items.length }, task.item);\n                return task;\n            }) || [];\n\n            this.populate();\n            if (this.settings.itemsOptions.enabled) {\n                (0, _items2['default'])(this.settings);\n            }\n        }\n    }, {\n        key: 'populate',\n        value: function populate() {\n            var _this2 = this;\n\n            this.$container.empty();\n            this.$container.addClass(this.settings.containerCssClass);\n\n            var headers = this.settings.headers ? this.settings.headers : this.settings.data.map(this.settings.getHeader);\n\n            // Add headers\n            this.$headerContainer = div(this.settings.headerContainerCssClass);\n            headers.forEach(function (element) {\n                div().text(element).appendTo(_this2.$headerContainer);\n            }, this);\n            this.$container.append(this.$headerContainer);\n\n            // Add scheduler\n            this.$scheduleEl = div(this.settings.schedulerContainerCssClass);\n            var scheduleTimelineEl = div(this.settings.schedulerContainerCssClass + '-timeline');\n            var scheduleBodyEl = div(this.settings.schedulerContainerCssClass + '-body');\n\n            var gridColumnElement = div();\n\n            for (var i = 0; i < 24; i++) {\n                // Populate timeline\n                for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                    var timelineCell = div().height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                    if (j == 0) {\n                        timelineCell = timelineCell.css(\"line-height\", this.settings.lineHeight + 'px').text(j == 0 ? this.toTimeString(i) : \"\");\n                    }\n                    timelineCell.appendTo(scheduleTimelineEl);\n\n                    div(this.settings.cellCssClass).height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\").appendTo(gridColumnElement);\n                }\n            }\n\n            // Populate grid\n            for (var j = 0; j < headers.length; j++) {\n                var el = gridColumnElement.clone();\n\n                // fixme [availableIntervals must not use index]\n                var availableIntervalsPlaceholder = div(this.settings.availableIntervalPlaceholderCssClass);\n                var intervals = this.settings.data[j].availableIntervals;\n                this.appendAvailableInterval(availableIntervalsPlaceholder, intervals, j);\n\n                el.prepend(availableIntervalsPlaceholder);\n                el.appendTo(scheduleBodyEl);\n\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            this.$scheduleEl.append(scheduleTimelineEl);\n            this.$scheduleEl.append(scheduleBodyEl);\n\n            this.$container.append(this.$scheduleEl);\n\n            // Set default width for columns\n            for (var j = 0; j < headers.length; j++) {\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            // Configure resizing\n            if (this.settings.columnResizeEnabled) {\n                this.configureResizing();\n            }\n        }\n    }, {\n        key: 'tasks',\n        value: function tasks() {\n            return this.settings.tasks;\n        }\n    }, {\n        key: 'configureResizing',\n        value: function configureResizing() {\n            var _this3 = this;\n\n            var skedulerElResizableHandler = div(this.settings.resizableHandlerCssClass);\n\n            this.$container.prepend(skedulerElResizableHandler);\n\n            skedulerElResizableHandler.width(this.$container.width());\n\n            var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n            var index = 0;\n            this.$headerContainer.find('div').each(function (_, el) {\n                div(_this3.settings.resizableSliderCssClass).css('left', el.offsetLeft + el.clientWidth).height(resizableSliderHeight).data('column-id', index++).appendTo(skedulerElResizableHandler);\n            });\n\n            skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onResizePointerDown.bind(this));\n        }\n    }, {\n        key: 'appendAvailableInterval',\n        value: function appendAvailableInterval(placeholder, intervals, column) {\n            var _this4 = this;\n\n            intervals.forEach(function (interval, index) {\n                var innerContent = div().text(_this4.settings.notAllocatedLabel);\n                var top = _this4.getCardTopPosition(interval.start) + 2;\n                var duration = (0, _utils.parseTime)(interval.end) - (0, _utils.parseTime)(interval.start);\n                var height = _this4.getCardHeight(duration) - 5;\n\n                var skItemHightlightDiv = div(_this4.settings.itemsOptions.highlightItemCss).hide();\n\n                var shiftDiv = div().attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n                shiftDiv.data('column', column).data('item-index', index).append(innerContent).append(skItemHightlightDiv).appendTo(placeholder);\n\n                _this4.appendTasks(shiftDiv, interval.start, _this4.settings.tasks.filter(function (t) {\n                    return t.column == column;\n                }));\n                // TODO: ^^^ filter by shift interval too\n            }, this);\n        }\n\n        /** \n         * Generate task cards\n         */\n    }, {\n        key: 'appendTasks',\n        value: function appendTasks(placeholder, intervalStart, tasks) {\n            var _this5 = this;\n\n            tasks.forEach(function (task) {\n                var top = _this5.getCardTopPosition(task.start, intervalStart);\n                var height = _this5.getCardHeight(task.item.duration / 60);\n\n                _this5.getItemDiv(task.item).attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                }).addClass('' + _this5.settings.itemsOptions.itemCardCssClass).addClass(_this5.settings.itemsOptions.itemCardCssClass + '-pinned').width('auto').data('index', task.item.index).data('assigned', 1).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'onResizePointerUp',\n        value: function onResizePointerUp(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            this.$ownerDocument.off('mouseup');\n            this.$ownerDocument.off('mousemove');\n\n            this.operation = null;\n        }\n    }, {\n        key: 'onResizePointerMove',\n        value: function onResizePointerMove(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            // Determine the delta change between start and new mouse position, as a percentage of the table width\n            var difference = event.pageX - op.startX; // / this.$scheduleEl.width() * 100;\n            if (difference === 0) {\n                return;\n            }\n\n            var columnNumber = op.columnNumber;\n            var width = op.width + difference;\n            if (this.resizeAllColumns) {\n                for (var i = 0; i < this.settings.data.length; i++) {\n                    this.updateColumnWidth(i, width.toFixed(2));\n                }\n            } else {\n                this.updateColumnWidth(columnNumber, width.toFixed(2));\n            }\n        }\n    }, {\n        key: 'onResizePointerDown',\n        value: function onResizePointerDown(event) {\n            // Only applies to left-click dragging\n            if (event.which !== 1) {\n                return;\n            }\n\n            // If a previous this.operation is defined, we missed the last mouseup.\n            // Probably gobbled up by user mousing out the window then releasing.\n            // We'll simulate a pointerup here prior to it\n            if (this.operation) {\n                this.Resize(event);\n            }\n\n            var $currentGrip = $(event.currentTarget);\n            var columnNumber = $currentGrip.data('column-id');\n\n            var gripIndex = $currentGrip.index();\n            var $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n            var leftWidth = $leftColumn[0].clientWidth;\n\n            this.operation = {\n                columnNumber: columnNumber,\n                startX: event.pageX,\n                width: leftWidth\n            };\n\n            this.$ownerDocument.on('mousemove', this.onResizePointerMove.bind(this));\n            this.$ownerDocument.on('mouseup', this.Resize.bind(this));\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'updateColumnWidth',\n        value: function updateColumnWidth(columnNumber, width) {\n            width = Math.max(width, this.settings.minColumnWidth);\n            $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')').css('flex-basis', width + 'px');\n\n            var column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n            var diff = column.width() - width;\n            column.width(width);\n\n            $('.' + this.settings.resizableHandlerCssClass + ' > div').each(function (index, el) {\n                if (index >= columnNumber) {\n                    var $el = $(el);\n                    var left = parseInt($el.css('left').replace('px', ''));\n                    $el.css('left', left - diff);\n                }\n            });\n        }\n    }, {\n        key: 'getItemDiv',\n        value: function getItemDiv(item) {\n            var $div = div(this.settings.itemsOptions.itemCardCssClass);\n            var template = (0, _template.compileTemplate)(this.settings.itemsOptions.itemCardTemplate, {\n                time: function time(item) {\n                    return item.interval ? item.interval.start + ' to ' + item.interval.end : '';\n                }\n            });\n\n            return div().html(template(item));\n        }\n\n        /**\n        * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n        */\n    }, {\n        key: 'toTimeString',\n        value: function toTimeString(value) {\n            return (value < 10 ? '0' : '') + Math.floor(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n        }\n\n        /**\n         * Return height of task card based on duration of the task\n         * duration - in hours\n         */\n    }, {\n        key: 'getCardHeight',\n        value: function getCardHeight(duration) {\n            var durationInMinutes = duration * 60;\n            var heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n            return Math.ceil(durationInMinutes * heightOfMinute);\n        }\n\n        /**\n         * Return top offset of task card based on start time of the task\n         * startTime - in hours\n         */\n    }, {\n        key: 'getCardTopPosition',\n        value: function getCardTopPosition(startTime, offsetTime) {\n            var startTimeInt = (0, _utils.parseTime)(startTime);\n            if (offsetTime) {\n                startTimeInt -= (0, _utils.parseTime)(offsetTime);\n            }\n            return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n        }\n    }]);\n\n    return Skeduler;\n})();\n\nexports['default'] = Skeduler;\nmodule.exports = exports['default'];\n\n},{\"./items\":3,\"./settings\":4,\"./template\":6,\"./utils\":7}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar compileTemplate = function compileTemplate(template, funcs) {\n    return function (item) {\n        var result = template;\n        var regKeys = /\\$\\{(\\w+)\\}/g;\n        var regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n        var match = 1;\n        while (true) {\n            match = regKeys.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (item.hasOwnProperty(key)) {\n                result = result.replace(match[0], item[key]);\n            }\n        }\n\n        while (funcs) {\n            match = regFuncs.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (funcs.hasOwnProperty(key)) {\n                result = result.replace(match[0], funcs[key](item));\n            }\n        }\n\n        return result;\n    };\n};\n\nexports[\"default\"] = { compileTemplate: compileTemplate };\nmodule.exports = exports[\"default\"];\n\n},{}],7:[function(require,module,exports){\n/**\n * Parse time string and present it in hours (ex. '13:30' => 13.5)\n * @param {*string} time - time in format like '13:50', '11:00', '14'\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nexports.parseTime = parseTime;\nexports.toTime = toTime;\n\nfunction parseTime(time) {\n    return (/\\d{1,2}\\:\\d{2}/.test(time) ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 : parseInt(time)\n    );\n}\n\nfunction toTime(value) {\n    // TODO: vvv fix me\n    return (value < 10 ? '0' : '') + Math.floor(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n}\n\n},{}]},{},[2])\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import Skeduler from './skeduler';\n\n/**\n * Generate scheduler grid with task cards\n * options:\n * - headers: string[] - array of headers\n * - tasks: Task[] - array of tasks\n * - containerCssClass: string - css class of main container\n * - headerContainerCssClass: string - css class of header container\n * - schedulerContainerCssClass: string - css class of scheduler\n * - lineHeight - height of one half-hour cell in grid\n * - borderWidth - width of border of cell in grid\n */\n$.fn.skeduler = function(options) {\n    let $container = $(this);\n    var skeduler = new Skeduler($container, options);\n\n    return skeduler;\n};\n\n$.skeduler = Skeduler;","import Skeduler from './skeduler';\nimport adapter from './adapter';\n\nexport default Skeduler;","import { compileTemplate } from '../template';\nimport { parseTime, toTime } from '../utils';\n\nconst div = (cssClass) => $('<div></div>').addClass(cssClass);\n\nconst getItemDivs = (settings) => {\n    const $div = div(settings.itemsOptions.itemCardCssClass);\n    const items = settings.items;\n    const template = compileTemplate(settings.itemsOptions.itemCardTemplate, {\n        time: (item) => item.interval ? `${item.interval.start} to ${item.interval.end}` : ''\n    });\n\n    return items.map((item) => $div.clone()\n        .data('index', item.index)\n        .html(template(item))\n    );\n}\n\nconst findStartTime = (rowIndex, rowsPerHour, interval) => {\n    rowIndex = Math.max(0, rowIndex);\n    const hoursFromTop = rowIndex / rowsPerHour;\n\n    return toTime(hoursFromTop + parseTime(interval.start));\n}\n\nconst populateSkedulerItems = (settings) => {\n    const getItem = (index, isAssigned) => {\n        return isAssigned\n            ? settings.tasks.filter(t => t.item.index === index)[0].item\n            : settings.items.filter(i => i.index === index)[0];\n    }\n\n    const $skedulerItemsEl = $(settings.itemsOptions.containerSelector)\n        .empty()\n        .addClass(settings.itemsOptions.itemsCssClass);\n    const $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    const $shifts = $('.' + settings.availableIntervalPlaceholderCssClass + ' > div');\n\n    const $headerDiv = div()\n        .html('<h1 class=\"si-header\">' + settings.itemsOptions.title + '</h1>')\n        .appendTo($skedulerItemsEl);\n\n    const $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(el => {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    let operation = null;\n\n    const mouseUp = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard, $card, startTime } = operation;\n\n        const $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        const index = parseInt($movingCard.data('index'));\n        const isAssigned = !!$movingCard.data('assigned');\n        const item = getItem(index, isAssigned);\n\n        if ($skedulerItemsContainerEl.data('selected') == 1) {\n            if (isAssigned) {\n                settings.tasks = settings.tasks.filter(t => t.item.index != index);\n                settings.items.push(item);\n            }\n\n            $movingCard\n                .detach()\n                .css({ top: 'auto', left: 'auto' })\n                .height('auto')\n                .width('auto')\n                .data('assigned', 0)\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n                .appendTo($skedulerItemsContainerEl);\n\n            $movingCard.on('mousedown', mouseDown);\n            $card.remove();\n        } else if ($siEl.length !== 0 && $siEl.data('match') == 1) {\n            const rowHeight = settings.lineHeight + 1;\n            const column = parseInt($siEl.parent().data('column'));\n            let offsetInMinutes = parseTime(startTime) * 60;\n\n            const interval = settings.data[column].availableIntervals[$siEl.parent().data('item-index')];\n\n            settings.itemsOptions.onItemWillBeAssigned && settings.itemsOptions.onItemWillBeAssigned({ item, interval, offsetInMinutes });\n\n            $movingCard\n                .detach()\n                .css({ top: $siEl[0].offsetTop, left: 0 })\n                .height($siEl[0].clientHeight)\n                .width('auto')\n                .data('assigned', 1)\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n                .appendTo($siEl.parent());\n\n            $movingCard.on('mousedown', mouseDown);\n            $card.remove();\n\n            if (!isAssigned) {\n                settings.tasks.push({\n                    column,\n                    start: startTime,\n                    item\n                });\n            } else {\n                let task = settings.tasks.find(t => t.item.index === index);\n                task.start = startTime,\n                    task.column = column;\n            }\n\n            settings.itemsOptions.onItemDidAssigned && settings.itemsOptions.onItemDidAssigned({ item, interval, offsetInMinutes });\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\n        $skedulerItemsContainerEl.removeClass('highlighted');\n        $skedulerItemsContainerEl.data('selected', 0);\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    const mouseMove = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard, offsetX, offsetY } = operation;\n\n        const newOffsetX = event.pageX - offsetX,\n            newOffsetY = event.pageY - offsetY;\n\n        $movingCard.css({\n            top: newOffsetY + 'px',\n            left: newOffsetX + 'px'\n        });\n\n        // Higlight shifts\n        const _window = $ownerDocument[0].defaultView;\n        const x = event.pageX;\n        const y = event.pageY - _window.scrollY;\n\n        const rowHeight = settings.lineHeight + 1;\n        const rowsPerHour = settings.rowsPerHour;\n\n        const index = parseInt($movingCard.data('index'));\n        const isAssigned = !!$movingCard.data('assigned');\n        const item = getItem(index, isAssigned);\n        const duration = item.duration;\n        const height = duration * (rowHeight * rowsPerHour / 60);\n\n        $skedulerItemsContainerEl.each(function () {\n            const $this = $(this);\n            const elementBounding = this.getBoundingClientRect();\n\n            if (x > elementBounding.left && x < elementBounding.right &&\n                y > elementBounding.top && y < elementBounding.bottom) {\n                $this.addClass('highlighted');\n                $skedulerItemsContainerEl.data('selected', 1);\n            } else {\n                $this.removeClass('highlighted');\n                $skedulerItemsContainerEl.data('selected', 0);\n            }\n        });\n        $shifts.each(function () {\n            const $this = $(this);\n            const elementBounding = this.getBoundingClientRect();\n            const $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\n\n            if (x > elementBounding.left && x < elementBounding.right &&\n                y > elementBounding.top && y < elementBounding.bottom) {\n\n                const offsetTop = y - elementBounding.top;\n                const rowIndex = (Math.floor(offsetTop / rowHeight) - 1);\n                const top = Math.min(\n                    Math.max(0, rowIndex * rowHeight),\n                    this.clientHeight - height\n                );\n\n                const column = +$this.data('column');\n                const offsetInMinutes = 60 / settings.rowsPerHour * (top / rowHeight); // <<== FIXME\n                const interval = settings.data[column].availableIntervals[$this.data('item-index')];\n                const matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\n\n                operation.startTime = findStartTime(rowIndex, rowsPerHour, interval);\n\n                $el.css({ top: top })\n                    .css('background-color', matchResult.color)\n                    .height(height)\n                    .show();\n\n\n                $el.data('match', +matchResult.match);\n\n                if (matchResult.match) {\n                    settings.tasks.filter(t => t.column == column).forEach(t => {\n                        const taskStart = parseTime(t.start);\n                        const movingTaskStart = parseTime(operation.startTime);\n\n                        if (!(taskStart >= movingTaskStart + item.duration / 60)\n                            && !(taskStart + t.item.duration / 60 <= movingTaskStart)) {\n                                // TODO t is a conflicted task\n                                console.log(t.item.name);\n                        }\n                    });\n                }\n            } else {\n                $el.data('match', 0);\n                $el.hide();\n            }\n        });\n    };\n\n    const mouseDown = (event /*: MouseEvent */) => {\n        if (event.which !== 1) { return; }\n\n        const $skedulerWrapper = $(`.${settings.skedulerWrapperCssClass}`);\n        const $card = $(event.currentTarget);\n\n        const $movingCard =\n            $card.clone()\n                .data('index', $card.data('index'))\n                .data('assigned', $card.data('assigned'))\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n                .width($card.width())\n                .appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        const offsetX = event.pageX - event.offsetX,\n            offsetY = event.pageY - event.offsetY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card,\n            $movingCard,\n            offsetX: event.offsetX,\n            offsetY: event.offsetY\n        };\n\n        const index = parseInt($card.data('index'));\n        const isAssigned = !!$movingCard.data('assigned');\n        const item = getItem(index, isAssigned);\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDown);\n}\n\nexport default populateSkedulerItems;","const defaultSettings = {\n    // Data attributes\n    headers: null,  // string[] - Array of column headers\n    tasks: [],      // Task[] - Array of tasks. Required fields: \n                    // id: number, startTime: number, duration: number, column: number\n\n    items: [],      // Item[] - Array of not-assingned tasks\n\n    notAllocatedLabel: 'Not allocated',\n\n    // Card template - Inner content of task card. \n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    availableIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30,         // height of one line in grid\n    borderWidth: 1,         // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2,         // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: false,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '<div>${duration}</div>',\n        title: 'Items',\n        onItemWillBeAssigned: () => { console.log(arguments); },\n        onItemDidAssigned: () => { console.log(arguments); },\n        matchFunc: () => { return { match: true } }\n    }\n};\n\nexport { defaultSettings };","import { defaultSettings } from './settings';\nimport populateSkedulerItems from './items';\nimport { compileTemplate } from './template';\nimport { parseTime } from './utils';\n\nconst div = (cssClass) => $('<div></div>').addClass(cssClass);\n\nclass Skeduler {\n    constructor($container, options) {\n        this.settings = $.extend(true, defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null\n        this.operation = null;\n        this.resizeAllColumns = true;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.refresh();\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    setRowsPerHour(rowsPerHour) {\n        this.settings.rowsPerHour = rowsPerHour;\n        this.refresh();\n    }\n\n    setResizeAllColumns(resizeAllColumns) {\n        this.resizeAllColumns = resizeAllColumns;\n    }\n\n    refresh() {\n        this.settings.items = this.settings.items && this.settings.items.map(\n            (item, index) => Object.assign({}, {index}, item)\n        ) || [];\n        this.settings.tasks = this.settings.tasks && this.settings.tasks.map(\n            (task, index) => {\n                task.item = Object.assign({}, {index: index + this.settings.items.length}, task.item);\n                return task;\n            }\n        ) || [];\n\n        this.populate();\n        if (this.settings.itemsOptions.enabled) {\n            populateSkedulerItems(this.settings);\n        }\n    }\n\n    populate() {\n        this.$container.empty();\n        this.$container.addClass(this.settings.containerCssClass);\n\n        const headers = this.settings.headers ?\n            this.settings.headers :\n            this.settings.data.map(this.settings.getHeader);\n\n        // Add headers\n        this.$headerContainer = div(this.settings.headerContainerCssClass);\n        headers.forEach((element) => {\n            div().text(element)\n                .appendTo(this.$headerContainer);\n        }, this);\n        this.$container.append(this.$headerContainer);\n\n        // Add scheduler\n        this.$scheduleEl = div(this.settings.schedulerContainerCssClass);\n        const scheduleTimelineEl = div(this.settings.schedulerContainerCssClass + '-timeline');\n        const scheduleBodyEl = div(this.settings.schedulerContainerCssClass + '-body');\n\n        const gridColumnElement = div();\n\n        for (let i = 0; i < 24; i++) {\n            // Populate timeline\n            for (let j = 0; j < this.settings.rowsPerHour; j++) {\n                let timelineCell = div()\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                if (j == 0) {\n                    timelineCell = timelineCell\n                        .css(\"line-height\", this.settings.lineHeight + 'px')\n                        .text(j == 0 ? this.toTimeString(i) : \"\");\n                }\n                timelineCell.appendTo(scheduleTimelineEl);\n\n                div(this.settings.cellCssClass)\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\")\n                    .appendTo(gridColumnElement);\n            }\n        }\n\n        // Populate grid\n        for (let j = 0; j < headers.length; j++) {\n            const el = gridColumnElement.clone();\n\n            // fixme [availableIntervals must not use index]\n            const availableIntervalsPlaceholder = div(this.settings.availableIntervalPlaceholderCssClass);\n            const intervals = this.settings.data[j].availableIntervals;\n            this.appendAvailableInterval(availableIntervalsPlaceholder, intervals, j);\n\n            el.prepend(availableIntervalsPlaceholder);\n            el.appendTo(scheduleBodyEl);\n\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        this.$scheduleEl.append(scheduleTimelineEl);\n        this.$scheduleEl.append(scheduleBodyEl);\n\n        this.$container.append(this.$scheduleEl);\n\n        // Set default width for columns\n        for (let j = 0; j < headers.length; j++) {\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        // Configure resizing\n        if (this.settings.columnResizeEnabled) {\n            this.configureResizing();\n        }\n    }\n\n    tasks() {\n        return this.settings.tasks;\n    }\n\n    configureResizing() {\n        const skedulerElResizableHandler = div(this.settings.resizableHandlerCssClass);\n\n        this.$container.prepend(skedulerElResizableHandler);\n\n        skedulerElResizableHandler.width(this.$container.width());\n\n        const resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n        let index = 0;\n        this.$headerContainer.find('div').each((_, el) => {\n            div(this.settings.resizableSliderCssClass)\n                .css('left', el.offsetLeft + el.clientWidth)\n                .height(resizableSliderHeight)\n                .data('column-id', index++)\n                .appendTo(skedulerElResizableHandler)\n        });\n\n        skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onResizePointerDown.bind(this));\n    }\n\n    appendAvailableInterval(placeholder, intervals, column) {\n        intervals.forEach((interval, index) => {\n            const innerContent = div().text(this.settings.notAllocatedLabel);\n            const top = this.getCardTopPosition(interval.start) + 2;\n            const duration = parseTime(interval.end) - parseTime(interval.start);\n            const height = this.getCardHeight(duration) - 5;\n\n            const skItemHightlightDiv = div(this.settings.itemsOptions.highlightItemCss).hide();\n\n            const shiftDiv = div()\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n            shiftDiv\n                .data('column', column)\n                .data('item-index', index)\n                .append(innerContent)\n                .append(skItemHightlightDiv)\n                .appendTo(placeholder);\n\n            this.appendTasks(\n                shiftDiv,\n                interval.start,\n                this.settings.tasks.filter(t => t.column == column));\n            // TODO: ^^^ filter by shift interval too\n\n        }, this);\n    }\n\n    /** \n     * Generate task cards\n     */\n    appendTasks(placeholder, intervalStart, tasks) {\n        tasks.forEach((task) => {\n            let top = this.getCardTopPosition(task.start, intervalStart);\n            let height = this.getCardHeight(task.item.duration / 60);\n\n            this.getItemDiv(task.item)\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                })\n                .addClass(`${this.settings.itemsOptions.itemCardCssClass}`)\n                .addClass(`${this.settings.itemsOptions.itemCardCssClass}-pinned`)\n                .width('auto')\n                .data('index', task.item.index)\n                .data('assigned', 1)\n                .appendTo(placeholder);\n        }, this);\n    }\n\n    onResizePointerUp(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        this.$ownerDocument.off('mouseup');\n        this.$ownerDocument.off('mousemove');\n\n        this.operation = null;\n    }\n\n    onResizePointerMove(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        // Determine the delta change between start and new mouse position, as a percentage of the table width\n        let difference = (event.pageX - op.startX); // / this.$scheduleEl.width() * 100;\n        if (difference === 0) {\n            return;\n        }\n\n        let columnNumber = op.columnNumber;\n        let width = op.width + difference;\n        if (this.resizeAllColumns) {\n            for (let i = 0; i < this.settings.data.length; i++) {\n                this.updateColumnWidth(i, width.toFixed(2));\n            }\n        } else {\n            this.updateColumnWidth(columnNumber, width.toFixed(2));\n        }\n    }\n\n    onResizePointerDown(event) {\n        // Only applies to left-click dragging\n        if (event.which !== 1) { return; }\n\n        // If a previous this.operation is defined, we missed the last mouseup.\n        // Probably gobbled up by user mousing out the window then releasing.\n        // We'll simulate a pointerup here prior to it\n        if (this.operation) {\n            this.Resize(event);\n        }\n\n        let $currentGrip = $(event.currentTarget);\n        let columnNumber = $currentGrip.data('column-id');\n\n        let gripIndex = $currentGrip.index();\n        let $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n        let leftWidth = $leftColumn[0].clientWidth;\n\n        this.operation = {\n            columnNumber,\n            startX: event.pageX,\n            width: leftWidth\n        };\n\n        this.$ownerDocument.on('mousemove', this.onResizePointerMove.bind(this));\n        this.$ownerDocument.on('mouseup', this.Resize.bind(this));\n\n        event.preventDefault();\n    }\n\n    updateColumnWidth(columnNumber, width) {\n        width = Math.max(width, this.settings.minColumnWidth);\n        $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')')\n            .css('flex-basis', width + 'px');\n\n        let column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n        var diff = column.width() - width;\n        column.width(width);\n\n        $('.' + this.settings.resizableHandlerCssClass + ' > div').each((index, el) => {\n            if (index >= columnNumber) {\n                let $el = $(el);\n                let left = parseInt($el.css('left').replace('px', ''));\n                $el.css('left', left - diff);\n            }\n        });\n    }\n\n    getItemDiv(item) {\n        const $div = div(this.settings.itemsOptions.itemCardCssClass);\n        const template = compileTemplate(this.settings.itemsOptions.itemCardTemplate, {\n            time: (item) => item.interval ? `${item.interval.start} to ${item.interval.end}` : ''\n        });\n\n        return div().html(template(item));\n    }\n\n    /**\n    * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n    */\n    toTimeString(value) {\n        return (value < 10 ? '0' : '') + Math.floor(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n    }\n\n    /**\n     * Return height of task card based on duration of the task\n     * duration - in hours\n     */\n    getCardHeight(duration) {\n        const durationInMinutes = duration * 60;\n        const heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n        return Math.ceil(durationInMinutes * heightOfMinute);\n    }\n\n    /**\n     * Return top offset of task card based on start time of the task\n     * startTime - in hours\n     */\n    getCardTopPosition(startTime, offsetTime) {\n        let startTimeInt = parseTime(startTime);\n        if (offsetTime) {\n            startTimeInt -= parseTime(offsetTime);\n        }\n        return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n    }\n}\n\nexport default Skeduler;","const compileTemplate = (template, funcs) => item => {\n    let result = template;\n    const regKeys = /\\$\\{(\\w+)\\}/g;\n    const regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n    let match = 1;\n    while (true) {\n        match = regKeys.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (item.hasOwnProperty(key)) {\n            result = result.replace(match[0], item[key]);\n        }\n    }\n\n    while (funcs) {\n        match = regFuncs.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (funcs.hasOwnProperty(key)) {\n            result = result.replace(match[0], funcs[key](item));\n        }\n    }\n\n    return result;\n}\n\nexport default { compileTemplate };","/**\n * Parse time string and present it in hours (ex. '13:30' => 13.5)\n * @param {*string} time - time in format like '13:50', '11:00', '14'\n */\nexport function parseTime(time) {\n    return /\\d{1,2}\\:\\d{2}/.test(time) ?\n        parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 :\n        parseInt(time);\n}\n\nexport function toTime(value) {\n    // TODO: vvv fix me\n    return (value < 10 ? '0' : '') + Math.floor(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n}"]}