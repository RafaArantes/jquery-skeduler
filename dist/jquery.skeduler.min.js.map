{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jquery.skeduler.js","src/adapter.js","src/index.js","src/settings.js","src/skeduler.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_skeduler","_skeduler2","$","fn","skeduler","options","this","each","$container","./skeduler","2","Object","defineProperty","value","_adapter","./adapter","3","defaultSettings","headers","tasks","cardTemplate","onClick","task","containerCssClass","headerContainerCssClass","schedulerContainerCssClass","taskPlaceholderCssClass","cellCssClass","resizableHandlerCssClass","resizableSliderCssClass","lineHeight","borderWidth","columnWidth","minColumnWidth","rowsPerHour","columnResizeEnabled","debug","itemsOptions","enabled","4","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_settings","Skeduler","settings","extend","$ownerDocument","ownerDocument","$headerContainer","$scheduleEl","operation","console","time","populate","populateSkedulerItems","timeEnd","_this","empty","addClass","div","clone","log","forEach","element","text","appendTo","append","scheduleTimelineEl","scheduleBodyEl","gridColumnElement","j","timelineCell","height","css","toTimeString","el","placeholder","appendTasks","filter","column","prepend","updateColumnWidth","skedulerElResizableHandler","width","resizableSliderHeight","index","find","_","offsetLeft","clientWidth","data","on","onPointerDown","bind","_this2","$skedulerItemsEl","containerSelector","mouseUp","event","_operation","$movingCard","remove","off","mouseMove","_operation2","top","clientY","left","clientX","mouseDownOnCard","which","$card","currentTarget","duration","parseInt","Math","ceil","parent","preventDefault","floor","startTime","result","hasOwnProperty","replace","_this3","innerContent","renderInnerCardContent","getCardTopPosition","getCardHeight","card","attr","style","title","op","difference","pageX","startX","columnNumber","toFixed","onPointerUp","$currentGrip","gripIndex","$leftColumn","eq","leftWidth","onPointerMove","max","diff","$el","./settings"],"mappings":"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","file":"jquery.skeduler.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * jquery-skeduler - This is jQuery plugin which provider you simple scheduler with some items on OX and 24-hours timeline on OY.\n * @date Mon Jun 26 2017 15:20:41 GMT+1000 (Russia TZ 9 Standard Time)\n * @version v0.0.1\n * @link \n * @license ISC\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\n// export type Task = {\n//     id: number;\n//     startTime: number;\n//     duration: number;\n//     column: number\n// }\n\n// export type Options = {\n//     headers: string[];\n//     tasks: Task[];\n//     containerCssClass: string;\n//     headerContainerCssClass: string;\n//     schedulerContainerCssClass: string;\n//     lineHeight: number;\n//     borderWidth: number;\n// }\n\n/**\r\n* Generate scheduler grid with task cards\r\n* options:\r\n* - headers: string[] - array of headers\r\n* - tasks: Task[] - array of tasks\r\n* - containerCssClass: string - css class of main container\r\n* - headerContainerCssClass: string - css class of header container\r\n* - schedulerContainerCssClass: string - css class of scheduler\r\n* - lineHeight - height of one half-hour cell in grid\r\n* - borderWidth - width of border of cell in grid\r\n*/\n$.fn.skeduler = function (options) {\n    return this.each(function () {\n        var $container = $(this);\n\n        var skeduler = new _skeduler2['default']($container, options);\n    });\n};\n\n$.skeduler = _skeduler2['default'];\n\n},{\"./skeduler\":4}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nexports['default'] = _skeduler2['default'];\nmodule.exports = exports['default'];\n\n},{\"./adapter\":1,\"./skeduler\":4}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar defaultSettings = {\n    // Data attributes\n    headers: [], // String[] - Array of column headers\n    tasks: [], // Task[] - Array of tasks. Required fields:\n    // id: number, startTime: number, duration: number, column: number\n\n    // Card template - Inner content of task card.\n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function onClick(e, task) {},\n\n    // Css classes\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30, // height of one line in grid\n    borderWidth: 1, // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2, // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false\n    }\n};\n\nexports.defaultSettings = defaultSettings;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _settings = require('./settings');\n\nvar Skeduler = (function () {\n    function Skeduler($container, options) {\n        _classCallCheck(this, Skeduler);\n\n        this.settings = $.extend(_settings.defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null;\n        this.operation = null;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.populate($container, options);\n        if (this.settings.itemsOptions.enabled) {\n            this.populateSkedulerItems(this.settings.itemsOptions);\n        }\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    _createClass(Skeduler, [{\n        key: 'populate',\n        value: function populate() {\n            var _this = this;\n\n            this.$container.empty();\n            this.$container.addClass(this.settings.containerCssClass);\n\n            var div = $('<div></div>');\n\n            // Add headers\n            this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\n            console.log('this.$headerContainer', this.$headerContainer);\n            this.settings.headers.forEach(function (element) {\n                div.clone().text(element).appendTo(_this.$headerContainer);\n            }, this);\n            this.$container.append(this.$headerContainer);\n\n            // Add schedule\n            this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\n            var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\n            var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\n\n            var gridColumnElement = div.clone();\n\n            for (var i = 0; i < 24; i++) {\n                // Populate timeline\n                for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                    var timelineCell = div.clone().height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                    if (j == 0) {\n                        timelineCell = timelineCell.css(\"line-height\", this.settings.lineHeight + 'px').text(j == 0 ? this.toTimeString(i) : \"\");\n                    }\n                    timelineCell.appendTo(scheduleTimelineEl);\n\n                    div.clone().addClass(this.settings.cellCssClass).height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\").appendTo(gridColumnElement);\n                }\n            }\n\n            // Populate grid\n            for (var j = 0; j < this.settings.headers.length; j++) {\n                var el = gridColumnElement.clone();\n\n                var placeholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\n                this.appendTasks(placeholder, this.settings.tasks.filter(function (t) {\n                    return t.column == j;\n                }));\n\n                el.prepend(placeholder);\n                el.appendTo(scheduleBodyEl);\n\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            this.$scheduleEl.append(scheduleTimelineEl);\n            this.$scheduleEl.append(scheduleBodyEl);\n\n            this.$container.append(this.$scheduleEl);\n\n            // Set default width for columns\n            for (var j = 0; j < this.settings.headers.length; j++) {\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            if (this.settings.columnResizeEnabled) {\n                var skedulerElResizableHandler = div.clone().addClass(this.settings.resizableHandlerCssClass);\n\n                this.$container.prepend(skedulerElResizableHandler);\n\n                skedulerElResizableHandler.width(this.$container.width());\n\n                var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n                var index = 0;\n                this.$headerContainer.find('div').each(function (_, el) {\n                    div.clone().addClass(_this.settings.resizableSliderCssClass).css('left', el.offsetLeft + el.clientWidth).height(resizableSliderHeight).data('column-id', index++).appendTo(skedulerElResizableHandler);\n                });\n\n                skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n            }\n        }\n    }, {\n        key: 'populateSkedulerItems',\n        value: function populateSkedulerItems(options) {\n            var _this2 = this;\n\n            var $skedulerItemsEl = $(options.containerSelector);\n\n            // $skedulerItemsEl.html(`\n            //   <div></div>\n            // `);\n            var operation = null;\n\n            var mouseUp = function mouseUp(event) {\n                if (operation == null) return;\n\n                var _operation = operation;\n                var $movingCard = _operation.$movingCard;\n\n                $movingCard.remove();\n\n                operation = null;\n                _this2.$ownerDocument.off('mousemove', mouseMove);\n                _this2.$ownerDocument.off('mouseup', mouseUp);\n            };\n\n            var mouseMove = function mouseMove(event) {\n                if (operation == null) return;\n\n                var _operation2 = operation;\n                var $movingCard = _operation2.$movingCard;\n\n                $movingCard.css({\n                    top: event.clientY - 50 + 'px',\n                    left: event.clientX - 50 + 'px'\n                });\n            };\n\n            var mouseDownOnCard = function mouseDownOnCard(event /*: MouseEvent */) {\n                if (event.which !== 1) {\n                    return;\n                }\n\n                var $card = $(event.currentTarget);\n                var duration = parseInt($card.data('duration'));\n                var height = Math.ceil(_this2.settings.lineHeight * _this2.settings.rowsPerHour / 60 * duration);\n\n                var $movingCard = $card.clone().addClass('si-card-moving').appendTo($skedulerItemsEl.parent());\n\n                $movingCard.height(height + 'px').css({\n                    top: event.clientY - 50 + 'px',\n                    left: event.clientX - 50 + 'px'\n                });\n\n                operation = {\n                    $card: $card, $movingCard: $movingCard\n                };\n\n                _this2.$ownerDocument.on('mousemove', mouseMove);\n                _this2.$ownerDocument.on('mouseup', mouseUp);\n\n                event.preventDefault();\n            };\n\n            $skedulerItemsEl.find('.si-card').on('mousedown', mouseDownOnCard);\n        }\n\n        /**\r\n           * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\r\n           */\n    }, {\n        key: 'toTimeString',\n        value: function toTimeString(value) {\n            return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n        }\n\n        /**\r\n         * Return height of task card based on duration of the task\r\n         * duration - in hours\r\n         */\n    }, {\n        key: 'getCardHeight',\n        value: function getCardHeight(duration) {\n            return (this.settings.lineHeight + this.settings.borderWidth) * (duration * this.settings.rowsPerHour) - 1;\n        }\n\n        /**\r\n         * Return top offset of task card based on start time of the task\r\n         * startTime - in hours\r\n         */\n    }, {\n        key: 'getCardTopPosition',\n        value: function getCardTopPosition(startTime) {\n            return (this.settings.lineHeight + this.settings.borderWidth) * (startTime * this.settings.rowsPerHour);\n        }\n\n        /**\r\n        * Render card template\r\n        */\n    }, {\n        key: 'renderInnerCardContent',\n        value: function renderInnerCardContent(task) {\n            var result = this.settings.cardTemplate;\n            for (var key in task) {\n                if (task.hasOwnProperty(key)) {\n                    // TODO: replace all\n                    result = result.replace('${' + key + '}', task[key]);\n                }\n            }\n\n            return $(result);\n        }\n\n        /** \r\n         * Generate task cards\r\n         */\n    }, {\n        key: 'appendTasks',\n        value: function appendTasks(placeholder, tasks) {\n            var _this3 = this;\n\n            tasks.forEach(function (task) {\n                var innerContent = _this3.renderInnerCardContent(task);\n                var top = _this3.getCardTopPosition(task.startTime);\n                var height = _this3.getCardHeight(task.duration);\n\n                var card = $('<div></div>').attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\n                    title: _this3.toTimeString(task.startTime) + ' - ' + _this3.toTimeString(task.startTime + task.duration)\n                });\n                card.on('click', function (e) {\n                    _this3.settings.onClick && _this3.settings.onClick(e, task);\n                });\n                card.append(innerContent).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'onPointerUp',\n        value: function onPointerUp(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            this.$ownerDocument.off('mouseup');\n            this.$ownerDocument.off('mousemove');\n\n            this.operation = null;\n        }\n    }, {\n        key: 'onPointerMove',\n        value: function onPointerMove(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            // Determine the delta change between start and new mouse position, as a percentage of the table width\n            var difference = event.pageX - op.startX; // / this.$scheduleEl.width() * 100;\n            if (difference === 0) {\n                return;\n            }\n\n            var columnNumber = op.columnNumber;\n            var width = op.width + difference;\n            this.updateColumnWidth(columnNumber, width.toFixed(2));\n        }\n    }, {\n        key: 'onPointerDown',\n        value: function onPointerDown(event) {\n            // Only applies to left-click dragging\n            if (event.which !== 1) {\n                return;\n            }\n\n            // If a previous this.operation is defined, we missed the last mouseup.\n            // Probably gobbled up by user mousing out the window then releasing.\n            // We'll simulate a pointerup here prior to it\n            if (this.operation) {\n                this.onPointerUp(event);\n            }\n\n            var $currentGrip = $(event.currentTarget);\n            var columnNumber = $currentGrip.data('column-id');\n\n            console.log(this.$headerContainer);\n\n            var gripIndex = $currentGrip.index();\n            var $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n            var leftWidth = $leftColumn[0].clientWidth;\n\n            this.operation = {\n                columnNumber: columnNumber,\n                startX: event.pageX,\n                width: leftWidth\n            };\n\n            this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n            this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'updateColumnWidth',\n        value: function updateColumnWidth(columnNumber, width) {\n            width = Math.max(width, this.settings.minColumnWidth);\n            $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')').css('flex-basis', width + 'px');\n\n            var column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n            var diff = column.width() - width;\n            column.width(width);\n\n            $('.' + this.settings.resizableHandlerCssClass + ' > div').each(function (index, el) {\n                if (index >= columnNumber) {\n                    var $el = $(el);\n                    var left = parseInt($el.css('left').replace('px', ''));\n                    $el.css('left', left - diff);\n                }\n            });\n        }\n    }]);\n\n    return Skeduler;\n})();\n\nexports['default'] = Skeduler;\nmodule.exports = exports['default'];\n\n},{\"./settings\":3}]},{},[2])\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import Skeduler from './skeduler';\r\n\r\n// export type Task = {\r\n//     id: number;\r\n//     startTime: number;\r\n//     duration: number;\r\n//     column: number\r\n// }\r\n\r\n// export type Options = {\r\n//     headers: string[];\r\n//     tasks: Task[];\r\n//     containerCssClass: string;\r\n//     headerContainerCssClass: string;\r\n//     schedulerContainerCssClass: string;\r\n//     lineHeight: number;\r\n//     borderWidth: number;\r\n// }\r\n\r\n/**\r\n* Generate scheduler grid with task cards\r\n* options:\r\n* - headers: string[] - array of headers\r\n* - tasks: Task[] - array of tasks\r\n* - containerCssClass: string - css class of main container\r\n* - headerContainerCssClass: string - css class of header container\r\n* - schedulerContainerCssClass: string - css class of scheduler\r\n* - lineHeight - height of one half-hour cell in grid\r\n* - borderWidth - width of border of cell in grid\r\n*/\r\n$.fn.skeduler = function (options) {\r\n    return this.each(function () {\r\n        let $container = $(this);\r\n \r\n        var skeduler = new Skeduler($container, options);\r\n    });\r\n};\r\n\r\n$.skeduler = Skeduler;\r\n","import Skeduler from './skeduler';\r\nimport adapter from './adapter';\r\n\r\nexport default Skeduler;","const defaultSettings = {\r\n    // Data attributes\r\n    headers: [],  // String[] - Array of column headers\r\n    tasks: [],    // Task[] - Array of tasks. Required fields: \r\n    // id: number, startTime: number, duration: number, column: number\r\n\r\n    // Card template - Inner content of task card. \r\n    // You're able to use ${key} inside template, where key is any property from task.\r\n    cardTemplate: '<div>${id}</div>',\r\n\r\n    // OnClick event handler\r\n    onClick: function (e, task) { },\r\n\r\n    // Css classes\r\n    containerCssClass: 'skeduler-container',\r\n    headerContainerCssClass: 'skeduler-headers',\r\n    schedulerContainerCssClass: 'skeduler-main',\r\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\r\n    cellCssClass: 'skeduler-cell',\r\n    resizableHandlerCssClass: 'resizable-handler',\r\n    resizableSliderCssClass: 'resizable-slider',\r\n\r\n    lineHeight: 30,         // height of one line in grid\r\n    borderWidth: 1,         // width of board of grid cell\r\n    columnWidth: 200,\r\n    minColumnWidth: 100,\r\n\r\n    rowsPerHour: 2,         // count of rows for one hour\r\n\r\n    columnResizeEnabled: true, // is columns resizable\r\n\r\n    debug: true,\r\n\r\n    itemsOptions: {\r\n        enabled: false\r\n    }\r\n};\r\n\r\nexport { defaultSettings };","import { defaultSettings } from './settings';\r\n\r\nclass Skeduler {\r\n    constructor($container, options) {\r\n        this.settings = $.extend(defaultSettings, options);\r\n        this.$container = $container;\r\n        this.$ownerDocument = $($container[0].ownerDocument);\r\n        this.$headerContainer = null;\r\n        this.$scheduleEl = null\r\n        this.operation = null;\r\n\r\n        if (this.settings.debug) {\r\n            console.time('skeduler');\r\n        }\r\n\r\n        this.populate($container, options);\r\n        if (this.settings.itemsOptions.enabled) {\r\n            this.populateSkedulerItems(this.settings.itemsOptions);\r\n        }\r\n\r\n        if (this.settings.debug) {\r\n            console.timeEnd('skeduler');\r\n        }\r\n    }\r\n\r\n    populate() {\r\n        this.$container.empty();\r\n        this.$container.addClass(this.settings.containerCssClass);\r\n\r\n        var div = $('<div></div>');\r\n\r\n        // Add headers\r\n        this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\r\n        console.log('this.$headerContainer', this.$headerContainer);\r\n        this.settings.headers.forEach((element) => {\r\n            div.clone()\r\n                .text(element)\r\n                .appendTo(this.$headerContainer);\r\n        }, this);\r\n        this.$container.append(this.$headerContainer);\r\n\r\n        // Add schedule\r\n        this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\r\n        var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\r\n        var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\r\n\r\n        var gridColumnElement = div.clone();\r\n\r\n        for (var i = 0; i < 24; i++) {\r\n            // Populate timeline\r\n            for (var j = 0; j < this.settings.rowsPerHour; j++) {\r\n                var timelineCell = div.clone()\r\n                    .height(this.settings.lineHeight)\r\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\r\n\r\n                if (j == 0) {\r\n                    timelineCell = timelineCell\r\n                        .css(\"line-height\", this.settings.lineHeight + 'px')\r\n                        .text(j == 0 ? this.toTimeString(i) : \"\");\r\n                }\r\n                timelineCell.appendTo(scheduleTimelineEl);\r\n\r\n                div.clone()\r\n                    .addClass(this.settings.cellCssClass)\r\n                    .height(this.settings.lineHeight)\r\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\")\r\n                    .appendTo(gridColumnElement);\r\n            }\r\n        }\r\n\r\n        // Populate grid\r\n        for (var j = 0; j < this.settings.headers.length; j++) {\r\n            var el = gridColumnElement.clone();\r\n\r\n            var placeholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\r\n            this.appendTasks(placeholder, this.settings.tasks.filter(t => t.column == j ));\r\n\r\n            el.prepend(placeholder);\r\n            el.appendTo(scheduleBodyEl);\r\n\r\n            this.updateColumnWidth(j, this.settings.columnWidth);\r\n        }\r\n\r\n        this.$scheduleEl.append(scheduleTimelineEl);\r\n        this.$scheduleEl.append(scheduleBodyEl);\r\n\r\n        this.$container.append(this.$scheduleEl);\r\n\r\n        // Set default width for columns\r\n        for (var j = 0; j < this.settings.headers.length; j++) {\r\n            this.updateColumnWidth(j, this.settings.columnWidth);\r\n        }\r\n\r\n        if (this.settings.columnResizeEnabled) {\r\n            var skedulerElResizableHandler = div.clone()\r\n                .addClass(this.settings.resizableHandlerCssClass);\r\n\r\n            this.$container.prepend(skedulerElResizableHandler);\r\n\r\n            skedulerElResizableHandler.width(this.$container.width());\r\n\r\n            var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\r\n            var index = 0;\r\n            this.$headerContainer.find('div').each((_, el) => {\r\n                div.clone()\r\n                    .addClass(this.settings.resizableSliderCssClass)\r\n                    .css('left', el.offsetLeft + el.clientWidth)\r\n                    .height(resizableSliderHeight)\r\n                    .data('column-id', index++)\r\n                    .appendTo(skedulerElResizableHandler)\r\n            });\r\n\r\n            skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\r\n        }\r\n    }\r\n\r\n    populateSkedulerItems(options) {\r\n        const $skedulerItemsEl = $(options.containerSelector);\r\n\r\n        // $skedulerItemsEl.html(`\r\n        //   <div></div>\r\n        // `);\r\n        let operation = null;\r\n\r\n        const mouseUp = (event) => {\r\n            if (operation == null) return;\r\n\r\n            const { $movingCard } = operation;\r\n\r\n            $movingCard.remove();\r\n\r\n            operation = null;\r\n            this.$ownerDocument.off('mousemove', mouseMove);\r\n            this.$ownerDocument.off('mouseup', mouseUp);\r\n        };\r\n\r\n        const mouseMove = (event) => {\r\n            if (operation == null) return;\r\n\r\n            const { $movingCard } = operation;\r\n\r\n            $movingCard.css({\r\n                top: (event.clientY - 50) + 'px',\r\n                left: (event.clientX - 50) + 'px'\r\n            });\r\n        };\r\n\r\n        const mouseDownOnCard = (event /*: MouseEvent */) => {\r\n            if (event.which !== 1) { return; }\r\n\r\n            const $card = $(event.currentTarget);\r\n            const duration = parseInt($card.data('duration'));\r\n            const height = Math.ceil(this.settings.lineHeight * this.settings.rowsPerHour / 60 * duration);\r\n\r\n            const $movingCard = $card.clone()\r\n                .addClass('si-card-moving')\r\n                .appendTo($skedulerItemsEl.parent());\r\n\r\n            $movingCard\r\n                .height(height + 'px')\r\n                .css({\r\n                    top: (event.clientY - 50) + 'px',\r\n                    left: (event.clientX - 50) + 'px'\r\n                })\r\n\r\n            operation = {\r\n                $card, $movingCard\r\n            };\r\n\r\n            this.$ownerDocument.on('mousemove', mouseMove);\r\n            this.$ownerDocument.on('mouseup', mouseUp);\r\n\r\n            event.preventDefault();\r\n        };\r\n\r\n        $skedulerItemsEl.find('.si-card').on('mousedown', mouseDownOnCard);\r\n    }\r\n\r\n    /**\r\n       * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\r\n       */\r\n    toTimeString(value) {\r\n        return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\r\n    }\r\n\r\n    /**\r\n     * Return height of task card based on duration of the task\r\n     * duration - in hours\r\n     */\r\n    getCardHeight(duration) {\r\n        return (this.settings.lineHeight + this.settings.borderWidth) * (duration * this.settings.rowsPerHour) - 1;\r\n    }\r\n\r\n    /**\r\n     * Return top offset of task card based on start time of the task\r\n     * startTime - in hours\r\n     */\r\n    getCardTopPosition(startTime) {\r\n        return (this.settings.lineHeight + this.settings.borderWidth) * (startTime * this.settings.rowsPerHour);\r\n    }\r\n\r\n    /**\r\n    * Render card template\r\n    */\r\n    renderInnerCardContent(task) {\r\n        var result = this.settings.cardTemplate;\r\n        for (var key in task) {\r\n            if (task.hasOwnProperty(key)) {\r\n                // TODO: replace all\r\n                result = result.replace('${' + key + '}', task[key]);\r\n            }\r\n        }\r\n\r\n        return $(result);\r\n    }\r\n\r\n    /** \r\n     * Generate task cards\r\n     */\r\n    appendTasks(placeholder, tasks) {\r\n        tasks.forEach((task) => {\r\n            var innerContent = this.renderInnerCardContent(task);\r\n            var top = this.getCardTopPosition(task.startTime);\r\n            var height = this.getCardHeight(task.duration);\r\n\r\n            var card = $('<div></div>')\r\n                .attr({\r\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\r\n                    title: this.toTimeString(task.startTime) + ' - ' + this.toTimeString(task.startTime + task.duration)\r\n                });\r\n            card.on('click', (e) => { this.settings.onClick && this.settings.onClick(e, task) });\r\n            card.append(innerContent)\r\n                .appendTo(placeholder);\r\n        }, this);\r\n    }\r\n\r\n    onPointerUp(event) {\r\n        let op = this.operation;\r\n        if (!this.operation) { return; }\r\n\r\n        this.$ownerDocument.off('mouseup');\r\n        this.$ownerDocument.off('mousemove');\r\n\r\n        this.operation = null;\r\n    }\r\n\r\n    onPointerMove(event) {\r\n        let op = this.operation;\r\n        if (!this.operation) { return; }\r\n\r\n        // Determine the delta change between start and new mouse position, as a percentage of the table width\r\n        let difference = (event.pageX - op.startX);// / this.$scheduleEl.width() * 100;\r\n        if (difference === 0) {\r\n            return;\r\n        }\r\n\r\n        let columnNumber = op.columnNumber;\r\n        let width = op.width + difference;\r\n        this.updateColumnWidth(columnNumber, width.toFixed(2));\r\n    }\r\n\r\n    onPointerDown(event) {\r\n        // Only applies to left-click dragging\r\n        if (event.which !== 1) { return; }\r\n\r\n        // If a previous this.operation is defined, we missed the last mouseup.\r\n        // Probably gobbled up by user mousing out the window then releasing.\r\n        // We'll simulate a pointerup here prior to it\r\n        if (this.operation) {\r\n            this.onPointerUp(event);\r\n        }\r\n\r\n        let $currentGrip = $(event.currentTarget);\r\n        let columnNumber = $currentGrip.data('column-id');\r\n\r\n        console.log(this.$headerContainer);\r\n\r\n        let gripIndex = $currentGrip.index();\r\n        let $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\r\n\r\n        let leftWidth = $leftColumn[0].clientWidth;\r\n\r\n        this.operation = {\r\n            columnNumber,\r\n            startX: event.pageX,\r\n            width: leftWidth\r\n        };\r\n\r\n        this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\r\n        this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    updateColumnWidth(columnNumber, width) {\r\n        width = Math.max(width, this.settings.minColumnWidth);\r\n        $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')')\r\n            .css('flex-basis', width + 'px');\r\n\r\n        let column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\r\n        var diff = column.width() - width;\r\n        column.width(width);\r\n\r\n        $('.' + this.settings.resizableHandlerCssClass + ' > div').each((index, el) => {\r\n            if (index >= columnNumber) {\r\n                let $el = $(el);\r\n                let left = parseInt($el.css('left').replace('px', ''));\r\n                $el.css('left', left - diff);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Skeduler;"]}