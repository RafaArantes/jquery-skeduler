{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jquery.skeduler.js","src/adapter.js","src/index.js","src/items/index.js","src/settings.js","src/skeduler.js","src/template/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_skeduler","_skeduler2","$","fn","skeduler","options","$container","this","./skeduler","2","Object","defineProperty","value","_adapter","./adapter","3","_template","div","cssClass","addClass","getItemDivs","settings","$div","itemsOptions","itemCardCssClass","items","template","compileTemplate","itemCardTemplate","time","item","interval","start","end","map","index","clone","data","html","populateSkedulerItems","$skedulerItemsEl","containerSelector","empty","itemsCssClass","$ownerDocument","ownerDocument","$shifts","workingIntervalPlaceholderCssClass","$skedulerItemsContainerEl","title","appendTo","$items","forEach","el","append","operation","mouseUp","event","_operation","$movingCard","$card","$siEl","highlightItemCss","rowHeight","lineHeight","parseInt","offsetInMinutes","rowsPerHour","offsetTop","parent","workingTimeIntervals","onItemWillBeAssigned","detach","css","top","left","height","clientHeight","width","removeClass","on","mouseDownOnCard","remove","show","hide","off","mouseMove","_operation2","offsetX","offsetY","newOffsetX","pageX","newOffsetY","pageY","_window","defaultView","x","y","scrollY","duration","each","$this","elementBounding","getBoundingClientRect","$el","find","right","bottom","rowCount","Math","floor","_top","min","max","matchResult","matchFunc","color","match","which","$skedulerWrapper","skedulerWrapperCssClass","currentTarget","preventDefault","../template","4","defaultSettings","headers","tasks","notAllocatedLabel","cardTemplate","onClick","task","containerCssClass","headerContainerCssClass","schedulerContainerCssClass","taskPlaceholderCssClass","cellCssClass","resizableHandlerCssClass","resizableSliderCssClass","borderWidth","columnWidth","minColumnWidth","columnResizeEnabled","debug","enabled","5","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_settings","_items","_items2","Skeduler","extend","$headerContainer","$scheduleEl","resizeAllColumns","console","refresh","timeEnd","populate","_this","getHeader","element","text","scheduleTimelineEl","scheduleBodyEl","gridColumnElement","j","timelineCell","toTimeString","workingIntervalsPlaceholder","intervals","appendAvailableInterval","prepend","updateColumnWidth","configureResizing","_this2","skedulerElResizableHandler","resizableSliderHeight","_","offsetLeft","clientWidth","onPointerDown","bind","placeholder","column","_this3","innerContent","getCardTopPosition","parseTime","getCardHeight","skItemHightlightDiv","shiftDiv","attr","style","appendTasks","filter","intervalStart","_this4","getItemDiv","op","difference","startX","columnNumber","toFixed","onPointerUp","$currentGrip","gripIndex","$leftColumn","eq","leftWidth","onPointerMove","diff","replace","ceil","durationInMinutes","heightOfMinute","startTime","offsetTime","startTimeInt","test","split","./items","./settings","./template","6","funcs","result","regKeys","regFuncs","exec","hasOwnProperty"],"mappings":"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","file":"jquery.skeduler.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * jquery-skeduler - This is jQuery plugin which provider you simple scheduler with some items on OX and 24-hours timeline on OY.\n * @date Sun Aug 13 2017 21:40:47 GMT+1000 (+10)\n * @version v0.2.0-beta.0\n * @link \n * @license ISC\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\n/**\n * Generate scheduler grid with task cards\n * options:\n * - headers: string[] - array of headers\n * - tasks: Task[] - array of tasks\n * - containerCssClass: string - css class of main container\n * - headerContainerCssClass: string - css class of header container\n * - schedulerContainerCssClass: string - css class of scheduler\n * - lineHeight - height of one half-hour cell in grid\n * - borderWidth - width of border of cell in grid\n */\n$.fn.skeduler = function (options) {\n  var $container = $(this);\n  var skeduler = new _skeduler2['default']($container, options);\n\n  return skeduler;\n};\n\n$.skeduler = _skeduler2['default'];\n\n},{\"./skeduler\":5}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nexports['default'] = _skeduler2['default'];\nmodule.exports = exports['default'];\n\n},{\"./adapter\":1,\"./skeduler\":5}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _template = require('../template');\n\nvar div = function div(cssClass) {\n    return $('<div></div>').addClass(cssClass);\n};\n\nvar getItemDivs = function getItemDivs(settings) {\n    var $div = div(settings.itemsOptions.itemCardCssClass);\n    var items = settings.itemsOptions.items;\n    var template = (0, _template.compileTemplate)(settings.itemsOptions.itemCardTemplate, {\n        time: function time(item) {\n            return item.interval ? item.interval.start + ' to ' + item.interval.end : '';\n        }\n    });\n\n    return items.map(function (item, index) {\n        return $div.clone().data('index', index).html(template(item));\n    });\n};\n\nvar populateSkedulerItems = function populateSkedulerItems(settings) {\n    var $skedulerItemsEl = $(settings.itemsOptions.containerSelector).empty().addClass(settings.itemsOptions.itemsCssClass);\n    var $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    var $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\n\n    var $headerDiv = div().html('<h1 class=\"si-header\">' + settings.itemsOptions.title + '</h1>').appendTo($skedulerItemsEl);\n\n    var $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(function (el) {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    var operation = null;\n\n    var mouseUp = function mouseUp(event) {\n        if (operation == null) return;\n\n        var _operation = operation;\n        var $movingCard = _operation.$movingCard;\n        var $card = _operation.$card;\n\n        var $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        if ($siEl.length !== 0 && $siEl.data('match') == 1) {\n            var rowHeight = settings.lineHeight + 1;\n            var index = parseInt($movingCard.data('index'));\n            var item = settings.itemsOptions.items[index];\n            var offsetInMinutes = 60 / settings.rowsPerHour * ($movingCard[0].offsetTop / rowHeight); // <<== FIXME\n            var interval = settings.data[$siEl.parent().data('column')].workingTimeIntervals[$siEl.parent().data('item-index')];\n\n            settings.itemsOptions.onItemWillBeAssigned && settings.itemsOptions.onItemWillBeAssigned({ item: item, interval: interval, offsetInMinutes: offsetInMinutes });\n\n            $movingCard.detach().css({ top: $siEl[0].offsetTop, left: 0 }).height($siEl[0].clientHeight).width('auto').removeClass(settings.itemsOptions.itemCardCssClass + '-moving').addClass(settings.itemsOptions.itemCardCssClass + '-pinned').appendTo($siEl.parent());\n\n            $movingCard.on('mousedown', mouseDownOnCard);\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    var mouseMove = function mouseMove(event) {\n        if (operation == null) return;\n\n        var _operation2 = operation;\n        var $movingCard = _operation2.$movingCard;\n        var offsetX = _operation2.offsetX;\n        var offsetY = _operation2.offsetY;\n\n        var newOffsetX = event.pageX - offsetX,\n            newOffsetY = event.pageY - offsetY;\n\n        $movingCard.css({\n            top: newOffsetY + 'px',\n            left: newOffsetX + 'px'\n        });\n\n        // Higlight shifts\n        var _window = $ownerDocument[0].defaultView;\n        var x = event.pageX;\n        var y = event.pageY - _window.scrollY;\n\n        var rowHeight = settings.lineHeight + 1;\n        var rowsPerHour = settings.rowsPerHour;\n\n        var index = parseInt($movingCard.data('index'));\n        var item = settings.itemsOptions.items[index];\n        var duration = item.duration;\n        var height = duration * (rowHeight * rowsPerHour / 60);\n\n        $shifts.each(function () {\n            var $this = $(this);\n            var elementBounding = this.getBoundingClientRect();\n            var $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\n\n            if (x > elementBounding.left && x < elementBounding.right && y > elementBounding.top && y < elementBounding.bottom) {\n\n                var offsetTop = y - elementBounding.top;\n                var rowCount = Math.floor(offsetTop / rowHeight) - 1;\n                var _top = Math.min(Math.max(0, rowCount * rowHeight), this.clientHeight - height);\n\n                var offsetInMinutes = 60 / settings.rowsPerHour * (_top / rowHeight); // <<== FIXME\n                var interval = settings.data[$this.data('column')].workingTimeIntervals[$this.data('item-index')];\n                var matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\n\n                $el.css({ top: _top }).css('background-color', matchResult.color).height(height).show();\n\n                $el.data('match', +matchResult.match);\n            } else {\n                $el.data('match', 0);\n                $el.hide();\n            }\n        });\n    };\n\n    var mouseDownOnCard = function mouseDownOnCard(event /*: MouseEvent */) {\n        if (event.which !== 1) {\n            return;\n        }\n\n        var $skedulerWrapper = $('.' + settings.skedulerWrapperCssClass);\n        var $card = $(event.currentTarget);\n\n        var $movingCard = $card.clone().data('index', $card.data('index')).addClass(settings.itemsOptions.itemCardCssClass + '-moving').removeClass(settings.itemsOptions.itemCardCssClass + '-pinned').width($card.width()).appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        var offsetX = event.pageX - event.offsetX,\n            offsetY = event.pageY - event.offsetY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card: $card,\n            $movingCard: $movingCard,\n            offsetX: event.offsetX,\n            offsetY: event.offsetY\n        };\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $skedulerItemsEl.find('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\n};\n\nexports['default'] = populateSkedulerItems;\nmodule.exports = exports['default'];\n\n},{\"../template\":6}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar defaultSettings = {\n    // Data attributes\n    headers: null, // string[] - Array of column headers\n    tasks: [], // Task[] - Array of tasks. Required fields:\n    // id: number, startTime: number, duration: number, column: number\n\n    notAllocatedLabel: 'Not allocated',\n\n    // Card template - Inner content of task card.\n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function onClick(e, task) {},\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30, // height of one line in grid\n    borderWidth: 1, // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2, // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '<div>${duration}</div>',\n        items: [],\n        title: 'Items',\n        matchFunc: function matchFunc() {\n            return { match: true };\n        }\n    }\n};\n\nexports.defaultSettings = defaultSettings;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _settings = require('./settings');\n\nvar _items = require('./items');\n\nvar _items2 = _interopRequireDefault(_items);\n\nvar _template = require('./template');\n\nvar div = function div(cssClass) {\n    return $('<div></div>').addClass(cssClass);\n};\n\nvar Skeduler = (function () {\n    function Skeduler($container, options) {\n        _classCallCheck(this, Skeduler);\n\n        this.settings = $.extend(true, _settings.defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null;\n        this.operation = null;\n        this.resizeAllColumns = true;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.refresh();\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    _createClass(Skeduler, [{\n        key: 'setRowsPerHour',\n        value: function setRowsPerHour(rowsPerHour) {\n            this.settings.rowsPerHour = rowsPerHour;\n            this.refresh();\n        }\n    }, {\n        key: 'setResizeAllColumns',\n        value: function setResizeAllColumns(resizeAllColumns) {\n            this.resizeAllColumns = resizeAllColumns;\n        }\n    }, {\n        key: 'refresh',\n        value: function refresh() {\n            this.populate();\n            if (this.settings.itemsOptions.enabled) {\n                (0, _items2['default'])(this.settings);\n            }\n        }\n    }, {\n        key: 'populate',\n        value: function populate() {\n            var _this = this;\n\n            this.$container.empty();\n            this.$container.addClass(this.settings.containerCssClass);\n\n            var headers = this.settings.headers ? this.settings.headers : this.settings.data.map(this.settings.getHeader);\n\n            // Add headers\n            this.$headerContainer = div(this.settings.headerContainerCssClass);\n            headers.forEach(function (element) {\n                div().text(element).appendTo(_this.$headerContainer);\n            }, this);\n            this.$container.append(this.$headerContainer);\n\n            // Add scheduler\n            this.$scheduleEl = div(this.settings.schedulerContainerCssClass);\n            var scheduleTimelineEl = div(this.settings.schedulerContainerCssClass + '-timeline');\n            var scheduleBodyEl = div(this.settings.schedulerContainerCssClass + '-body');\n\n            var gridColumnElement = div();\n\n            for (var i = 0; i < 24; i++) {\n                // Populate timeline\n                for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                    var timelineCell = div().height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                    if (j == 0) {\n                        timelineCell = timelineCell.css(\"line-height\", this.settings.lineHeight + 'px').text(j == 0 ? this.toTimeString(i) : \"\");\n                    }\n                    timelineCell.appendTo(scheduleTimelineEl);\n\n                    div(this.settings.cellCssClass).height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\").appendTo(gridColumnElement);\n                }\n            }\n\n            // Populate grid\n            for (var j = 0; j < headers.length; j++) {\n                var el = gridColumnElement.clone();\n\n                // fixme [workingTimeIntervals must not use index]\n                var workingIntervalsPlaceholder = div(this.settings.workingIntervalPlaceholderCssClass);\n                var intervals = this.settings.data[j].workingTimeIntervals;\n                this.appendAvailableInterval(workingIntervalsPlaceholder, intervals, j);\n\n                el.prepend(workingIntervalsPlaceholder);\n                el.appendTo(scheduleBodyEl);\n\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            this.$scheduleEl.append(scheduleTimelineEl);\n            this.$scheduleEl.append(scheduleBodyEl);\n\n            this.$container.append(this.$scheduleEl);\n\n            // Set default width for columns\n            for (var j = 0; j < headers.length; j++) {\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            // Configure resizing\n            if (this.settings.columnResizeEnabled) {\n                this.configureResizing();\n            }\n        }\n    }, {\n        key: 'configureResizing',\n        value: function configureResizing() {\n            var _this2 = this;\n\n            var skedulerElResizableHandler = div(this.settings.resizableHandlerCssClass);\n\n            this.$container.prepend(skedulerElResizableHandler);\n\n            skedulerElResizableHandler.width(this.$container.width());\n\n            var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n            var index = 0;\n            this.$headerContainer.find('div').each(function (_, el) {\n                div(_this2.settings.resizableSliderCssClass).css('left', el.offsetLeft + el.clientWidth).height(resizableSliderHeight).data('column-id', index++).appendTo(skedulerElResizableHandler);\n            });\n\n            skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n        }\n    }, {\n        key: 'appendAvailableInterval',\n        value: function appendAvailableInterval(placeholder, intervals, column) {\n            var _this3 = this;\n\n            intervals.forEach(function (interval, index) {\n                var innerContent = div().text(_this3.settings.notAllocatedLabel);\n                var top = _this3.getCardTopPosition(interval.start) + 2;\n                var duration = _this3.parseTime(interval.end) - _this3.parseTime(interval.start);\n                var height = _this3.getCardHeight(duration) - 5;\n\n                var skItemHightlightDiv = div('si-highlight-item').hide();\n\n                var shiftDiv = div().attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n                shiftDiv.data('column', column).data('item-index', index).append(innerContent).append(skItemHightlightDiv).appendTo(placeholder);\n\n                _this3.appendTasks(shiftDiv, interval.start, _this3.settings.tasks.filter(function (t) {\n                    return t.column == column;\n                }));\n                // TODO: ^^^ filter by shift interval too\n            }, this);\n        }\n\n        /** \n         * Generate task cards\n         */\n    }, {\n        key: 'appendTasks',\n        value: function appendTasks(placeholder, intervalStart, tasks) {\n            var _this4 = this;\n\n            tasks.forEach(function (task) {\n                var top = _this4.getCardTopPosition(task.start, intervalStart);\n                var height = _this4.getCardHeight(task.item.duration / 60);\n\n                _this4.getItemDiv(task.item).attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                }).addClass('' + _this4.settings.itemsOptions.itemCardCssClass).addClass(_this4.settings.itemsOptions.itemCardCssClass + '-pinned').width('auto').appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'onPointerUp',\n        value: function onPointerUp(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            this.$ownerDocument.off('mouseup');\n            this.$ownerDocument.off('mousemove');\n\n            this.operation = null;\n        }\n    }, {\n        key: 'onPointerMove',\n        value: function onPointerMove(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            // Determine the delta change between start and new mouse position, as a percentage of the table width\n            var difference = event.pageX - op.startX; // / this.$scheduleEl.width() * 100;\n            if (difference === 0) {\n                return;\n            }\n\n            var columnNumber = op.columnNumber;\n            var width = op.width + difference;\n            if (this.resizeAllColumns) {\n                for (var i = 0; i < this.settings.data.length; i++) {\n                    this.updateColumnWidth(i, width.toFixed(2));\n                }\n            } else {\n                this.updateColumnWidth(columnNumber, width.toFixed(2));\n            }\n        }\n    }, {\n        key: 'onPointerDown',\n        value: function onPointerDown(event) {\n            // Only applies to left-click dragging\n            if (event.which !== 1) {\n                return;\n            }\n\n            // If a previous this.operation is defined, we missed the last mouseup.\n            // Probably gobbled up by user mousing out the window then releasing.\n            // We'll simulate a pointerup here prior to it\n            if (this.operation) {\n                this.onPointerUp(event);\n            }\n\n            var $currentGrip = $(event.currentTarget);\n            var columnNumber = $currentGrip.data('column-id');\n\n            var gripIndex = $currentGrip.index();\n            var $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n            var leftWidth = $leftColumn[0].clientWidth;\n\n            this.operation = {\n                columnNumber: columnNumber,\n                startX: event.pageX,\n                width: leftWidth\n            };\n\n            this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n            this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'updateColumnWidth',\n        value: function updateColumnWidth(columnNumber, width) {\n            width = Math.max(width, this.settings.minColumnWidth);\n            $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')').css('flex-basis', width + 'px');\n\n            var column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n            var diff = column.width() - width;\n            column.width(width);\n\n            $('.' + this.settings.resizableHandlerCssClass + ' > div').each(function (index, el) {\n                if (index >= columnNumber) {\n                    var $el = $(el);\n                    var left = parseInt($el.css('left').replace('px', ''));\n                    $el.css('left', left - diff);\n                }\n            });\n        }\n    }, {\n        key: 'getItemDiv',\n        value: function getItemDiv(item) {\n            var $div = div(this.settings.itemsOptions.itemCardCssClass);\n            var template = (0, _template.compileTemplate)(this.settings.itemsOptions.itemCardTemplate, {\n                time: function time(item) {\n                    return item.interval ? item.interval.start + ' to ' + item.interval.end : '';\n                }\n            });\n\n            return div().html(template(item));\n        }\n\n        /**\n        * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n        */\n    }, {\n        key: 'toTimeString',\n        value: function toTimeString(value) {\n            return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n        }\n\n        /**\n         * Return height of task card based on duration of the task\n         * duration - in hours\n         */\n    }, {\n        key: 'getCardHeight',\n        value: function getCardHeight(duration) {\n            var durationInMinutes = duration * 60;\n            var heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n            return Math.ceil(durationInMinutes * heightOfMinute);\n        }\n\n        /**\n         * Return top offset of task card based on start time of the task\n         * startTime - in hours\n         */\n    }, {\n        key: 'getCardTopPosition',\n        value: function getCardTopPosition(startTime, offsetTime) {\n            var startTimeInt = this.parseTime(startTime);\n            if (offsetTime) {\n                startTimeInt -= this.parseTime(offsetTime);\n            }\n            return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n        }\n\n        /**\n         * Parse time string and present it in hours (ex. '13:30' => 13.5)\n         * @param {*string} time - time in format like '13:50', '11:00', '14'\n         */\n    }, {\n        key: 'parseTime',\n        value: function parseTime(time) {\n            return (/\\d{1,2}\\:\\d{2}/.test(time) ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 : parseInt(time)\n            );\n        }\n    }]);\n\n    return Skeduler;\n})();\n\nexports['default'] = Skeduler;\nmodule.exports = exports['default'];\n\n},{\"./items\":3,\"./settings\":4,\"./template\":6}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar compileTemplate = function compileTemplate(template, funcs) {\n    return function (item) {\n        var result = template;\n        var regKeys = /\\$\\{(\\w+)\\}/g;\n        var regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n        var match = 1;\n        while (true) {\n            match = regKeys.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (item.hasOwnProperty(key)) {\n                result = result.replace(match[0], item[key]);\n            }\n        }\n\n        while (funcs) {\n            match = regFuncs.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (funcs.hasOwnProperty(key)) {\n                result = result.replace(match[0], funcs[key](item));\n            }\n        }\n\n        return result;\n    };\n};\n\nexports[\"default\"] = { compileTemplate: compileTemplate };\nmodule.exports = exports[\"default\"];\n\n},{}]},{},[2])\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvYWRhcHRlci5qcyIsInNyYy9pbmRleC5qcyIsInNyYy9pdGVtcy9pbmRleC5qcyIsInNyYy9zZXR0aW5ncy5qcyIsInNyYy9za2VkdWxlci5qcyIsInNyYy90ZW1wbGF0ZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7d0JDQXFCLFlBQVk7Ozs7Ozs7Ozs7Ozs7OztBQWFqQyxDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsR0FBRyxVQUFTLE9BQU8sRUFBRTtBQUM5QixNQUFJLFVBQVUsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekIsTUFBSSxRQUFRLEdBQUcsMEJBQWEsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDOztBQUVqRCxTQUFPLFFBQVEsQ0FBQztDQUNuQixDQUFDOztBQUVGLENBQUMsQ0FBQyxRQUFRLHdCQUFXLENBQUM7Ozs7Ozs7Ozs7O3dCQ3BCRCxZQUFZOzs7O3VCQUNiLFdBQVc7Ozs7Ozs7Ozs7Ozs7O3dCQ0RDLGFBQWE7O0FBRTdDLElBQU0sR0FBRyxHQUFHLFNBQU4sR0FBRyxDQUFJLFFBQVE7V0FBSyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztDQUFBLENBQUM7O0FBRTlELElBQU0sV0FBVyxHQUFHLFNBQWQsV0FBVyxDQUFJLFFBQVEsRUFBSztBQUM5QixRQUFNLElBQUksR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3pELFFBQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDO0FBQzFDLFFBQU0sUUFBUSxHQUFHLCtCQUFnQixRQUFRLENBQUMsWUFBWSxDQUFDLGdCQUFnQixFQUFFO0FBQ3JFLFlBQUksRUFBRSxjQUFDLElBQUk7bUJBQUssSUFBSSxDQUFDLFFBQVEsR0FBTSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssWUFBTyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBSyxFQUFFO1NBQUE7S0FDeEYsQ0FBQyxDQUFDOztBQUVILFdBQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxVQUFDLElBQUksRUFBRSxLQUFLO2VBQUssSUFBSSxDQUFDLEtBQUssRUFBRSxDQUN6QyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQUEsQ0FDeEIsQ0FBQztDQUNMLENBQUE7O0FBRUQsSUFBTSxxQkFBcUIsR0FBRyxTQUF4QixxQkFBcUIsQ0FBSSxRQUFRLEVBQUs7QUFDeEMsUUFBTSxnQkFBZ0IsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxDQUM5RCxLQUFLLEVBQUUsQ0FDUCxRQUFRLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNuRCxRQUFNLGNBQWMsR0FBRyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDNUQsUUFBTSxPQUFPLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsa0NBQWtDLEdBQUcsUUFBUSxDQUFDLENBQUM7O0FBRWhGLFFBQU0sVUFBVSxHQUFHLEdBQUcsRUFBRSxDQUNuQixJQUFJLENBQUMsd0JBQXdCLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLENBQ3RFLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDOztBQUVoQyxRQUFNLHlCQUF5QixHQUFHLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUN0RCxRQUFJLE1BQU0sR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDbkMsVUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFBLEVBQUUsRUFBSTtBQUNqQixpQ0FBeUIsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDeEMsQ0FBQyxDQUFDO0FBQ0gsNkJBQXlCLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLENBQUM7O0FBRXJELFFBQUksU0FBUyxHQUFHLElBQUksQ0FBQzs7QUFFckIsUUFBTSxPQUFPLEdBQUcsU0FBVixPQUFPLENBQUksS0FBSyxFQUFLO0FBQ3ZCLFlBQUksU0FBUyxJQUFJLElBQUksRUFBRSxPQUFPOzt5QkFFQyxTQUFTO1lBQWhDLFdBQVcsY0FBWCxXQUFXO1lBQUUsS0FBSyxjQUFMLEtBQUs7O0FBRTFCLFlBQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsR0FBRyxVQUFVLENBQUMsQ0FBQzs7QUFFM0UsWUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtBQUNoRCxnQkFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7QUFDMUMsZ0JBQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDbEQsZ0JBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2hELGdCQUFNLGVBQWUsR0FBRyxFQUFFLEdBQUcsUUFBUSxDQUFDLFdBQVcsSUFBSSxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQSxBQUFDLENBQUM7QUFDM0YsZ0JBQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQzs7QUFFdEgsb0JBQVEsQ0FBQyxZQUFZLENBQUMsb0JBQW9CLElBQUksUUFBUSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFLElBQUksRUFBSixJQUFJLEVBQUUsUUFBUSxFQUFSLFFBQVEsRUFBRSxlQUFlLEVBQWYsZUFBZSxFQUFFLENBQUMsQ0FBQzs7QUFFOUgsdUJBQVcsQ0FDTixNQUFNLEVBQUUsQ0FDUixHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FDekMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FDN0IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUNiLFdBQVcsQ0FBSSxRQUFRLENBQUMsWUFBWSxDQUFDLGdCQUFnQixhQUFVLENBQy9ELFFBQVEsQ0FBSSxRQUFRLENBQUMsWUFBWSxDQUFDLGdCQUFnQixhQUFVLENBQzVELFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQzs7QUFFOUIsdUJBQVcsQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFLGVBQWUsQ0FBQyxDQUFDO1NBQ2hELE1BQU07QUFDSCx1QkFBVyxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ3JCLGlCQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDaEI7O0FBRUQsU0FBQyxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7O0FBRXZELGlCQUFTLEdBQUcsSUFBSSxDQUFDO0FBQ2pCLHNCQUFjLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsQ0FBQztBQUMzQyxzQkFBYyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDMUMsQ0FBQzs7QUFFRixRQUFNLFNBQVMsR0FBRyxTQUFaLFNBQVMsQ0FBSSxLQUFLLEVBQUs7QUFDekIsWUFBSSxTQUFTLElBQUksSUFBSSxFQUFFLE9BQU87OzBCQUVZLFNBQVM7WUFBM0MsV0FBVyxlQUFYLFdBQVc7WUFBRSxPQUFPLGVBQVAsT0FBTztZQUFFLE9BQU8sZUFBUCxPQUFPOztBQUVyQyxZQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsS0FBSyxHQUFHLE9BQU87WUFDcEMsVUFBVSxHQUFHLEtBQUssQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDOztBQUV2QyxtQkFBVyxDQUFDLEdBQUcsQ0FBQztBQUNaLGVBQUcsRUFBRSxVQUFVLEdBQUcsSUFBSTtBQUN0QixnQkFBSSxFQUFFLFVBQVUsR0FBRyxJQUFJO1NBQzFCLENBQUMsQ0FBQzs7O0FBR0gsWUFBTSxPQUFPLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQztBQUM5QyxZQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO0FBQ3RCLFlBQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQzs7QUFFeEMsWUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7QUFDMUMsWUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLFdBQVcsQ0FBQzs7QUFFekMsWUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUNsRCxZQUFNLElBQUksR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNoRCxZQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBQy9CLFlBQU0sTUFBTSxHQUFHLFFBQVEsSUFBSSxTQUFTLEdBQUcsV0FBVyxHQUFHLEVBQUUsQ0FBQSxBQUFDLENBQUM7O0FBRXpELGVBQU8sQ0FBQyxJQUFJLENBQUMsWUFBVztBQUNwQixnQkFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3RCLGdCQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztBQUNyRCxnQkFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDOztBQUVyRSxnQkFBSSxDQUFDLEdBQUcsZUFBZSxDQUFDLElBQUksSUFBSSxDQUFDLEdBQUcsZUFBZSxDQUFDLEtBQUssSUFDckQsQ0FBQyxHQUFHLGVBQWUsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLGVBQWUsQ0FBQyxNQUFNLEVBQUU7O0FBRXZELG9CQUFNLFNBQVMsR0FBRyxDQUFDLEdBQUcsZUFBZSxDQUFDLEdBQUcsQ0FBQztBQUMxQyxvQkFBTSxRQUFRLEdBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxBQUFDLENBQUM7QUFDekQsb0JBQU0sSUFBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQ2hCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLFFBQVEsR0FBRyxTQUFTLENBQUMsRUFDakMsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQzdCLENBQUM7O0FBRUYsb0JBQU0sZUFBZSxHQUFHLEVBQUUsR0FBRyxRQUFRLENBQUMsV0FBVyxJQUFJLElBQUcsR0FBRyxTQUFTLENBQUEsQUFBQyxDQUFDO0FBQ3RFLG9CQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFDcEcsb0JBQU0sV0FBVyxHQUFHLFFBQVEsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsZUFBZSxDQUFDLENBQUM7O0FBRXJGLG1CQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUcsRUFBRSxDQUFDLENBQ2hCLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQzFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FDZCxJQUFJLEVBQUUsQ0FBQzs7QUFHWixtQkFBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDekMsTUFBTTtBQUNILG1CQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNyQixtQkFBRyxDQUFDLElBQUksRUFBRSxDQUFDO2FBQ2Q7U0FDSixDQUFDLENBQUM7S0FDTixDQUFDOztBQUVGLFFBQU0sZUFBZSxHQUFHLFNBQWxCLGVBQWUsQ0FBSSxLQUFLLG9CQUF3QjtBQUNsRCxZQUFJLEtBQUssQ0FBQyxLQUFLLEtBQUssQ0FBQyxFQUFFO0FBQUUsbUJBQU87U0FBRTs7QUFFbEMsWUFBTSxnQkFBZ0IsR0FBRyxDQUFDLE9BQUssUUFBUSxDQUFDLHVCQUF1QixDQUFHLENBQUM7QUFDbkUsWUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQzs7QUFFckMsWUFBTSxXQUFXLEdBQ2IsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUNaLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUNsQyxRQUFRLENBQUksUUFBUSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsYUFBVSxDQUM1RCxXQUFXLENBQUksUUFBUSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsYUFBVSxDQUMvRCxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQ3BCLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDOzs7O0FBSWhDLFlBQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU87WUFDdkMsT0FBTyxHQUFHLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQzs7QUFFMUMsbUJBQVcsQ0FBQyxHQUFHLENBQUM7QUFDWixlQUFHLEVBQUUsT0FBTyxHQUFHLElBQUk7QUFDbkIsZ0JBQUksRUFBRSxPQUFPLEdBQUcsSUFBSTtTQUN2QixDQUFDLENBQUM7O0FBRUgsaUJBQVMsR0FBRztBQUNSLGlCQUFLLEVBQUwsS0FBSztBQUNMLHVCQUFXLEVBQVgsV0FBVztBQUNYLG1CQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU87QUFDdEIsbUJBQU8sRUFBRSxLQUFLLENBQUMsT0FBTztTQUN6QixDQUFDOztBQUVGLGFBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQzs7QUFFYixzQkFBYyxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDMUMsc0JBQWMsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDOztBQUV0QyxhQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7S0FDMUIsQ0FBQzs7QUFFRixvQkFBZ0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0NBQ3hHLENBQUE7O3FCQUVjLHFCQUFxQjs7Ozs7Ozs7O0FDaExwQyxJQUFNLGVBQWUsR0FBRzs7QUFFcEIsV0FBTyxFQUFFLElBQUk7QUFDYixTQUFLLEVBQUUsRUFBRTs7O0FBR1QscUJBQWlCLEVBQUUsZUFBZTs7OztBQUlsQyxnQkFBWSxFQUFFLGtCQUFrQjs7O0FBR2hDLFdBQU8sRUFBRSxpQkFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUc7OztBQUcvQiwyQkFBdUIsRUFBRSxrQkFBa0I7QUFDM0MscUJBQWlCLEVBQUUsb0JBQW9CO0FBQ3ZDLDJCQUF1QixFQUFFLGtCQUFrQjtBQUMzQyw4QkFBMEIsRUFBRSxlQUFlO0FBQzNDLDJCQUF1QixFQUFFLDJCQUEyQjtBQUNwRCxzQ0FBa0MsRUFBRSwrQkFBK0I7QUFDbkUsZ0JBQVksRUFBRSxlQUFlO0FBQzdCLDRCQUF3QixFQUFFLG1CQUFtQjtBQUM3QywyQkFBdUIsRUFBRSxrQkFBa0I7O0FBRTNDLGNBQVUsRUFBRSxFQUFFO0FBQ2QsZUFBVyxFQUFFLENBQUM7QUFDZCxlQUFXLEVBQUUsR0FBRztBQUNoQixrQkFBYyxFQUFFLEdBQUc7O0FBRW5CLGVBQVcsRUFBRSxDQUFDOztBQUVkLHVCQUFtQixFQUFFLElBQUk7O0FBRXpCLFNBQUssRUFBRSxJQUFJOztBQUVYLGdCQUFZLEVBQUU7QUFDVixlQUFPLEVBQUUsS0FBSztBQUNkLHFCQUFhLEVBQUUsZ0JBQWdCO0FBQy9CLHdCQUFnQixFQUFFLG1CQUFtQjtBQUNyQyx5QkFBaUIsRUFBRSxpQkFBaUI7QUFDcEMsd0JBQWdCLEVBQUUsU0FBUztBQUMzQix3QkFBZ0IsRUFBRSx3QkFBd0I7QUFDMUMsYUFBSyxFQUFFLEVBQUU7QUFDVCxhQUFLLEVBQUUsT0FBTztBQUNkLGlCQUFTLEVBQUUscUJBQU07QUFBRSxtQkFBTyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQTtTQUFFO0tBQzlDO0NBQ0osQ0FBQzs7UUFFTyxlQUFlLEdBQWYsZUFBZTs7Ozs7Ozs7Ozs7Ozs7O3dCQ2xEUSxZQUFZOztxQkFDVixTQUFTOzs7O3dCQUNYLFlBQVk7O0FBRTVDLElBQU0sR0FBRyxHQUFHLFNBQU4sR0FBRyxDQUFJLFFBQVE7V0FBSyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztDQUFBLENBQUM7O0lBRXhELFFBQVE7QUFDQyxhQURULFFBQVEsQ0FDRSxVQUFVLEVBQUUsT0FBTyxFQUFFOzhCQUQvQixRQUFROztBQUVOLFlBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLDZCQUFtQixPQUFPLENBQUMsQ0FBQztBQUN6RCxZQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztBQUM3QixZQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDckQsWUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztBQUM3QixZQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQTtBQUN2QixZQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztBQUN0QixZQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDOztBQUU3QixZQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFO0FBQ3JCLG1CQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQzVCOztBQUVELFlBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQzs7QUFFZixZQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFO0FBQ3JCLG1CQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQy9CO0tBQ0o7O2lCQW5CQyxRQUFROztlQXFCSSx3QkFBQyxXQUFXLEVBQUU7QUFDeEIsZ0JBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztBQUN4QyxnQkFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ2xCOzs7ZUFFa0IsNkJBQUMsZ0JBQWdCLEVBQUU7QUFDbEMsZ0JBQUksQ0FBQyxnQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztTQUM1Qzs7O2VBRU0sbUJBQUc7QUFDTixnQkFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ2hCLGdCQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRTtBQUNwQyx3Q0FBc0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3hDO1NBQ0o7OztlQUVPLG9CQUFHOzs7QUFDUCxnQkFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUN4QixnQkFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDOztBQUUxRCxnQkFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQ2pDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxHQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQzs7O0FBR3BELGdCQUFJLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsdUJBQXVCLENBQUMsQ0FBQztBQUNuRSxtQkFBTyxDQUFDLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBSztBQUN6QixtQkFBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUNkLFFBQVEsQ0FBQyxNQUFLLGdCQUFnQixDQUFDLENBQUM7YUFDeEMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNULGdCQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQzs7O0FBRzlDLGdCQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFDakUsZ0JBQU0sa0JBQWtCLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsMEJBQTBCLEdBQUcsV0FBVyxDQUFDLENBQUM7QUFDdkYsZ0JBQU0sY0FBYyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLDBCQUEwQixHQUFHLE9BQU8sQ0FBQyxDQUFDOztBQUUvRSxnQkFBTSxpQkFBaUIsR0FBRyxHQUFHLEVBQUUsQ0FBQzs7QUFFaEMsaUJBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7O0FBRXpCLHFCQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDaEQsd0JBQUksWUFBWSxHQUFHLEdBQUcsRUFBRSxDQUNuQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FDaEMsUUFBUSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsR0FBRyxDQUFDLEdBQUcsTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDOztBQUVoRSx3QkFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO0FBQ1Isb0NBQVksR0FBRyxZQUFZLENBQ3RCLEdBQUcsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLENBQ25ELElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7cUJBQ2pEO0FBQ0QsZ0NBQVksQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsQ0FBQzs7QUFFMUMsdUJBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FDaEMsUUFBUSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsR0FBRyxDQUFDLEdBQUcsTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUMxRCxRQUFRLENBQUMsaUJBQWlCLENBQUMsQ0FBQztpQkFDcEM7YUFDSjs7O0FBR0QsaUJBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ3JDLG9CQUFNLEVBQUUsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7O0FBR3JDLG9CQUFNLDJCQUEyQixHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGtDQUFrQyxDQUFDLENBQUM7QUFDMUYsb0JBQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLG9CQUFvQixDQUFDO0FBQzdELG9CQUFJLENBQUMsdUJBQXVCLENBQUMsMkJBQTJCLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDOztBQUV4RSxrQkFBRSxDQUFDLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0FBQ3hDLGtCQUFFLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDOztBQUU1QixvQkFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2FBQ3hEOztBQUVELGdCQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0FBQzVDLGdCQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQzs7QUFFeEMsZ0JBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQzs7O0FBR3pDLGlCQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUNyQyxvQkFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2FBQ3hEOzs7QUFHRCxnQkFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLG1CQUFtQixFQUFFO0FBQ25DLG9CQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQzthQUM1QjtTQUNKOzs7ZUFFZ0IsNkJBQUc7OztBQUNoQixnQkFBTSwwQkFBMEIsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDOztBQUUvRSxnQkFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsMEJBQTBCLENBQUMsQ0FBQzs7QUFFcEQsc0NBQTBCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQzs7QUFFMUQsZ0JBQU0scUJBQXFCLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDekYsZ0JBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztBQUNkLGdCQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLENBQUMsRUFBRSxFQUFFLEVBQUs7QUFDOUMsbUJBQUcsQ0FBQyxPQUFLLFFBQVEsQ0FBQyx1QkFBdUIsQ0FBQyxDQUNyQyxHQUFHLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUMzQyxNQUFNLENBQUMscUJBQXFCLENBQUMsQ0FDN0IsSUFBSSxDQUFDLFdBQVcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUMxQixRQUFRLENBQUMsMEJBQTBCLENBQUMsQ0FBQTthQUM1QyxDQUFDLENBQUM7O0FBRUgsc0NBQTBCLENBQUMsRUFBRSxDQUFDLFdBQVcsRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyx1QkFBdUIsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQzFIOzs7ZUFFc0IsaUNBQUMsV0FBVyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUU7OztBQUNwRCxxQkFBUyxDQUFDLE9BQU8sQ0FBQyxVQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUs7QUFDbkMsb0JBQU0sWUFBWSxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFLLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQ2pFLG9CQUFNLEdBQUcsR0FBRyxPQUFLLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDeEQsb0JBQU0sUUFBUSxHQUFHLE9BQUssU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFLLFNBQVMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDL0Usb0JBQU0sTUFBTSxHQUFHLE9BQUssYUFBYSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQzs7QUFFaEQsb0JBQU0sbUJBQW1CLEdBQUcsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7O0FBRTVELG9CQUFNLFFBQVEsR0FBRyxHQUFHLEVBQUUsQ0FDakIsSUFBSSxDQUFDO0FBQ0YseUJBQUssRUFBRSxPQUFPLEdBQUcsR0FBRyxHQUFHLGNBQWMsR0FBRyxNQUFNLEdBQUcsSUFBSTtpQkFDeEQsQ0FBQyxDQUFDOztBQUVQLHdCQUFRLENBQ0gsSUFBSSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FDdEIsSUFBSSxDQUFDLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FDekIsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUNwQixNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FDM0IsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDOztBQUUzQix1QkFBSyxXQUFXLENBQ1osUUFBUSxFQUNSLFFBQVEsQ0FBQyxLQUFLLEVBQ2QsT0FBSyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUM7MkJBQUksQ0FBQyxDQUFDLE1BQU0sSUFBSSxNQUFNO2lCQUFBLENBQUMsQ0FBQyxDQUFDOzthQUc1RCxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ1o7Ozs7Ozs7ZUFLVSxxQkFBQyxXQUFXLEVBQUUsYUFBYSxFQUFFLEtBQUssRUFBRTs7O0FBQzNDLGlCQUFLLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBSSxFQUFLO0FBQ3BCLG9CQUFJLEdBQUcsR0FBRyxPQUFLLGtCQUFrQixDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsYUFBYSxDQUFDLENBQUM7QUFDN0Qsb0JBQUksTUFBTSxHQUFHLE9BQUssYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxDQUFDOztBQUV6RCx1QkFBSyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUNyQixJQUFJLENBQUM7QUFDRix5QkFBSyxFQUFFLE9BQU8sR0FBRyxHQUFHLEdBQUcsY0FBYyxHQUFHLE1BQU0sR0FBRyxJQUFJO2lCQUN4RCxDQUFDLENBQ0QsUUFBUSxNQUFJLE9BQUssUUFBUSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBRyxDQUMxRCxRQUFRLENBQUksT0FBSyxRQUFRLENBQUMsWUFBWSxDQUFDLGdCQUFnQixhQUFVLENBQ2pFLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FDYixRQUFRLENBQUMsV0FBVyxDQUFDLENBQUM7YUFDOUIsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNaOzs7ZUFFVSxxQkFBQyxLQUFLLEVBQUU7QUFDZixnQkFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztBQUN4QixnQkFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7QUFBRSx1QkFBTzthQUFFOztBQUVoQyxnQkFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDbkMsZ0JBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDOztBQUVyQyxnQkFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7U0FDekI7OztlQUVZLHVCQUFDLEtBQUssRUFBRTtBQUNqQixnQkFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztBQUN4QixnQkFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7QUFBRSx1QkFBTzthQUFFOzs7QUFHaEMsZ0JBQUksVUFBVSxHQUFJLEtBQUssQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLE1BQU0sQUFBQyxDQUFDO0FBQzNDLGdCQUFJLFVBQVUsS0FBSyxDQUFDLEVBQUU7QUFDbEIsdUJBQU87YUFDVjs7QUFFRCxnQkFBSSxZQUFZLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQztBQUNuQyxnQkFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUM7QUFDbEMsZ0JBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO0FBQ3ZCLHFCQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ2hELHdCQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDL0M7YUFDSixNQUFNO0FBQ0gsb0JBQUksQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQzFEO1NBQ0o7OztlQUVZLHVCQUFDLEtBQUssRUFBRTs7QUFFakIsZ0JBQUksS0FBSyxDQUFDLEtBQUssS0FBSyxDQUFDLEVBQUU7QUFBRSx1QkFBTzthQUFFOzs7OztBQUtsQyxnQkFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO0FBQ2hCLG9CQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQzNCOztBQUVELGdCQUFJLFlBQVksR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQzFDLGdCQUFJLFlBQVksR0FBRyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDOztBQUVsRCxnQkFBSSxTQUFTLEdBQUcsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ3JDLGdCQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQzs7QUFFbEUsZ0JBQUksU0FBUyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUM7O0FBRTNDLGdCQUFJLENBQUMsU0FBUyxHQUFHO0FBQ2IsNEJBQVksRUFBWixZQUFZO0FBQ1osc0JBQU0sRUFBRSxLQUFLLENBQUMsS0FBSztBQUNuQixxQkFBSyxFQUFFLFNBQVM7YUFDbkIsQ0FBQzs7QUFFRixnQkFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDbkUsZ0JBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDOztBQUUvRCxpQkFBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQzFCOzs7ZUFFZ0IsMkJBQUMsWUFBWSxFQUFFLEtBQUssRUFBRTtBQUNuQyxpQkFBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDdEQsYUFBQyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLHVCQUF1QixHQUFHLFlBQVksR0FBRyxZQUFZLEdBQUcsR0FBRyxDQUFDLENBQzdFLEdBQUcsQ0FBQyxZQUFZLEVBQUUsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDOztBQUVyQyxnQkFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLDBCQUEwQixHQUFHLGlCQUFpQixHQUFHLFlBQVksR0FBRyxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUN6SSxnQkFBSSxJQUFJLEdBQUcsTUFBTSxDQUFDLEtBQUssRUFBRSxHQUFHLEtBQUssQ0FBQztBQUNsQyxrQkFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFcEIsYUFBQyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLHdCQUF3QixHQUFHLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLEtBQUssRUFBRSxFQUFFLEVBQUs7QUFDM0Usb0JBQUksS0FBSyxJQUFJLFlBQVksRUFBRTtBQUN2Qix3QkFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ2hCLHdCQUFJLElBQUksR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDdkQsdUJBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztpQkFDaEM7YUFDSixDQUFDLENBQUM7U0FDTjs7O2VBRVMsb0JBQUMsSUFBSSxFQUFFO0FBQ2IsZ0JBQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQzlELGdCQUFNLFFBQVEsR0FBRywrQkFBZ0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLEVBQUU7QUFDMUUsb0JBQUksRUFBRSxjQUFDLElBQUk7MkJBQUssSUFBSSxDQUFDLFFBQVEsR0FBTSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssWUFBTyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBSyxFQUFFO2lCQUFBO2FBQ3hGLENBQUMsQ0FBQzs7QUFFSCxtQkFBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDckM7Ozs7Ozs7ZUFLVyxzQkFBQyxLQUFLLEVBQUU7QUFDaEIsbUJBQU8sQ0FBQyxLQUFLLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUEsR0FBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFBLEFBQUMsQ0FBQztTQUM5Rzs7Ozs7Ozs7ZUFNWSx1QkFBQyxRQUFRLEVBQUU7QUFDcEIsZ0JBQU0saUJBQWlCLEdBQUcsUUFBUSxHQUFHLEVBQUUsQ0FBQztBQUN4QyxnQkFBTSxjQUFjLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQSxHQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztBQUMvRyxtQkFBTyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGNBQWMsQ0FBQyxDQUFDO1NBQ3hEOzs7Ozs7OztlQU1pQiw0QkFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFO0FBQ3RDLGdCQUFJLFlBQVksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQzdDLGdCQUFJLFVBQVUsRUFBRTtBQUNaLDRCQUFZLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQzthQUM5QztBQUNELG1CQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUEsSUFBSyxZQUFZLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUEsQUFBQyxDQUFDO1NBQzlHOzs7Ozs7OztlQU1RLG1CQUFDLElBQUksRUFBRTtBQUNaLG1CQUFPLGlCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FDOUIsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FDaEUsUUFBUSxDQUFDLElBQUksQ0FBQztjQUFDO1NBQ3RCOzs7V0FuVEMsUUFBUTs7O3FCQXNUQyxRQUFROzs7Ozs7Ozs7QUM1VHZCLElBQU0sZUFBZSxHQUFHLFNBQWxCLGVBQWUsQ0FBSSxRQUFRLEVBQUUsS0FBSztXQUFLLFVBQUEsSUFBSSxFQUFJO0FBQ2pELFlBQUksTUFBTSxHQUFHLFFBQVEsQ0FBQztBQUN0QixZQUFNLE9BQU8sR0FBRyxjQUFjLENBQUM7QUFDL0IsWUFBTSxRQUFRLEdBQUcsa0JBQWtCLENBQUM7O0FBRXBDLFlBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztBQUNkLGVBQU8sSUFBSSxFQUFFO0FBQ1QsaUJBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQy9CLGdCQUFJLENBQUMsS0FBSyxFQUFFLE1BQU07O0FBRWxCLGdCQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkIsZ0JBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUMxQixzQkFBTSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2FBQ2hEO1NBQ0o7O0FBRUQsZUFBTyxLQUFLLEVBQUU7QUFDVixpQkFBSyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDaEMsZ0JBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTTs7QUFFbEIsZ0JBQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuQixnQkFBSSxLQUFLLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO0FBQzNCLHNCQUFNLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7YUFDdkQ7U0FDSjs7QUFFRCxlQUFPLE1BQU0sQ0FBQztLQUNqQjtDQUFBLENBQUE7O3FCQUVjLEVBQUUsZUFBZSxFQUFmLGVBQWUsRUFBRSIsImZpbGUiOiJqcXVlcnkuc2tlZHVsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImltcG9ydCBTa2VkdWxlciBmcm9tICcuL3NrZWR1bGVyJztcblxuLyoqXG4gKiBHZW5lcmF0ZSBzY2hlZHVsZXIgZ3JpZCB3aXRoIHRhc2sgY2FyZHNcbiAqIG9wdGlvbnM6XG4gKiAtIGhlYWRlcnM6IHN0cmluZ1tdIC0gYXJyYXkgb2YgaGVhZGVyc1xuICogLSB0YXNrczogVGFza1tdIC0gYXJyYXkgb2YgdGFza3NcbiAqIC0gY29udGFpbmVyQ3NzQ2xhc3M6IHN0cmluZyAtIGNzcyBjbGFzcyBvZiBtYWluIGNvbnRhaW5lclxuICogLSBoZWFkZXJDb250YWluZXJDc3NDbGFzczogc3RyaW5nIC0gY3NzIGNsYXNzIG9mIGhlYWRlciBjb250YWluZXJcbiAqIC0gc2NoZWR1bGVyQ29udGFpbmVyQ3NzQ2xhc3M6IHN0cmluZyAtIGNzcyBjbGFzcyBvZiBzY2hlZHVsZXJcbiAqIC0gbGluZUhlaWdodCAtIGhlaWdodCBvZiBvbmUgaGFsZi1ob3VyIGNlbGwgaW4gZ3JpZFxuICogLSBib3JkZXJXaWR0aCAtIHdpZHRoIG9mIGJvcmRlciBvZiBjZWxsIGluIGdyaWRcbiAqL1xuJC5mbi5za2VkdWxlciA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICBsZXQgJGNvbnRhaW5lciA9ICQodGhpcyk7XG4gICAgdmFyIHNrZWR1bGVyID0gbmV3IFNrZWR1bGVyKCRjb250YWluZXIsIG9wdGlvbnMpO1xuXG4gICAgcmV0dXJuIHNrZWR1bGVyO1xufTtcblxuJC5za2VkdWxlciA9IFNrZWR1bGVyOyIsImltcG9ydCBTa2VkdWxlciBmcm9tICcuL3NrZWR1bGVyJztcbmltcG9ydCBhZGFwdGVyIGZyb20gJy4vYWRhcHRlcic7XG5cbmV4cG9ydCBkZWZhdWx0IFNrZWR1bGVyOyIsImltcG9ydCB7IGNvbXBpbGVUZW1wbGF0ZSB9IGZyb20gJy4uL3RlbXBsYXRlJztcblxuY29uc3QgZGl2ID0gKGNzc0NsYXNzKSA9PiAkKCc8ZGl2PjwvZGl2PicpLmFkZENsYXNzKGNzc0NsYXNzKTtcblxuY29uc3QgZ2V0SXRlbURpdnMgPSAoc2V0dGluZ3MpID0+IHtcbiAgICBjb25zdCAkZGl2ID0gZGl2KHNldHRpbmdzLml0ZW1zT3B0aW9ucy5pdGVtQ2FyZENzc0NsYXNzKTtcbiAgICBjb25zdCBpdGVtcyA9IHNldHRpbmdzLml0ZW1zT3B0aW9ucy5pdGVtcztcbiAgICBjb25zdCB0ZW1wbGF0ZSA9IGNvbXBpbGVUZW1wbGF0ZShzZXR0aW5ncy5pdGVtc09wdGlvbnMuaXRlbUNhcmRUZW1wbGF0ZSwge1xuICAgICAgICB0aW1lOiAoaXRlbSkgPT4gaXRlbS5pbnRlcnZhbCA/IGAke2l0ZW0uaW50ZXJ2YWwuc3RhcnR9IHRvICR7aXRlbS5pbnRlcnZhbC5lbmR9YCA6ICcnXG4gICAgfSk7XG5cbiAgICByZXR1cm4gaXRlbXMubWFwKChpdGVtLCBpbmRleCkgPT4gJGRpdi5jbG9uZSgpXG4gICAgICAgIC5kYXRhKCdpbmRleCcsIGluZGV4KVxuICAgICAgICAuaHRtbCh0ZW1wbGF0ZShpdGVtKSlcbiAgICApO1xufVxuXG5jb25zdCBwb3B1bGF0ZVNrZWR1bGVySXRlbXMgPSAoc2V0dGluZ3MpID0+IHtcbiAgICBjb25zdCAkc2tlZHVsZXJJdGVtc0VsID0gJChzZXR0aW5ncy5pdGVtc09wdGlvbnMuY29udGFpbmVyU2VsZWN0b3IpXG4gICAgICAgIC5lbXB0eSgpXG4gICAgICAgIC5hZGRDbGFzcyhzZXR0aW5ncy5pdGVtc09wdGlvbnMuaXRlbXNDc3NDbGFzcyk7XG4gICAgY29uc3QgJG93bmVyRG9jdW1lbnQgPSAkKCRza2VkdWxlckl0ZW1zRWxbMF0ub3duZXJEb2N1bWVudCk7XG4gICAgY29uc3QgJHNoaWZ0cyA9ICQoJy4nICsgc2V0dGluZ3Mud29ya2luZ0ludGVydmFsUGxhY2Vob2xkZXJDc3NDbGFzcyArICcgPiBkaXYnKTtcblxuICAgIGNvbnN0ICRoZWFkZXJEaXYgPSBkaXYoKVxuICAgICAgICAuaHRtbCgnPGgxIGNsYXNzPVwic2ktaGVhZGVyXCI+JyArIHNldHRpbmdzLml0ZW1zT3B0aW9ucy50aXRsZSArICc8L2gxPicpXG4gICAgICAgIC5hcHBlbmRUbygkc2tlZHVsZXJJdGVtc0VsKTtcblxuICAgIGNvbnN0ICRza2VkdWxlckl0ZW1zQ29udGFpbmVyRWwgPSBkaXYoJ3NpLWNvbnRhaW5lcicpO1xuICAgIHZhciAkaXRlbXMgPSBnZXRJdGVtRGl2cyhzZXR0aW5ncyk7XG4gICAgJGl0ZW1zLmZvckVhY2goZWwgPT4ge1xuICAgICAgICAkc2tlZHVsZXJJdGVtc0NvbnRhaW5lckVsLmFwcGVuZChlbCk7XG4gICAgfSk7XG4gICAgJHNrZWR1bGVySXRlbXNDb250YWluZXJFbC5hcHBlbmRUbygkc2tlZHVsZXJJdGVtc0VsKTtcblxuICAgIGxldCBvcGVyYXRpb24gPSBudWxsO1xuXG4gICAgY29uc3QgbW91c2VVcCA9IChldmVudCkgPT4ge1xuICAgICAgICBpZiAob3BlcmF0aW9uID09IG51bGwpIHJldHVybjtcblxuICAgICAgICBjb25zdCB7ICRtb3ZpbmdDYXJkLCAkY2FyZCB9ID0gb3BlcmF0aW9uO1xuXG4gICAgICAgIGNvbnN0ICRzaUVsID0gJCgnLicgKyBzZXR0aW5ncy5pdGVtc09wdGlvbnMuaGlnaGxpZ2h0SXRlbUNzcyArICc6dmlzaWJsZScpOyAvLyBmaXhtZVxuXG4gICAgICAgIGlmICgkc2lFbC5sZW5ndGggIT09IDAgJiYgJHNpRWwuZGF0YSgnbWF0Y2gnKSA9PSAxKSB7XG4gICAgICAgICAgICBjb25zdCByb3dIZWlnaHQgPSBzZXR0aW5ncy5saW5lSGVpZ2h0ICsgMTtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gcGFyc2VJbnQoJG1vdmluZ0NhcmQuZGF0YSgnaW5kZXgnKSk7XG4gICAgICAgICAgICBjb25zdCBpdGVtID0gc2V0dGluZ3MuaXRlbXNPcHRpb25zLml0ZW1zW2luZGV4XTtcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldEluTWludXRlcyA9IDYwIC8gc2V0dGluZ3Mucm93c1BlckhvdXIgKiAoJG1vdmluZ0NhcmRbMF0ub2Zmc2V0VG9wIC8gcm93SGVpZ2h0KTsgLy8gPDw9PSBGSVhNRSBcbiAgICAgICAgICAgIGNvbnN0IGludGVydmFsID0gc2V0dGluZ3MuZGF0YVskc2lFbC5wYXJlbnQoKS5kYXRhKCdjb2x1bW4nKV0ud29ya2luZ1RpbWVJbnRlcnZhbHNbJHNpRWwucGFyZW50KCkuZGF0YSgnaXRlbS1pbmRleCcpXTtcblxuICAgICAgICAgICAgc2V0dGluZ3MuaXRlbXNPcHRpb25zLm9uSXRlbVdpbGxCZUFzc2lnbmVkICYmIHNldHRpbmdzLml0ZW1zT3B0aW9ucy5vbkl0ZW1XaWxsQmVBc3NpZ25lZCh7IGl0ZW0sIGludGVydmFsLCBvZmZzZXRJbk1pbnV0ZXMgfSk7XG5cbiAgICAgICAgICAgICRtb3ZpbmdDYXJkXG4gICAgICAgICAgICAgICAgLmRldGFjaCgpXG4gICAgICAgICAgICAgICAgLmNzcyh7IHRvcDogJHNpRWxbMF0ub2Zmc2V0VG9wLCBsZWZ0OiAwIH0pXG4gICAgICAgICAgICAgICAgLmhlaWdodCgkc2lFbFswXS5jbGllbnRIZWlnaHQpXG4gICAgICAgICAgICAgICAgLndpZHRoKCdhdXRvJylcbiAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoYCR7c2V0dGluZ3MuaXRlbXNPcHRpb25zLml0ZW1DYXJkQ3NzQ2xhc3N9LW1vdmluZ2ApXG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKGAke3NldHRpbmdzLml0ZW1zT3B0aW9ucy5pdGVtQ2FyZENzc0NsYXNzfS1waW5uZWRgKVxuICAgICAgICAgICAgICAgIC5hcHBlbmRUbygkc2lFbC5wYXJlbnQoKSk7XG5cbiAgICAgICAgICAgICRtb3ZpbmdDYXJkLm9uKCdtb3VzZWRvd24nLCBtb3VzZURvd25PbkNhcmQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgJG1vdmluZ0NhcmQucmVtb3ZlKCk7XG4gICAgICAgICAgICAkY2FyZC5zaG93KCk7XG4gICAgICAgIH1cblxuICAgICAgICAkKCcuJyArIHNldHRpbmdzLml0ZW1zT3B0aW9ucy5oaWdobGlnaHRJdGVtQ3NzKS5oaWRlKCk7XG5cbiAgICAgICAgb3BlcmF0aW9uID0gbnVsbDtcbiAgICAgICAgJG93bmVyRG9jdW1lbnQub2ZmKCdtb3VzZW1vdmUnLCBtb3VzZU1vdmUpO1xuICAgICAgICAkb3duZXJEb2N1bWVudC5vZmYoJ21vdXNldXAnLCBtb3VzZVVwKTtcbiAgICB9O1xuXG4gICAgY29uc3QgbW91c2VNb3ZlID0gKGV2ZW50KSA9PiB7XG4gICAgICAgIGlmIChvcGVyYXRpb24gPT0gbnVsbCkgcmV0dXJuO1xuXG4gICAgICAgIGNvbnN0IHsgJG1vdmluZ0NhcmQsIG9mZnNldFgsIG9mZnNldFkgfSA9IG9wZXJhdGlvbjtcblxuICAgICAgICBjb25zdCBuZXdPZmZzZXRYID0gZXZlbnQucGFnZVggLSBvZmZzZXRYLFxuICAgICAgICAgICAgbmV3T2Zmc2V0WSA9IGV2ZW50LnBhZ2VZIC0gb2Zmc2V0WTtcblxuICAgICAgICAkbW92aW5nQ2FyZC5jc3Moe1xuICAgICAgICAgICAgdG9wOiBuZXdPZmZzZXRZICsgJ3B4JyxcbiAgICAgICAgICAgIGxlZnQ6IG5ld09mZnNldFggKyAncHgnXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEhpZ2xpZ2h0IHNoaWZ0c1xuICAgICAgICBjb25zdCBfd2luZG93ID0gJG93bmVyRG9jdW1lbnRbMF0uZGVmYXVsdFZpZXc7XG4gICAgICAgIGNvbnN0IHggPSBldmVudC5wYWdlWDtcbiAgICAgICAgY29uc3QgeSA9IGV2ZW50LnBhZ2VZIC0gX3dpbmRvdy5zY3JvbGxZO1xuXG4gICAgICAgIGNvbnN0IHJvd0hlaWdodCA9IHNldHRpbmdzLmxpbmVIZWlnaHQgKyAxO1xuICAgICAgICBjb25zdCByb3dzUGVySG91ciA9IHNldHRpbmdzLnJvd3NQZXJIb3VyO1xuXG4gICAgICAgIGNvbnN0IGluZGV4ID0gcGFyc2VJbnQoJG1vdmluZ0NhcmQuZGF0YSgnaW5kZXgnKSk7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSBzZXR0aW5ncy5pdGVtc09wdGlvbnMuaXRlbXNbaW5kZXhdO1xuICAgICAgICBjb25zdCBkdXJhdGlvbiA9IGl0ZW0uZHVyYXRpb247XG4gICAgICAgIGNvbnN0IGhlaWdodCA9IGR1cmF0aW9uICogKHJvd0hlaWdodCAqIHJvd3NQZXJIb3VyIC8gNjApO1xuXG4gICAgICAgICRzaGlmdHMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnN0ICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRCb3VuZGluZyA9IHRoaXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICBjb25zdCAkZWwgPSAkdGhpcy5maW5kKCcuJyArIHNldHRpbmdzLml0ZW1zT3B0aW9ucy5oaWdobGlnaHRJdGVtQ3NzKTtcblxuICAgICAgICAgICAgaWYgKHggPiBlbGVtZW50Qm91bmRpbmcubGVmdCAmJiB4IDwgZWxlbWVudEJvdW5kaW5nLnJpZ2h0ICYmXG4gICAgICAgICAgICAgICAgeSA+IGVsZW1lbnRCb3VuZGluZy50b3AgJiYgeSA8IGVsZW1lbnRCb3VuZGluZy5ib3R0b20pIHtcblxuICAgICAgICAgICAgICAgIGNvbnN0IG9mZnNldFRvcCA9IHkgLSBlbGVtZW50Qm91bmRpbmcudG9wO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJvd0NvdW50ID0gKE1hdGguZmxvb3Iob2Zmc2V0VG9wIC8gcm93SGVpZ2h0KSAtIDEpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRvcCA9IE1hdGgubWluKFxuICAgICAgICAgICAgICAgICAgICBNYXRoLm1heCgwLCByb3dDb3VudCAqIHJvd0hlaWdodCksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xpZW50SGVpZ2h0IC0gaGVpZ2h0XG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IG9mZnNldEluTWludXRlcyA9IDYwIC8gc2V0dGluZ3Mucm93c1BlckhvdXIgKiAodG9wIC8gcm93SGVpZ2h0KTsgLy8gPDw9PSBGSVhNRSBcbiAgICAgICAgICAgICAgICBjb25zdCBpbnRlcnZhbCA9IHNldHRpbmdzLmRhdGFbJHRoaXMuZGF0YSgnY29sdW1uJyldLndvcmtpbmdUaW1lSW50ZXJ2YWxzWyR0aGlzLmRhdGEoJ2l0ZW0taW5kZXgnKV07XG4gICAgICAgICAgICAgICAgY29uc3QgbWF0Y2hSZXN1bHQgPSBzZXR0aW5ncy5pdGVtc09wdGlvbnMubWF0Y2hGdW5jKGl0ZW0sIGludGVydmFsLCBvZmZzZXRJbk1pbnV0ZXMpO1xuXG4gICAgICAgICAgICAgICAgJGVsLmNzcyh7IHRvcDogdG9wIH0pXG4gICAgICAgICAgICAgICAgICAgIC5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBtYXRjaFJlc3VsdC5jb2xvcilcbiAgICAgICAgICAgICAgICAgICAgLmhlaWdodChoZWlnaHQpXG4gICAgICAgICAgICAgICAgICAgIC5zaG93KCk7XG5cblxuICAgICAgICAgICAgICAgICRlbC5kYXRhKCdtYXRjaCcsICttYXRjaFJlc3VsdC5tYXRjaCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICRlbC5kYXRhKCdtYXRjaCcsIDApO1xuICAgICAgICAgICAgICAgICRlbC5oaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBtb3VzZURvd25PbkNhcmQgPSAoZXZlbnQgLyo6IE1vdXNlRXZlbnQgKi8gKSA9PiB7XG4gICAgICAgIGlmIChldmVudC53aGljaCAhPT0gMSkgeyByZXR1cm47IH1cblxuICAgICAgICBjb25zdCAkc2tlZHVsZXJXcmFwcGVyID0gJChgLiR7c2V0dGluZ3Muc2tlZHVsZXJXcmFwcGVyQ3NzQ2xhc3N9YCk7XG4gICAgICAgIGNvbnN0ICRjYXJkID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcblxuICAgICAgICBjb25zdCAkbW92aW5nQ2FyZCA9XG4gICAgICAgICAgICAkY2FyZC5jbG9uZSgpXG4gICAgICAgICAgICAuZGF0YSgnaW5kZXgnLCAkY2FyZC5kYXRhKCdpbmRleCcpKVxuICAgICAgICAgICAgLmFkZENsYXNzKGAke3NldHRpbmdzLml0ZW1zT3B0aW9ucy5pdGVtQ2FyZENzc0NsYXNzfS1tb3ZpbmdgKVxuICAgICAgICAgICAgLnJlbW92ZUNsYXNzKGAke3NldHRpbmdzLml0ZW1zT3B0aW9ucy5pdGVtQ2FyZENzc0NsYXNzfS1waW5uZWRgKVxuICAgICAgICAgICAgLndpZHRoKCRjYXJkLndpZHRoKCkpXG4gICAgICAgICAgICAuYXBwZW5kVG8oJHNrZWR1bGVyV3JhcHBlcik7XG5cbiAgICAgICAgLy92YXIgYm91bmNlID0gJGNhcmRbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIC8vIGZpeG1lIF5eXlxuICAgICAgICBjb25zdCBvZmZzZXRYID0gZXZlbnQucGFnZVggLSBldmVudC5vZmZzZXRYLFxuICAgICAgICAgICAgb2Zmc2V0WSA9IGV2ZW50LnBhZ2VZIC0gZXZlbnQub2Zmc2V0WTtcblxuICAgICAgICAkbW92aW5nQ2FyZC5jc3Moe1xuICAgICAgICAgICAgdG9wOiBvZmZzZXRZICsgJ3B4JyxcbiAgICAgICAgICAgIGxlZnQ6IG9mZnNldFggKyAncHgnXG4gICAgICAgIH0pO1xuXG4gICAgICAgIG9wZXJhdGlvbiA9IHtcbiAgICAgICAgICAgICRjYXJkLFxuICAgICAgICAgICAgJG1vdmluZ0NhcmQsXG4gICAgICAgICAgICBvZmZzZXRYOiBldmVudC5vZmZzZXRYLFxuICAgICAgICAgICAgb2Zmc2V0WTogZXZlbnQub2Zmc2V0WVxuICAgICAgICB9O1xuXG4gICAgICAgICRjYXJkLmhpZGUoKTtcblxuICAgICAgICAkb3duZXJEb2N1bWVudC5vbignbW91c2Vtb3ZlJywgbW91c2VNb3ZlKTtcbiAgICAgICAgJG93bmVyRG9jdW1lbnQub24oJ21vdXNldXAnLCBtb3VzZVVwKTtcblxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH07XG5cbiAgICAkc2tlZHVsZXJJdGVtc0VsLmZpbmQoJy4nICsgc2V0dGluZ3MuaXRlbXNPcHRpb25zLml0ZW1DYXJkQ3NzQ2xhc3MpLm9uKCdtb3VzZWRvd24nLCBtb3VzZURvd25PbkNhcmQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBwb3B1bGF0ZVNrZWR1bGVySXRlbXM7IiwiY29uc3QgZGVmYXVsdFNldHRpbmdzID0ge1xuICAgIC8vIERhdGEgYXR0cmlidXRlc1xuICAgIGhlYWRlcnM6IG51bGwsICAvLyBzdHJpbmdbXSAtIEFycmF5IG9mIGNvbHVtbiBoZWFkZXJzXG4gICAgdGFza3M6IFtdLCAgICAgIC8vIFRhc2tbXSAtIEFycmF5IG9mIHRhc2tzLiBSZXF1aXJlZCBmaWVsZHM6IFxuICAgICAgICAgICAgICAgICAgICAvLyBpZDogbnVtYmVyLCBzdGFydFRpbWU6IG51bWJlciwgZHVyYXRpb246IG51bWJlciwgY29sdW1uOiBudW1iZXJcblxuICAgIG5vdEFsbG9jYXRlZExhYmVsOiAnTm90IGFsbG9jYXRlZCcsXG5cbiAgICAvLyBDYXJkIHRlbXBsYXRlIC0gSW5uZXIgY29udGVudCBvZiB0YXNrIGNhcmQuIFxuICAgIC8vIFlvdSdyZSBhYmxlIHRvIHVzZSAke2tleX0gaW5zaWRlIHRlbXBsYXRlLCB3aGVyZSBrZXkgaXMgYW55IHByb3BlcnR5IGZyb20gdGFzay5cbiAgICBjYXJkVGVtcGxhdGU6ICc8ZGl2PiR7aWR9PC9kaXY+JyxcblxuICAgIC8vIE9uQ2xpY2sgZXZlbnQgaGFuZGxlclxuICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIChlLCB0YXNrKSB7IH0sXG5cbiAgICAvLyBDc3MgY2xhc3Nlc1xuICAgIHNrZWR1bGVyV3JhcHBlckNzc0NsYXNzOiAnc2tlZHVsZXItd3JhcHBlcicsXG4gICAgY29udGFpbmVyQ3NzQ2xhc3M6ICdza2VkdWxlci1jb250YWluZXInLFxuICAgIGhlYWRlckNvbnRhaW5lckNzc0NsYXNzOiAnc2tlZHVsZXItaGVhZGVycycsXG4gICAgc2NoZWR1bGVyQ29udGFpbmVyQ3NzQ2xhc3M6ICdza2VkdWxlci1tYWluJyxcbiAgICB0YXNrUGxhY2Vob2xkZXJDc3NDbGFzczogJ3NrZWR1bGVyLXRhc2stcGxhY2Vob2xkZXInLFxuICAgIHdvcmtpbmdJbnRlcnZhbFBsYWNlaG9sZGVyQ3NzQ2xhc3M6ICdza2VkdWxlci1pbnRlcnZhbC1wbGFjZWhvbGRlcicsXG4gICAgY2VsbENzc0NsYXNzOiAnc2tlZHVsZXItY2VsbCcsXG4gICAgcmVzaXphYmxlSGFuZGxlckNzc0NsYXNzOiAncmVzaXphYmxlLWhhbmRsZXInLFxuICAgIHJlc2l6YWJsZVNsaWRlckNzc0NsYXNzOiAncmVzaXphYmxlLXNsaWRlcicsXG5cbiAgICBsaW5lSGVpZ2h0OiAzMCwgICAgICAgICAvLyBoZWlnaHQgb2Ygb25lIGxpbmUgaW4gZ3JpZFxuICAgIGJvcmRlcldpZHRoOiAxLCAgICAgICAgIC8vIHdpZHRoIG9mIGJvYXJkIG9mIGdyaWQgY2VsbFxuICAgIGNvbHVtbldpZHRoOiAyMDAsXG4gICAgbWluQ29sdW1uV2lkdGg6IDEwMCxcblxuICAgIHJvd3NQZXJIb3VyOiAyLCAgICAgICAgIC8vIGNvdW50IG9mIHJvd3MgZm9yIG9uZSBob3VyXG5cbiAgICBjb2x1bW5SZXNpemVFbmFibGVkOiB0cnVlLCAvLyBpcyBjb2x1bW5zIHJlc2l6YWJsZVxuXG4gICAgZGVidWc6IHRydWUsXG5cbiAgICBpdGVtc09wdGlvbnM6IHtcbiAgICAgICAgZW5hYmxlZDogZmFsc2UsXG4gICAgICAgIGl0ZW1zQ3NzQ2xhc3M6ICdza2VkdWxlci1pdGVtcycsXG4gICAgICAgIGhpZ2hsaWdodEl0ZW1Dc3M6ICdzaS1oaWdobGlnaHQtaXRlbScsXG4gICAgICAgIGNvbnRhaW5lclNlbGVjdG9yOiBcIiNza2VkdWxlci1pdGVtc1wiLFxuICAgICAgICBpdGVtQ2FyZENzc0NsYXNzOiAnc2ktY2FyZCcsXG4gICAgICAgIGl0ZW1DYXJkVGVtcGxhdGU6ICc8ZGl2PiR7ZHVyYXRpb259PC9kaXY+JyxcbiAgICAgICAgaXRlbXM6IFtdLFxuICAgICAgICB0aXRsZTogJ0l0ZW1zJyxcbiAgICAgICAgbWF0Y2hGdW5jOiAoKSA9PiB7IHJldHVybiB7IG1hdGNoOiB0cnVlIH0gfVxuICAgIH1cbn07XG5cbmV4cG9ydCB7IGRlZmF1bHRTZXR0aW5ncyB9OyIsImltcG9ydCB7IGRlZmF1bHRTZXR0aW5ncyB9IGZyb20gJy4vc2V0dGluZ3MnO1xuaW1wb3J0IHBvcHVsYXRlU2tlZHVsZXJJdGVtcyBmcm9tICcuL2l0ZW1zJztcbmltcG9ydCB7IGNvbXBpbGVUZW1wbGF0ZSB9IGZyb20gJy4vdGVtcGxhdGUnO1xuXG5jb25zdCBkaXYgPSAoY3NzQ2xhc3MpID0+ICQoJzxkaXY+PC9kaXY+JykuYWRkQ2xhc3MoY3NzQ2xhc3MpO1xuXG5jbGFzcyBTa2VkdWxlciB7XG4gICAgY29uc3RydWN0b3IoJGNvbnRhaW5lciwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLnNldHRpbmdzID0gJC5leHRlbmQodHJ1ZSwgZGVmYXVsdFNldHRpbmdzLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy4kY29udGFpbmVyID0gJGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy4kb3duZXJEb2N1bWVudCA9ICQoJGNvbnRhaW5lclswXS5vd25lckRvY3VtZW50KTtcbiAgICAgICAgdGhpcy4kaGVhZGVyQ29udGFpbmVyID0gbnVsbDtcbiAgICAgICAgdGhpcy4kc2NoZWR1bGVFbCA9IG51bGxcbiAgICAgICAgdGhpcy5vcGVyYXRpb24gPSBudWxsO1xuICAgICAgICB0aGlzLnJlc2l6ZUFsbENvbHVtbnMgPSB0cnVlO1xuXG4gICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmRlYnVnKSB7XG4gICAgICAgICAgICBjb25zb2xlLnRpbWUoJ3NrZWR1bGVyJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnJlZnJlc2goKTtcblxuICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5kZWJ1Zykge1xuICAgICAgICAgICAgY29uc29sZS50aW1lRW5kKCdza2VkdWxlcicpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0Um93c1BlckhvdXIocm93c1BlckhvdXIpIHtcbiAgICAgICAgdGhpcy5zZXR0aW5ncy5yb3dzUGVySG91ciA9IHJvd3NQZXJIb3VyO1xuICAgICAgICB0aGlzLnJlZnJlc2goKTtcbiAgICB9XG5cbiAgICBzZXRSZXNpemVBbGxDb2x1bW5zKHJlc2l6ZUFsbENvbHVtbnMpIHtcbiAgICAgICAgdGhpcy5yZXNpemVBbGxDb2x1bW5zID0gcmVzaXplQWxsQ29sdW1ucztcbiAgICB9XG5cbiAgICByZWZyZXNoKCkge1xuICAgICAgICB0aGlzLnBvcHVsYXRlKCk7XG4gICAgICAgIGlmICh0aGlzLnNldHRpbmdzLml0ZW1zT3B0aW9ucy5lbmFibGVkKSB7XG4gICAgICAgICAgICBwb3B1bGF0ZVNrZWR1bGVySXRlbXModGhpcy5zZXR0aW5ncyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwb3B1bGF0ZSgpIHtcbiAgICAgICAgdGhpcy4kY29udGFpbmVyLmVtcHR5KCk7XG4gICAgICAgIHRoaXMuJGNvbnRhaW5lci5hZGRDbGFzcyh0aGlzLnNldHRpbmdzLmNvbnRhaW5lckNzc0NsYXNzKTtcblxuICAgICAgICBjb25zdCBoZWFkZXJzID0gdGhpcy5zZXR0aW5ncy5oZWFkZXJzID9cbiAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MuaGVhZGVycyA6XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLmRhdGEubWFwKHRoaXMuc2V0dGluZ3MuZ2V0SGVhZGVyKTtcblxuICAgICAgICAvLyBBZGQgaGVhZGVyc1xuICAgICAgICB0aGlzLiRoZWFkZXJDb250YWluZXIgPSBkaXYodGhpcy5zZXR0aW5ncy5oZWFkZXJDb250YWluZXJDc3NDbGFzcyk7XG4gICAgICAgIGhlYWRlcnMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgZGl2KCkudGV4dChlbGVtZW50KVxuICAgICAgICAgICAgICAgIC5hcHBlbmRUbyh0aGlzLiRoZWFkZXJDb250YWluZXIpO1xuICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgdGhpcy4kY29udGFpbmVyLmFwcGVuZCh0aGlzLiRoZWFkZXJDb250YWluZXIpO1xuXG4gICAgICAgIC8vIEFkZCBzY2hlZHVsZXJcbiAgICAgICAgdGhpcy4kc2NoZWR1bGVFbCA9IGRpdih0aGlzLnNldHRpbmdzLnNjaGVkdWxlckNvbnRhaW5lckNzc0NsYXNzKTtcbiAgICAgICAgY29uc3Qgc2NoZWR1bGVUaW1lbGluZUVsID0gZGl2KHRoaXMuc2V0dGluZ3Muc2NoZWR1bGVyQ29udGFpbmVyQ3NzQ2xhc3MgKyAnLXRpbWVsaW5lJyk7XG4gICAgICAgIGNvbnN0IHNjaGVkdWxlQm9keUVsID0gZGl2KHRoaXMuc2V0dGluZ3Muc2NoZWR1bGVyQ29udGFpbmVyQ3NzQ2xhc3MgKyAnLWJvZHknKTtcblxuICAgICAgICBjb25zdCBncmlkQ29sdW1uRWxlbWVudCA9IGRpdigpO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMjQ7IGkrKykge1xuICAgICAgICAgICAgLy8gUG9wdWxhdGUgdGltZWxpbmVcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5zZXR0aW5ncy5yb3dzUGVySG91cjsgaisrKSB7XG4gICAgICAgICAgICAgICAgbGV0IHRpbWVsaW5lQ2VsbCA9IGRpdigpXG4gICAgICAgICAgICAgICAgICAgIC5oZWlnaHQodGhpcy5zZXR0aW5ncy5saW5lSGVpZ2h0KVxuICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoaiA9PSB0aGlzLnNldHRpbmdzLnJvd3NQZXJIb3VyIC0gMSA/IFwibGFzdFwiIDogXCJcIik7XG5cbiAgICAgICAgICAgICAgICBpZiAoaiA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRpbWVsaW5lQ2VsbCA9IHRpbWVsaW5lQ2VsbFxuICAgICAgICAgICAgICAgICAgICAgICAgLmNzcyhcImxpbmUtaGVpZ2h0XCIsIHRoaXMuc2V0dGluZ3MubGluZUhlaWdodCArICdweCcpXG4gICAgICAgICAgICAgICAgICAgICAgICAudGV4dChqID09IDAgPyB0aGlzLnRvVGltZVN0cmluZyhpKSA6IFwiXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aW1lbGluZUNlbGwuYXBwZW5kVG8oc2NoZWR1bGVUaW1lbGluZUVsKTtcblxuICAgICAgICAgICAgICAgIGRpdih0aGlzLnNldHRpbmdzLmNlbGxDc3NDbGFzcylcbiAgICAgICAgICAgICAgICAgICAgLmhlaWdodCh0aGlzLnNldHRpbmdzLmxpbmVIZWlnaHQpXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhqID09IHRoaXMuc2V0dGluZ3Mucm93c1BlckhvdXIgLSAxID8gXCJsYXN0XCIgOiBcIlwiKVxuICAgICAgICAgICAgICAgICAgICAuYXBwZW5kVG8oZ3JpZENvbHVtbkVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gUG9wdWxhdGUgZ3JpZFxuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGhlYWRlcnMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGVsID0gZ3JpZENvbHVtbkVsZW1lbnQuY2xvbmUoKTtcblxuICAgICAgICAgICAgLy8gZml4bWUgW3dvcmtpbmdUaW1lSW50ZXJ2YWxzIG11c3Qgbm90IHVzZSBpbmRleF1cbiAgICAgICAgICAgIGNvbnN0IHdvcmtpbmdJbnRlcnZhbHNQbGFjZWhvbGRlciA9IGRpdih0aGlzLnNldHRpbmdzLndvcmtpbmdJbnRlcnZhbFBsYWNlaG9sZGVyQ3NzQ2xhc3MpO1xuICAgICAgICAgICAgY29uc3QgaW50ZXJ2YWxzID0gdGhpcy5zZXR0aW5ncy5kYXRhW2pdLndvcmtpbmdUaW1lSW50ZXJ2YWxzO1xuICAgICAgICAgICAgdGhpcy5hcHBlbmRBdmFpbGFibGVJbnRlcnZhbCh3b3JraW5nSW50ZXJ2YWxzUGxhY2Vob2xkZXIsIGludGVydmFscywgaik7XG5cbiAgICAgICAgICAgIGVsLnByZXBlbmQod29ya2luZ0ludGVydmFsc1BsYWNlaG9sZGVyKTtcbiAgICAgICAgICAgIGVsLmFwcGVuZFRvKHNjaGVkdWxlQm9keUVsKTtcblxuICAgICAgICAgICAgdGhpcy51cGRhdGVDb2x1bW5XaWR0aChqLCB0aGlzLnNldHRpbmdzLmNvbHVtbldpZHRoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuJHNjaGVkdWxlRWwuYXBwZW5kKHNjaGVkdWxlVGltZWxpbmVFbCk7XG4gICAgICAgIHRoaXMuJHNjaGVkdWxlRWwuYXBwZW5kKHNjaGVkdWxlQm9keUVsKTtcblxuICAgICAgICB0aGlzLiRjb250YWluZXIuYXBwZW5kKHRoaXMuJHNjaGVkdWxlRWwpO1xuXG4gICAgICAgIC8vIFNldCBkZWZhdWx0IHdpZHRoIGZvciBjb2x1bW5zXG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgaGVhZGVycy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVDb2x1bW5XaWR0aChqLCB0aGlzLnNldHRpbmdzLmNvbHVtbldpZHRoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENvbmZpZ3VyZSByZXNpemluZ1xuICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5jb2x1bW5SZXNpemVFbmFibGVkKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmZpZ3VyZVJlc2l6aW5nKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25maWd1cmVSZXNpemluZygpIHtcbiAgICAgICAgY29uc3Qgc2tlZHVsZXJFbFJlc2l6YWJsZUhhbmRsZXIgPSBkaXYodGhpcy5zZXR0aW5ncy5yZXNpemFibGVIYW5kbGVyQ3NzQ2xhc3MpO1xuXG4gICAgICAgIHRoaXMuJGNvbnRhaW5lci5wcmVwZW5kKHNrZWR1bGVyRWxSZXNpemFibGVIYW5kbGVyKTtcblxuICAgICAgICBza2VkdWxlckVsUmVzaXphYmxlSGFuZGxlci53aWR0aCh0aGlzLiRjb250YWluZXIud2lkdGgoKSk7XG5cbiAgICAgICAgY29uc3QgcmVzaXphYmxlU2xpZGVySGVpZ2h0ID0gdGhpcy4kc2NoZWR1bGVFbC5oZWlnaHQoKSArIHRoaXMuJGhlYWRlckNvbnRhaW5lci5oZWlnaHQoKTtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgdGhpcy4kaGVhZGVyQ29udGFpbmVyLmZpbmQoJ2RpdicpLmVhY2goKF8sIGVsKSA9PiB7XG4gICAgICAgICAgICBkaXYodGhpcy5zZXR0aW5ncy5yZXNpemFibGVTbGlkZXJDc3NDbGFzcylcbiAgICAgICAgICAgICAgICAuY3NzKCdsZWZ0JywgZWwub2Zmc2V0TGVmdCArIGVsLmNsaWVudFdpZHRoKVxuICAgICAgICAgICAgICAgIC5oZWlnaHQocmVzaXphYmxlU2xpZGVySGVpZ2h0KVxuICAgICAgICAgICAgICAgIC5kYXRhKCdjb2x1bW4taWQnLCBpbmRleCsrKVxuICAgICAgICAgICAgICAgIC5hcHBlbmRUbyhza2VkdWxlckVsUmVzaXphYmxlSGFuZGxlcilcbiAgICAgICAgfSk7XG5cbiAgICAgICAgc2tlZHVsZXJFbFJlc2l6YWJsZUhhbmRsZXIub24oJ21vdXNlZG93bicsICcuJyArIHRoaXMuc2V0dGluZ3MucmVzaXphYmxlU2xpZGVyQ3NzQ2xhc3MsIHRoaXMub25Qb2ludGVyRG93bi5iaW5kKHRoaXMpKTtcbiAgICB9XG5cbiAgICBhcHBlbmRBdmFpbGFibGVJbnRlcnZhbChwbGFjZWhvbGRlciwgaW50ZXJ2YWxzLCBjb2x1bW4pIHtcbiAgICAgICAgaW50ZXJ2YWxzLmZvckVhY2goKGludGVydmFsLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW5uZXJDb250ZW50ID0gZGl2KCkudGV4dCh0aGlzLnNldHRpbmdzLm5vdEFsbG9jYXRlZExhYmVsKTtcbiAgICAgICAgICAgIGNvbnN0IHRvcCA9IHRoaXMuZ2V0Q2FyZFRvcFBvc2l0aW9uKGludGVydmFsLnN0YXJ0KSArIDI7XG4gICAgICAgICAgICBjb25zdCBkdXJhdGlvbiA9IHRoaXMucGFyc2VUaW1lKGludGVydmFsLmVuZCkgLSB0aGlzLnBhcnNlVGltZShpbnRlcnZhbC5zdGFydCk7XG4gICAgICAgICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLmdldENhcmRIZWlnaHQoZHVyYXRpb24pIC0gNTtcblxuICAgICAgICAgICAgY29uc3Qgc2tJdGVtSGlnaHRsaWdodERpdiA9IGRpdignc2ktaGlnaGxpZ2h0LWl0ZW0nKS5oaWRlKCk7XG5cbiAgICAgICAgICAgIGNvbnN0IHNoaWZ0RGl2ID0gZGl2KClcbiAgICAgICAgICAgICAgICAuYXR0cih7XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiAndG9wOiAnICsgdG9wICsgJ3B4OyBoZWlnaHQ6ICcgKyBoZWlnaHQgKyAncHgnXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHNoaWZ0RGl2XG4gICAgICAgICAgICAgICAgLmRhdGEoJ2NvbHVtbicsIGNvbHVtbilcbiAgICAgICAgICAgICAgICAuZGF0YSgnaXRlbS1pbmRleCcsIGluZGV4KVxuICAgICAgICAgICAgICAgIC5hcHBlbmQoaW5uZXJDb250ZW50KVxuICAgICAgICAgICAgICAgIC5hcHBlbmQoc2tJdGVtSGlnaHRsaWdodERpdilcbiAgICAgICAgICAgICAgICAuYXBwZW5kVG8ocGxhY2Vob2xkZXIpO1xuXG4gICAgICAgICAgICB0aGlzLmFwcGVuZFRhc2tzKFxuICAgICAgICAgICAgICAgIHNoaWZ0RGl2LFxuICAgICAgICAgICAgICAgIGludGVydmFsLnN0YXJ0LFxuICAgICAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MudGFza3MuZmlsdGVyKHQgPT4gdC5jb2x1bW4gPT0gY29sdW1uKSk7XG4gICAgICAgICAgICAvLyBUT0RPOiBeXl4gZmlsdGVyIGJ5IHNoaWZ0IGludGVydmFsIHRvb1xuXG4gICAgICAgIH0sIHRoaXMpO1xuICAgIH1cblxuICAgIC8qKiBcbiAgICAgKiBHZW5lcmF0ZSB0YXNrIGNhcmRzXG4gICAgICovXG4gICAgYXBwZW5kVGFza3MocGxhY2Vob2xkZXIsIGludGVydmFsU3RhcnQsIHRhc2tzKSB7XG4gICAgICAgIHRhc2tzLmZvckVhY2goKHRhc2spID0+IHtcbiAgICAgICAgICAgIGxldCB0b3AgPSB0aGlzLmdldENhcmRUb3BQb3NpdGlvbih0YXNrLnN0YXJ0LCBpbnRlcnZhbFN0YXJ0KTtcbiAgICAgICAgICAgIGxldCBoZWlnaHQgPSB0aGlzLmdldENhcmRIZWlnaHQodGFzay5pdGVtLmR1cmF0aW9uIC8gNjApO1xuXG4gICAgICAgICAgICB0aGlzLmdldEl0ZW1EaXYodGFzay5pdGVtKVxuICAgICAgICAgICAgICAgIC5hdHRyKHtcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICd0b3A6ICcgKyB0b3AgKyAncHg7IGhlaWdodDogJyArIGhlaWdodCArICdweCdcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhgJHt0aGlzLnNldHRpbmdzLml0ZW1zT3B0aW9ucy5pdGVtQ2FyZENzc0NsYXNzfWApXG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKGAke3RoaXMuc2V0dGluZ3MuaXRlbXNPcHRpb25zLml0ZW1DYXJkQ3NzQ2xhc3N9LXBpbm5lZGApXG4gICAgICAgICAgICAgICAgLndpZHRoKCdhdXRvJylcbiAgICAgICAgICAgICAgICAuYXBwZW5kVG8ocGxhY2Vob2xkZXIpO1xuICAgICAgICB9LCB0aGlzKTtcbiAgICB9XG5cbiAgICBvblBvaW50ZXJVcChldmVudCkge1xuICAgICAgICBsZXQgb3AgPSB0aGlzLm9wZXJhdGlvbjtcbiAgICAgICAgaWYgKCF0aGlzLm9wZXJhdGlvbikgeyByZXR1cm47IH1cblxuICAgICAgICB0aGlzLiRvd25lckRvY3VtZW50Lm9mZignbW91c2V1cCcpO1xuICAgICAgICB0aGlzLiRvd25lckRvY3VtZW50Lm9mZignbW91c2Vtb3ZlJyk7XG5cbiAgICAgICAgdGhpcy5vcGVyYXRpb24gPSBudWxsO1xuICAgIH1cblxuICAgIG9uUG9pbnRlck1vdmUoZXZlbnQpIHtcbiAgICAgICAgbGV0IG9wID0gdGhpcy5vcGVyYXRpb247XG4gICAgICAgIGlmICghdGhpcy5vcGVyYXRpb24pIHsgcmV0dXJuOyB9XG5cbiAgICAgICAgLy8gRGV0ZXJtaW5lIHRoZSBkZWx0YSBjaGFuZ2UgYmV0d2VlbiBzdGFydCBhbmQgbmV3IG1vdXNlIHBvc2l0aW9uLCBhcyBhIHBlcmNlbnRhZ2Ugb2YgdGhlIHRhYmxlIHdpZHRoXG4gICAgICAgIGxldCBkaWZmZXJlbmNlID0gKGV2ZW50LnBhZ2VYIC0gb3Auc3RhcnRYKTsgLy8gLyB0aGlzLiRzY2hlZHVsZUVsLndpZHRoKCkgKiAxMDA7XG4gICAgICAgIGlmIChkaWZmZXJlbmNlID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgY29sdW1uTnVtYmVyID0gb3AuY29sdW1uTnVtYmVyO1xuICAgICAgICBsZXQgd2lkdGggPSBvcC53aWR0aCArIGRpZmZlcmVuY2U7XG4gICAgICAgIGlmICh0aGlzLnJlc2l6ZUFsbENvbHVtbnMpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zZXR0aW5ncy5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVDb2x1bW5XaWR0aChpLCB3aWR0aC50b0ZpeGVkKDIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlQ29sdW1uV2lkdGgoY29sdW1uTnVtYmVyLCB3aWR0aC50b0ZpeGVkKDIpKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uUG9pbnRlckRvd24oZXZlbnQpIHtcbiAgICAgICAgLy8gT25seSBhcHBsaWVzIHRvIGxlZnQtY2xpY2sgZHJhZ2dpbmdcbiAgICAgICAgaWYgKGV2ZW50LndoaWNoICE9PSAxKSB7IHJldHVybjsgfVxuXG4gICAgICAgIC8vIElmIGEgcHJldmlvdXMgdGhpcy5vcGVyYXRpb24gaXMgZGVmaW5lZCwgd2UgbWlzc2VkIHRoZSBsYXN0IG1vdXNldXAuXG4gICAgICAgIC8vIFByb2JhYmx5IGdvYmJsZWQgdXAgYnkgdXNlciBtb3VzaW5nIG91dCB0aGUgd2luZG93IHRoZW4gcmVsZWFzaW5nLlxuICAgICAgICAvLyBXZSdsbCBzaW11bGF0ZSBhIHBvaW50ZXJ1cCBoZXJlIHByaW9yIHRvIGl0XG4gICAgICAgIGlmICh0aGlzLm9wZXJhdGlvbikge1xuICAgICAgICAgICAgdGhpcy5vblBvaW50ZXJVcChldmVudCk7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgJGN1cnJlbnRHcmlwID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgbGV0IGNvbHVtbk51bWJlciA9ICRjdXJyZW50R3JpcC5kYXRhKCdjb2x1bW4taWQnKTtcblxuICAgICAgICBsZXQgZ3JpcEluZGV4ID0gJGN1cnJlbnRHcmlwLmluZGV4KCk7XG4gICAgICAgIGxldCAkbGVmdENvbHVtbiA9IHRoaXMuJGhlYWRlckNvbnRhaW5lci5maW5kKCdkaXYnKS5lcShncmlwSW5kZXgpO1xuXG4gICAgICAgIGxldCBsZWZ0V2lkdGggPSAkbGVmdENvbHVtblswXS5jbGllbnRXaWR0aDtcblxuICAgICAgICB0aGlzLm9wZXJhdGlvbiA9IHtcbiAgICAgICAgICAgIGNvbHVtbk51bWJlcixcbiAgICAgICAgICAgIHN0YXJ0WDogZXZlbnQucGFnZVgsXG4gICAgICAgICAgICB3aWR0aDogbGVmdFdpZHRoXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy4kb3duZXJEb2N1bWVudC5vbignbW91c2Vtb3ZlJywgdGhpcy5vblBvaW50ZXJNb3ZlLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLiRvd25lckRvY3VtZW50Lm9uKCdtb3VzZXVwJywgdGhpcy5vblBvaW50ZXJVcC5iaW5kKHRoaXMpKTtcblxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIHVwZGF0ZUNvbHVtbldpZHRoKGNvbHVtbk51bWJlciwgd2lkdGgpIHtcbiAgICAgICAgd2lkdGggPSBNYXRoLm1heCh3aWR0aCwgdGhpcy5zZXR0aW5ncy5taW5Db2x1bW5XaWR0aCk7XG4gICAgICAgICQoJy4nICsgdGhpcy5zZXR0aW5ncy5oZWFkZXJDb250YWluZXJDc3NDbGFzcyArICcgPiBkaXY6ZXEoJyArIGNvbHVtbk51bWJlciArICcpJylcbiAgICAgICAgICAgIC5jc3MoJ2ZsZXgtYmFzaXMnLCB3aWR0aCArICdweCcpO1xuXG4gICAgICAgIGxldCBjb2x1bW4gPSAkKCcuJyArIHRoaXMuc2V0dGluZ3Muc2NoZWR1bGVyQ29udGFpbmVyQ3NzQ2xhc3MgKyAnLWJvZHkgPiBkaXY6ZXEoJyArIGNvbHVtbk51bWJlciArICcpID4gLicgKyB0aGlzLnNldHRpbmdzLmNlbGxDc3NDbGFzcyk7XG4gICAgICAgIHZhciBkaWZmID0gY29sdW1uLndpZHRoKCkgLSB3aWR0aDtcbiAgICAgICAgY29sdW1uLndpZHRoKHdpZHRoKTtcblxuICAgICAgICAkKCcuJyArIHRoaXMuc2V0dGluZ3MucmVzaXphYmxlSGFuZGxlckNzc0NsYXNzICsgJyA+IGRpdicpLmVhY2goKGluZGV4LCBlbCkgPT4ge1xuICAgICAgICAgICAgaWYgKGluZGV4ID49IGNvbHVtbk51bWJlcikge1xuICAgICAgICAgICAgICAgIGxldCAkZWwgPSAkKGVsKTtcbiAgICAgICAgICAgICAgICBsZXQgbGVmdCA9IHBhcnNlSW50KCRlbC5jc3MoJ2xlZnQnKS5yZXBsYWNlKCdweCcsICcnKSk7XG4gICAgICAgICAgICAgICAgJGVsLmNzcygnbGVmdCcsIGxlZnQgLSBkaWZmKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZ2V0SXRlbURpdihpdGVtKSB7XG4gICAgICAgIGNvbnN0ICRkaXYgPSBkaXYodGhpcy5zZXR0aW5ncy5pdGVtc09wdGlvbnMuaXRlbUNhcmRDc3NDbGFzcyk7XG4gICAgICAgIGNvbnN0IHRlbXBsYXRlID0gY29tcGlsZVRlbXBsYXRlKHRoaXMuc2V0dGluZ3MuaXRlbXNPcHRpb25zLml0ZW1DYXJkVGVtcGxhdGUsIHtcbiAgICAgICAgICAgIHRpbWU6IChpdGVtKSA9PiBpdGVtLmludGVydmFsID8gYCR7aXRlbS5pbnRlcnZhbC5zdGFydH0gdG8gJHtpdGVtLmludGVydmFsLmVuZH1gIDogJydcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRpdigpLmh0bWwodGVtcGxhdGUoaXRlbSkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICogQ29udmVydCBkb3VibGUgdmFsdWUgb2YgaG91cnMgdG8gemVyby1wcmVwb3NpdGVkIHN0cmluZyB3aXRoIDMwIG9yIDAwIHZhbHVlIG9mIG1pbnV0ZXNcbiAgICAqL1xuICAgIHRvVGltZVN0cmluZyh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gKHZhbHVlIDwgMTAgPyAnMCcgOiAnJykgKyBNYXRoLmNlaWwodmFsdWUpICsgKE1hdGguY2VpbCh2YWx1ZSkgPiBNYXRoLmZsb29yKHZhbHVlKSA/ICc6MzAnIDogJzowMCcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybiBoZWlnaHQgb2YgdGFzayBjYXJkIGJhc2VkIG9uIGR1cmF0aW9uIG9mIHRoZSB0YXNrXG4gICAgICogZHVyYXRpb24gLSBpbiBob3Vyc1xuICAgICAqL1xuICAgIGdldENhcmRIZWlnaHQoZHVyYXRpb24pIHtcbiAgICAgICAgY29uc3QgZHVyYXRpb25Jbk1pbnV0ZXMgPSBkdXJhdGlvbiAqIDYwO1xuICAgICAgICBjb25zdCBoZWlnaHRPZk1pbnV0ZSA9ICh0aGlzLnNldHRpbmdzLmxpbmVIZWlnaHQgKyB0aGlzLnNldHRpbmdzLmJvcmRlcldpZHRoKSAqIHRoaXMuc2V0dGluZ3Mucm93c1BlckhvdXIgLyA2MDtcbiAgICAgICAgcmV0dXJuIE1hdGguY2VpbChkdXJhdGlvbkluTWludXRlcyAqIGhlaWdodE9mTWludXRlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdG9wIG9mZnNldCBvZiB0YXNrIGNhcmQgYmFzZWQgb24gc3RhcnQgdGltZSBvZiB0aGUgdGFza1xuICAgICAqIHN0YXJ0VGltZSAtIGluIGhvdXJzXG4gICAgICovXG4gICAgZ2V0Q2FyZFRvcFBvc2l0aW9uKHN0YXJ0VGltZSwgb2Zmc2V0VGltZSkge1xuICAgICAgICBsZXQgc3RhcnRUaW1lSW50ID0gdGhpcy5wYXJzZVRpbWUoc3RhcnRUaW1lKTtcbiAgICAgICAgaWYgKG9mZnNldFRpbWUpIHtcbiAgICAgICAgICAgIHN0YXJ0VGltZUludCAtPSB0aGlzLnBhcnNlVGltZShvZmZzZXRUaW1lKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKHRoaXMuc2V0dGluZ3MubGluZUhlaWdodCArIHRoaXMuc2V0dGluZ3MuYm9yZGVyV2lkdGgpICogKHN0YXJ0VGltZUludCAqIHRoaXMuc2V0dGluZ3Mucm93c1BlckhvdXIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFBhcnNlIHRpbWUgc3RyaW5nIGFuZCBwcmVzZW50IGl0IGluIGhvdXJzIChleC4gJzEzOjMwJyA9PiAxMy41KVxuICAgICAqIEBwYXJhbSB7KnN0cmluZ30gdGltZSAtIHRpbWUgaW4gZm9ybWF0IGxpa2UgJzEzOjUwJywgJzExOjAwJywgJzE0J1xuICAgICAqL1xuICAgIHBhcnNlVGltZSh0aW1lKSB7XG4gICAgICAgIHJldHVybiAvXFxkezEsMn1cXDpcXGR7Mn0vLnRlc3QodGltZSkgP1xuICAgICAgICAgICAgcGFyc2VJbnQodGltZS5zcGxpdCgnOicpWzBdKSArIHBhcnNlSW50KHRpbWUuc3BsaXQoJzonKVsxXSkgLyA2MCA6XG4gICAgICAgICAgICBwYXJzZUludCh0aW1lKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNrZWR1bGVyOyIsImNvbnN0IGNvbXBpbGVUZW1wbGF0ZSA9ICh0ZW1wbGF0ZSwgZnVuY3MpID0+IGl0ZW0gPT4ge1xuICAgIGxldCByZXN1bHQgPSB0ZW1wbGF0ZTtcbiAgICBjb25zdCByZWdLZXlzID0gL1xcJFxceyhcXHcrKVxcfS9nO1xuICAgIGNvbnN0IHJlZ0Z1bmNzID0gL1xcJFxceyhcXHcrKVxcKFxcKVxcfS9nO1xuXG4gICAgbGV0IG1hdGNoID0gMTtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBtYXRjaCA9IHJlZ0tleXMuZXhlYyh0ZW1wbGF0ZSk7XG4gICAgICAgIGlmICghbWF0Y2gpIGJyZWFrO1xuXG4gICAgICAgIGxldCBrZXkgPSBtYXRjaFsxXTtcbiAgICAgICAgaWYgKGl0ZW0uaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LnJlcGxhY2UobWF0Y2hbMF0sIGl0ZW1ba2V5XSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB3aGlsZSAoZnVuY3MpIHtcbiAgICAgICAgbWF0Y2ggPSByZWdGdW5jcy5leGVjKHRlbXBsYXRlKTtcbiAgICAgICAgaWYgKCFtYXRjaCkgYnJlYWs7XG5cbiAgICAgICAgbGV0IGtleSA9IG1hdGNoWzFdO1xuICAgICAgICBpZiAoZnVuY3MuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LnJlcGxhY2UobWF0Y2hbMF0sIGZ1bmNzW2tleV0oaXRlbSkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgeyBjb21waWxlVGVtcGxhdGUgfTsiXSwicHJlRXhpc3RpbmdDb21tZW50IjoiLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ6dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW01dlpHVmZiVzlrZFd4bGN5OWljbTkzYzJWeUxYQmhZMnN2WDNCeVpXeDFaR1V1YW5NaUxDSXZWWE5sY25NdlpHVmpaV0Z6WlM5UWNtOXFaV04wY3k5cWNYVmxjbmt0YzJ0bFpIVnNaWEl2YzNKakwyRmtZWEIwWlhJdWFuTWlMQ0l2VlhObGNuTXZaR1ZqWldGelpTOVFjbTlxWldOMGN5OXFjWFZsY25rdGMydGxaSFZzWlhJdmMzSmpMMmx1WkdWNExtcHpJaXdpTDFWelpYSnpMMlJsWTJWaGMyVXZVSEp2YW1WamRITXZhbkYxWlhKNUxYTnJaV1IxYkdWeUwzTnlZeTlwZEdWdGN5OXBibVJsZUM1cWN5SXNJaTlWYzJWeWN5OWtaV05sWVhObEwxQnliMnBsWTNSekwycHhkV1Z5ZVMxemEyVmtkV3hsY2k5emNtTXZjMlYwZEdsdVozTXVhbk1pTENJdlZYTmxjbk12WkdWalpXRnpaUzlRY205cVpXTjBjeTlxY1hWbGNua3RjMnRsWkhWc1pYSXZjM0pqTDNOclpXUjFiR1Z5TG1weklpd2lMMVZ6WlhKekwyUmxZMlZoYzJVdlVISnZhbVZqZEhNdmFuRjFaWEo1TFhOclpXUjFiR1Z5TDNOeVl5OTBaVzF3YkdGMFpTOXBibVJsZUM1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3T3pzN2QwSkRRWEZDTEZsQlFWazdPenM3T3pzN096czdPenM3T3p0QlFXRnFReXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEZGQlFWRXNSMEZCUnl4VlFVRlRMRTlCUVU4c1JVRkJSVHRCUVVNNVFpeE5RVUZKTEZWQlFWVXNSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03UVVGRGVrSXNUVUZCU1N4UlFVRlJMRWRCUVVjc01FSkJRV0VzVlVGQlZTeEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPenRCUVVWcVJDeFRRVUZQTEZGQlFWRXNRMEZCUXp0RFFVTnVRaXhEUVVGRE96dEJRVVZHTEVOQlFVTXNRMEZCUXl4UlFVRlJMSGRDUVVGWExFTkJRVU03T3pzN096czdPenM3TzNkQ1EzQkNSQ3haUVVGWk96czdPM1ZDUVVOaUxGZEJRVmM3T3pzN096czdPenM3T3pzN08zZENRMFJETEdGQlFXRTdPMEZCUlRkRExFbEJRVTBzUjBGQlJ5eEhRVUZITEZOQlFVNHNSMEZCUnl4RFFVRkpMRkZCUVZFN1YwRkJTeXhEUVVGRExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJRenREUVVGQkxFTkJRVU03TzBGQlJUbEVMRWxCUVUwc1YwRkJWeXhIUVVGSExGTkJRV1FzVjBGQlZ5eERRVUZKTEZGQlFWRXNSVUZCU3p0QlFVTTVRaXhSUVVGTkxFbEJRVWtzUjBGQlJ5eEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVRkRMRmxCUVZrc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4RFFVRkRPMEZCUTNwRUxGRkJRVTBzUzBGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXl4WlFVRlpMRU5CUVVNc1MwRkJTeXhEUVVGRE8wRkJRekZETEZGQlFVMHNVVUZCVVN4SFFVRkhMQ3RDUVVGblFpeFJRVUZSTEVOQlFVTXNXVUZCV1N4RFFVRkRMR2RDUVVGblFpeEZRVUZGTzBGQlEzSkZMRmxCUVVrc1JVRkJSU3hqUVVGRExFbEJRVWs3YlVKQlFVc3NTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJUU3hKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEV0QlFVc3NXVUZCVHl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFZEJRVWNzUjBGQlN5eEZRVUZGTzFOQlFVRTdTMEZEZUVZc1EwRkJReXhEUVVGRE96dEJRVVZJTEZkQlFVOHNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhWUVVGRExFbEJRVWtzUlVGQlJTeExRVUZMTzJWQlFVc3NTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVONlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZMRXRCUVVzc1EwRkJReXhEUVVOd1FpeEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8wdEJRVUVzUTBGRGVFSXNRMEZCUXp0RFFVTk1MRU5CUVVFN08wRkJSVVFzU1VGQlRTeHhRa0ZCY1VJc1IwRkJSeXhUUVVGNFFpeHhRa0ZCY1VJc1EwRkJTU3hSUVVGUkxFVkJRVXM3UVVGRGVFTXNVVUZCVFN4blFrRkJaMElzUjBGQlJ5eERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMRmxCUVZrc1EwRkJReXhwUWtGQmFVSXNRMEZCUXl4RFFVTTVSQ3hMUVVGTExFVkJRVVVzUTBGRFVDeFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRmxCUVZrc1EwRkJReXhoUVVGaExFTkJRVU1zUTBGQlF6dEJRVU51UkN4UlFVRk5MR05CUVdNc1IwRkJSeXhEUVVGRExFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTTdRVUZETlVRc1VVRkJUU3hQUVVGUExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NSMEZCUnl4UlFVRlJMRU5CUVVNc2EwTkJRV3RETEVkQlFVY3NVVUZCVVN4RFFVRkRMRU5CUVVNN08wRkJSV2hHTEZGQlFVMHNWVUZCVlN4SFFVRkhMRWRCUVVjc1JVRkJSU3hEUVVOdVFpeEpRVUZKTEVOQlFVTXNkMEpCUVhkQ0xFZEJRVWNzVVVGQlVTeERRVUZETEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1QwRkJUeXhEUVVGRExFTkJRM1JGTEZGQlFWRXNRMEZCUXl4blFrRkJaMElzUTBGQlF5eERRVUZET3p0QlFVVm9ReXhSUVVGTkxIbENRVUY1UWl4SFFVRkhMRWRCUVVjc1EwRkJReXhqUVVGakxFTkJRVU1zUTBGQlF6dEJRVU4wUkN4UlFVRkpMRTFCUVUwc1IwRkJSeXhYUVVGWExFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTTdRVUZEYmtNc1ZVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF5eFZRVUZCTEVWQlFVVXNSVUZCU1R0QlFVTnFRaXhwUTBGQmVVSXNRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03UzBGRGVFTXNRMEZCUXl4RFFVRkRPMEZCUTBnc05rSkJRWGxDTEVOQlFVTXNVVUZCVVN4RFFVRkRMR2RDUVVGblFpeERRVUZETEVOQlFVTTdPMEZCUlhKRUxGRkJRVWtzVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUXpzN1FVRkZja0lzVVVGQlRTeFBRVUZQTEVkQlFVY3NVMEZCVml4UFFVRlBMRU5CUVVrc1MwRkJTeXhGUVVGTE8wRkJRM1pDTEZsQlFVa3NVMEZCVXl4SlFVRkpMRWxCUVVrc1JVRkJSU3hQUVVGUE96dDVRa0ZGUXl4VFFVRlRPMWxCUVdoRExGZEJRVmNzWTBGQldDeFhRVUZYTzFsQlFVVXNTMEZCU3l4alFVRk1MRXRCUVVzN08wRkJSVEZDTEZsQlFVMHNTMEZCU3l4SFFVRkhMRU5CUVVNc1EwRkJReXhIUVVGSExFZEJRVWNzVVVGQlVTeERRVUZETEZsQlFWa3NRMEZCUXl4blFrRkJaMElzUjBGQlJ5eFZRVUZWTEVOQlFVTXNRMEZCUXpzN1FVRkZNMFVzV1VGQlNTeExRVUZMTEVOQlFVTXNUVUZCVFN4TFFVRkxMRU5CUVVNc1NVRkJTU3hMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSVHRCUVVOb1JDeG5Ra0ZCVFN4VFFVRlRMRWRCUVVjc1VVRkJVU3hEUVVGRExGVkJRVlVzUjBGQlJ5eERRVUZETEVOQlFVTTdRVUZETVVNc1owSkJRVTBzUzBGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZEYkVRc1owSkJRVTBzU1VGQlNTeEhRVUZITEZGQlFWRXNRMEZCUXl4WlFVRlpMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzBGQlEyaEVMR2RDUVVGTkxHVkJRV1VzUjBGQlJ5eEZRVUZGTEVkQlFVY3NVVUZCVVN4RFFVRkRMRmRCUVZjc1NVRkJTU3hYUVVGWExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNVMEZCVXl4SFFVRkhMRk5CUVZNc1EwRkJRU3hCUVVGRExFTkJRVU03UVVGRE0wWXNaMEpCUVUwc1VVRkJVU3hIUVVGSExGRkJRVkVzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRMRzlDUVVGdlFpeERRVUZETEV0QlFVc3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJReXhKUVVGSkxFTkJRVU1zV1VGQldTeERRVUZETEVOQlFVTXNRMEZCUXpzN1FVRkZkRWdzYjBKQlFWRXNRMEZCUXl4WlFVRlpMRU5CUVVNc2IwSkJRVzlDTEVsQlFVa3NVVUZCVVN4RFFVRkRMRmxCUVZrc1EwRkJReXh2UWtGQmIwSXNRMEZCUXl4RlFVRkZMRWxCUVVrc1JVRkJTaXhKUVVGSkxFVkJRVVVzVVVGQlVTeEZRVUZTTEZGQlFWRXNSVUZCUlN4bFFVRmxMRVZCUVdZc1pVRkJaU3hGUVVGRkxFTkJRVU1zUTBGQlF6czdRVUZGT1Vnc2RVSkJRVmNzUTBGRFRpeE5RVUZOTEVWQlFVVXNRMEZEVWl4SFFVRkhMRU5CUVVNc1JVRkJSU3hIUVVGSExFVkJRVVVzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRk5CUVZNc1JVRkJSU3hKUVVGSkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZEZWtNc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4WlFVRlpMRU5CUVVNc1EwRkROMElzUzBGQlN5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVTmlMRmRCUVZjc1EwRkJTU3hSUVVGUkxFTkJRVU1zV1VGQldTeERRVUZETEdkQ1FVRm5RaXhoUVVGVkxFTkJReTlFTEZGQlFWRXNRMEZCU1N4UlFVRlJMRU5CUVVNc1dVRkJXU3hEUVVGRExHZENRVUZuUWl4aFFVRlZMRU5CUXpWRUxGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNc1EwRkJRenM3UVVGRk9VSXNkVUpCUVZjc1EwRkJReXhGUVVGRkxFTkJRVU1zVjBGQlZ5eEZRVUZGTEdWQlFXVXNRMEZCUXl4RFFVRkRPMU5CUTJoRUxFMUJRVTA3UVVGRFNDeDFRa0ZCVnl4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8wRkJRM0pDTEdsQ1FVRkxMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU03VTBGRGFFSTdPMEZCUlVRc1UwRkJReXhEUVVGRExFZEJRVWNzUjBGQlJ5eFJRVUZSTEVOQlFVTXNXVUZCV1N4RFFVRkRMR2RDUVVGblFpeERRVUZETEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN08wRkJSWFpFTEdsQ1FVRlRMRWRCUVVjc1NVRkJTU3hEUVVGRE8wRkJRMnBDTEhOQ1FVRmpMRU5CUVVNc1IwRkJSeXhEUVVGRExGZEJRVmNzUlVGQlJTeFRRVUZUTEVOQlFVTXNRMEZCUXp0QlFVTXpReXh6UWtGQll5eERRVUZETEVkQlFVY3NRMEZCUXl4VFFVRlRMRVZCUVVVc1QwRkJUeXhEUVVGRExFTkJRVU03UzBGRE1VTXNRMEZCUXpzN1FVRkZSaXhSUVVGTkxGTkJRVk1zUjBGQlJ5eFRRVUZhTEZOQlFWTXNRMEZCU1N4TFFVRkxMRVZCUVVzN1FVRkRla0lzV1VGQlNTeFRRVUZUTEVsQlFVa3NTVUZCU1N4RlFVRkZMRTlCUVU4N096QkNRVVZaTEZOQlFWTTdXVUZCTTBNc1YwRkJWeXhsUVVGWUxGZEJRVmM3V1VGQlJTeFBRVUZQTEdWQlFWQXNUMEZCVHp0WlFVRkZMRTlCUVU4c1pVRkJVQ3hQUVVGUE96dEJRVVZ5UXl4WlFVRk5MRlZCUVZVc1IwRkJSeXhMUVVGTExFTkJRVU1zUzBGQlN5eEhRVUZITEU5QlFVODdXVUZEY0VNc1ZVRkJWU3hIUVVGSExFdEJRVXNzUTBGQlF5eExRVUZMTEVkQlFVY3NUMEZCVHl4RFFVRkRPenRCUVVWMlF5eHRRa0ZCVnl4RFFVRkRMRWRCUVVjc1EwRkJRenRCUVVOYUxHVkJRVWNzUlVGQlJTeFZRVUZWTEVkQlFVY3NTVUZCU1R0QlFVTjBRaXhuUWtGQlNTeEZRVUZGTEZWQlFWVXNSMEZCUnl4SlFVRkpPMU5CUXpGQ0xFTkJRVU1zUTBGQlF6czdPMEZCUjBnc1dVRkJUU3hQUVVGUExFZEJRVWNzWTBGQll5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRmRCUVZjc1EwRkJRenRCUVVNNVF5eFpRVUZOTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1MwRkJTeXhEUVVGRE8wRkJRM1JDTEZsQlFVMHNRMEZCUXl4SFFVRkhMRXRCUVVzc1EwRkJReXhMUVVGTExFZEJRVWNzVDBGQlR5eERRVUZETEU5QlFVOHNRMEZCUXpzN1FVRkZlRU1zV1VGQlRTeFRRVUZUTEVkQlFVY3NVVUZCVVN4RFFVRkRMRlZCUVZVc1IwRkJSeXhEUVVGRExFTkJRVU03UVVGRE1VTXNXVUZCVFN4WFFVRlhMRWRCUVVjc1VVRkJVU3hEUVVGRExGZEJRVmNzUTBGQlF6czdRVUZGZWtNc1dVRkJUU3hMUVVGTExFZEJRVWNzVVVGQlVTeERRVUZETEZkQlFWY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU5zUkN4WlFVRk5MRWxCUVVrc1IwRkJSeXhSUVVGUkxFTkJRVU1zV1VGQldTeERRVUZETEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRCUVVOb1JDeFpRVUZOTEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRE8wRkJReTlDTEZsQlFVMHNUVUZCVFN4SFFVRkhMRkZCUVZFc1NVRkJTU3hUUVVGVExFZEJRVWNzVjBGQlZ5eEhRVUZITEVWQlFVVXNRMEZCUVN4QlFVRkRMRU5CUVVNN08wRkJSWHBFTEdWQlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1dVRkJWenRCUVVOd1FpeG5Ra0ZCVFN4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzBGQlEzUkNMR2RDUVVGTkxHVkJRV1VzUjBGQlJ5eEpRVUZKTEVOQlFVTXNjVUpCUVhGQ0xFVkJRVVVzUTBGQlF6dEJRVU55UkN4blFrRkJUU3hIUVVGSExFZEJRVWNzUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRWRCUVVjc1VVRkJVU3hEUVVGRExGbEJRVmtzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhEUVVGRE96dEJRVVZ5UlN4blFrRkJTU3hEUVVGRExFZEJRVWNzWlVGQlpTeERRVUZETEVsQlFVa3NTVUZCU1N4RFFVRkRMRWRCUVVjc1pVRkJaU3hEUVVGRExFdEJRVXNzU1VGRGNrUXNRMEZCUXl4SFFVRkhMR1ZCUVdVc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eEhRVUZITEdWQlFXVXNRMEZCUXl4TlFVRk5MRVZCUVVVN08wRkJSWFpFTEc5Q1FVRk5MRk5CUVZNc1IwRkJSeXhEUVVGRExFZEJRVWNzWlVGQlpTeERRVUZETEVkQlFVY3NRMEZCUXp0QlFVTXhReXh2UWtGQlRTeFJRVUZSTEVkQlFVa3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhUUVVGVExFZEJRVWNzVTBGQlV5eERRVUZETEVkQlFVY3NRMEZCUXl4QlFVRkRMRU5CUVVNN1FVRkRla1FzYjBKQlFVMHNTVUZCUnl4SFFVRkhMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRMmhDTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhGUVVGRkxGRkJRVkVzUjBGQlJ5eFRRVUZUTEVOQlFVTXNSVUZEYWtNc1NVRkJTU3hEUVVGRExGbEJRVmtzUjBGQlJ5eE5RVUZOTEVOQlF6ZENMRU5CUVVNN08wRkJSVVlzYjBKQlFVMHNaVUZCWlN4SFFVRkhMRVZCUVVVc1IwRkJSeXhSUVVGUkxFTkJRVU1zVjBGQlZ5eEpRVUZKTEVsQlFVY3NSMEZCUnl4VFFVRlRMRU5CUVVFc1FVRkJReXhEUVVGRE8wRkJRM1JGTEc5Q1FVRk5MRkZCUVZFc1IwRkJSeXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zUTBGQlF5eHZRa0ZCYjBJc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRjRWNzYjBKQlFVMHNWMEZCVnl4SFFVRkhMRkZCUVZFc1EwRkJReXhaUVVGWkxFTkJRVU1zVTBGQlV5eERRVUZETEVsQlFVa3NSVUZCUlN4UlFVRlJMRVZCUVVVc1pVRkJaU3hEUVVGRExFTkJRVU03TzBGQlJYSkdMRzFDUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZMRWxCUVVjc1JVRkJSU3hEUVVGRExFTkJRMmhDTEVkQlFVY3NRMEZCUXl4clFrRkJhMElzUlVGQlJTeFhRVUZYTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUXpGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZEWkN4SlFVRkpMRVZCUVVVc1EwRkJRenM3UVVGSFdpeHRRa0ZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVVzUTBGQlF5eFhRVUZYTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1lVRkRla01zVFVGQlRUdEJRVU5JTEcxQ1FVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTnlRaXh0UWtGQlJ5eERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMkZCUTJRN1UwRkRTaXhEUVVGRExFTkJRVU03UzBGRFRpeERRVUZET3p0QlFVVkdMRkZCUVUwc1pVRkJaU3hIUVVGSExGTkJRV3hDTEdWQlFXVXNRMEZCU1N4TFFVRkxMRzlDUVVGM1FqdEJRVU5zUkN4WlFVRkpMRXRCUVVzc1EwRkJReXhMUVVGTExFdEJRVXNzUTBGQlF5eEZRVUZGTzBGQlFVVXNiVUpCUVU4N1UwRkJSVHM3UVVGRmJFTXNXVUZCVFN4blFrRkJaMElzUjBGQlJ5eERRVUZETEU5QlFVc3NVVUZCVVN4RFFVRkRMSFZDUVVGMVFpeERRVUZITEVOQlFVTTdRVUZEYmtVc1dVRkJUU3hMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenM3UVVGRmNrTXNXVUZCVFN4WFFVRlhMRWRCUTJJc1MwRkJTeXhEUVVGRExFdEJRVXNzUlVGQlJTeERRVU5hTEVsQlFVa3NRMEZCUXl4UFFVRlBMRVZCUVVVc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4RFFVTnNReXhSUVVGUkxFTkJRVWtzVVVGQlVTeERRVUZETEZsQlFWa3NRMEZCUXl4blFrRkJaMElzWVVGQlZTeERRVU0xUkN4WFFVRlhMRU5CUVVrc1VVRkJVU3hEUVVGRExGbEJRVmtzUTBGQlF5eG5Ra0ZCWjBJc1lVRkJWU3hEUVVNdlJDeExRVUZMTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRExFTkJRM0JDTEZGQlFWRXNRMEZCUXl4blFrRkJaMElzUTBGQlF5eERRVUZET3pzN08wRkJTV2hETEZsQlFVMHNUMEZCVHl4SFFVRkhMRXRCUVVzc1EwRkJReXhMUVVGTExFZEJRVWNzUzBGQlN5eERRVUZETEU5QlFVODdXVUZEZGtNc1QwRkJUeXhIUVVGSExFdEJRVXNzUTBGQlF5eExRVUZMTEVkQlFVY3NTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJRenM3UVVGRk1VTXNiVUpCUVZjc1EwRkJReXhIUVVGSExFTkJRVU03UVVGRFdpeGxRVUZITEVWQlFVVXNUMEZCVHl4SFFVRkhMRWxCUVVrN1FVRkRia0lzWjBKQlFVa3NSVUZCUlN4UFFVRlBMRWRCUVVjc1NVRkJTVHRUUVVOMlFpeERRVUZETEVOQlFVTTdPMEZCUlVnc2FVSkJRVk1zUjBGQlJ6dEJRVU5TTEdsQ1FVRkxMRVZCUVV3c1MwRkJTenRCUVVOTUxIVkNRVUZYTEVWQlFWZ3NWMEZCVnp0QlFVTllMRzFDUVVGUExFVkJRVVVzUzBGQlN5eERRVUZETEU5QlFVODdRVUZEZEVJc2JVSkJRVThzUlVGQlJTeExRVUZMTEVOQlFVTXNUMEZCVHp0VFFVTjZRaXhEUVVGRE96dEJRVVZHTEdGQlFVc3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenM3UVVGRllpeHpRa0ZCWXl4RFFVRkRMRVZCUVVVc1EwRkJReXhYUVVGWExFVkJRVVVzVTBGQlV5eERRVUZETEVOQlFVTTdRVUZETVVNc2MwSkJRV01zUTBGQlF5eEZRVUZGTEVOQlFVTXNVMEZCVXl4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE96dEJRVVYwUXl4aFFVRkxMRU5CUVVNc1kwRkJZeXhGUVVGRkxFTkJRVU03UzBGRE1VSXNRMEZCUXpzN1FVRkZSaXh2UWtGQlowSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhIUVVGSExGRkJRVkVzUTBGQlF5eFpRVUZaTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNWMEZCVnl4RlFVRkZMR1ZCUVdVc1EwRkJReXhEUVVGRE8wTkJRM2hITEVOQlFVRTdPM0ZDUVVWakxIRkNRVUZ4UWpzN096czdPenM3TzBGRGFFeHdReXhKUVVGTkxHVkJRV1VzUjBGQlJ6czdRVUZGY0VJc1YwRkJUeXhGUVVGRkxFbEJRVWs3UVVGRFlpeFRRVUZMTEVWQlFVVXNSVUZCUlRzN08wRkJSMVFzY1VKQlFXbENMRVZCUVVVc1pVRkJaVHM3T3p0QlFVbHNReXhuUWtGQldTeEZRVUZGTEd0Q1FVRnJRanM3TzBGQlIyaERMRmRCUVU4c1JVRkJSU3hwUWtGQlZTeERRVUZETEVWQlFVVXNTVUZCU1N4RlFVRkZMRVZCUVVjN096dEJRVWN2UWl3eVFrRkJkVUlzUlVGQlJTeHJRa0ZCYTBJN1FVRkRNME1zY1VKQlFXbENMRVZCUVVVc2IwSkJRVzlDTzBGQlEzWkRMREpDUVVGMVFpeEZRVUZGTEd0Q1FVRnJRanRCUVVNelF5dzRRa0ZCTUVJc1JVRkJSU3hsUVVGbE8wRkJRek5ETERKQ1FVRjFRaXhGUVVGRkxESkNRVUV5UWp0QlFVTndSQ3h6UTBGQmEwTXNSVUZCUlN3clFrRkJLMEk3UVVGRGJrVXNaMEpCUVZrc1JVRkJSU3hsUVVGbE8wRkJRemRDTERSQ1FVRjNRaXhGUVVGRkxHMUNRVUZ0UWp0QlFVTTNReXd5UWtGQmRVSXNSVUZCUlN4clFrRkJhMEk3TzBGQlJUTkRMR05CUVZVc1JVRkJSU3hGUVVGRk8wRkJRMlFzWlVGQlZ5eEZRVUZGTEVOQlFVTTdRVUZEWkN4bFFVRlhMRVZCUVVVc1IwRkJSenRCUVVOb1FpeHJRa0ZCWXl4RlFVRkZMRWRCUVVjN08wRkJSVzVDTEdWQlFWY3NSVUZCUlN4RFFVRkRPenRCUVVWa0xIVkNRVUZ0UWl4RlFVRkZMRWxCUVVrN08wRkJSWHBDTEZOQlFVc3NSVUZCUlN4SlFVRkpPenRCUVVWWUxHZENRVUZaTEVWQlFVVTdRVUZEVml4bFFVRlBMRVZCUVVVc1MwRkJTenRCUVVOa0xIRkNRVUZoTEVWQlFVVXNaMEpCUVdkQ08wRkJReTlDTEhkQ1FVRm5RaXhGUVVGRkxHMUNRVUZ0UWp0QlFVTnlReXg1UWtGQmFVSXNSVUZCUlN4cFFrRkJhVUk3UVVGRGNFTXNkMEpCUVdkQ0xFVkJRVVVzVTBGQlV6dEJRVU16UWl4M1FrRkJaMElzUlVGQlJTeDNRa0ZCZDBJN1FVRkRNVU1zWVVGQlN5eEZRVUZGTEVWQlFVVTdRVUZEVkN4aFFVRkxMRVZCUVVVc1QwRkJUenRCUVVOa0xHbENRVUZUTEVWQlFVVXNjVUpCUVUwN1FVRkJSU3h0UWtGQlR5eEZRVUZGTEV0QlFVc3NSVUZCUlN4SlFVRkpMRVZCUVVVc1EwRkJRVHRUUVVGRk8wdEJRemxETzBOQlEwb3NRMEZCUXpzN1VVRkZUeXhsUVVGbExFZEJRV1lzWlVGQlpUczdPenM3T3pzN096czdPenM3TzNkQ1EyeEVVU3haUVVGWk96dHhRa0ZEVml4VFFVRlRPenM3TzNkQ1FVTllMRmxCUVZrN08wRkJSVFZETEVsQlFVMHNSMEZCUnl4SFFVRkhMRk5CUVU0c1IwRkJSeXhEUVVGSkxGRkJRVkU3VjBGQlN5eERRVUZETEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF6dERRVUZCTEVOQlFVTTdPMGxCUlhoRUxGRkJRVkU3UVVGRFF5eGhRVVJVTEZGQlFWRXNRMEZEUlN4VlFVRlZMRVZCUVVVc1QwRkJUeXhGUVVGRk96aENRVVF2UWl4UlFVRlJPenRCUVVWT0xGbEJRVWtzUTBGQlF5eFJRVUZSTEVkQlFVY3NRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxEWkNRVUZ0UWl4UFFVRlBMRU5CUVVNc1EwRkJRenRCUVVONlJDeFpRVUZKTEVOQlFVTXNWVUZCVlN4SFFVRkhMRlZCUVZVc1EwRkJRenRCUVVNM1FpeFpRVUZKTEVOQlFVTXNZMEZCWXl4SFFVRkhMRU5CUVVNc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNN1FVRkRja1FzV1VGQlNTeERRVUZETEdkQ1FVRm5RaXhIUVVGSExFbEJRVWtzUTBGQlF6dEJRVU0zUWl4WlFVRkpMRU5CUVVNc1YwRkJWeXhIUVVGSExFbEJRVWtzUTBGQlFUdEJRVU4yUWl4WlFVRkpMRU5CUVVNc1UwRkJVeXhIUVVGSExFbEJRVWtzUTBGQlF6dEJRVU4wUWl4WlFVRkpMRU5CUVVNc1owSkJRV2RDTEVkQlFVY3NTVUZCU1N4RFFVRkRPenRCUVVVM1FpeFpRVUZKTEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1MwRkJTeXhGUVVGRk8wRkJRM0pDTEcxQ1FVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzFOQlF6VkNPenRCUVVWRUxGbEJRVWtzUTBGQlF5eFBRVUZQTEVWQlFVVXNRMEZCUXpzN1FVRkZaaXhaUVVGSkxFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RlFVRkZPMEZCUTNKQ0xHMUNRVUZQTEVOQlFVTXNUMEZCVHl4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRE8xTkJReTlDTzB0QlEwbzdPMmxDUVc1Q1F5eFJRVUZST3p0bFFYRkNTU3gzUWtGQlF5eFhRVUZYTEVWQlFVVTdRVUZEZUVJc1owSkJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNWMEZCVnl4SFFVRkhMRmRCUVZjc1EwRkJRenRCUVVONFF5eG5Ra0ZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hEUVVGRE8xTkJRMnhDT3pzN1pVRkZhMElzTmtKQlFVTXNaMEpCUVdkQ0xFVkJRVVU3UVVGRGJFTXNaMEpCUVVrc1EwRkJReXhuUWtGQlowSXNSMEZCUnl4blFrRkJaMElzUTBGQlF6dFRRVU0xUXpzN08yVkJSVTBzYlVKQlFVYzdRVUZEVGl4blFrRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJTeERRVUZETzBGQlEyaENMR2RDUVVGSkxFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1JVRkJSVHRCUVVOd1F5eDNRMEZCYzBJc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETzJGQlEzaERPMU5CUTBvN096dGxRVVZQTEc5Q1FVRkhPenM3UVVGRFVDeG5Ra0ZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dEJRVU40UWl4blFrRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhwUWtGQmFVSXNRMEZCUXl4RFFVRkRPenRCUVVVeFJDeG5Ra0ZCVFN4UFFVRlBMRWRCUVVjc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlEycERMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zVDBGQlR5eEhRVU55UWl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF6czdPMEZCUjNCRUxHZENRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFZEJRVWNzUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc2RVSkJRWFZDTEVOQlFVTXNRMEZCUXp0QlFVTnVSU3h0UWtGQlR5eERRVUZETEU5QlFVOHNRMEZCUXl4VlFVRkRMRTlCUVU4c1JVRkJTenRCUVVONlFpeHRRa0ZCUnl4RlFVRkZMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVU5rTEZGQlFWRXNRMEZCUXl4TlFVRkxMR2RDUVVGblFpeERRVUZETEVOQlFVTTdZVUZEZUVNc1JVRkJSU3hKUVVGSkxFTkJRVU1zUTBGQlF6dEJRVU5VTEdkQ1FVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zUTBGQlF6czdPMEZCUnpsRExHZENRVUZKTEVOQlFVTXNWMEZCVnl4SFFVRkhMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETERCQ1FVRXdRaXhEUVVGRExFTkJRVU03UVVGRGFrVXNaMEpCUVUwc2EwSkJRV3RDTEVkQlFVY3NSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zTUVKQlFUQkNMRWRCUVVjc1YwRkJWeXhEUVVGRExFTkJRVU03UVVGRGRrWXNaMEpCUVUwc1kwRkJZeXhIUVVGSExFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMREJDUVVFd1FpeEhRVUZITEU5QlFVOHNRMEZCUXl4RFFVRkRPenRCUVVVdlJTeG5Ra0ZCVFN4cFFrRkJhVUlzUjBGQlJ5eEhRVUZITEVWQlFVVXNRMEZCUXpzN1FVRkZhRU1zYVVKQlFVc3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRVZCUVVVN08wRkJSWHBDTEhGQ1FVRkxMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhYUVVGWExFVkJRVVVzUTBGQlF5eEZRVUZGTEVWQlFVVTdRVUZEYUVRc2QwSkJRVWtzV1VGQldTeEhRVUZITEVkQlFVY3NSVUZCUlN4RFFVTnVRaXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkRhRU1zVVVGQlVTeERRVUZETEVOQlFVTXNTVUZCU1N4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExGZEJRVmNzUjBGQlJ5eERRVUZETEVkQlFVY3NUVUZCVFN4SFFVRkhMRVZCUVVVc1EwRkJReXhEUVVGRE96dEJRVVZvUlN4M1FrRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTzBGQlExSXNiME5CUVZrc1IwRkJSeXhaUVVGWkxFTkJRM1JDTEVkQlFVY3NRMEZCUXl4aFFVRmhMRVZCUVVVc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFZRVUZWTEVkQlFVY3NTVUZCU1N4RFFVRkRMRU5CUTI1RUxFbEJRVWtzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMRU5CUVVNN2NVSkJRMnBFTzBGQlEwUXNaME5CUVZrc1EwRkJReXhSUVVGUkxFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1EwRkJRenM3UVVGRk1VTXNkVUpCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEZsQlFWa3NRMEZCUXl4RFFVTXhRaXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkRhRU1zVVVGQlVTeERRVUZETEVOQlFVTXNTVUZCU1N4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExGZEJRVmNzUjBGQlJ5eERRVUZETEVkQlFVY3NUVUZCVFN4SFFVRkhMRVZCUVVVc1EwRkJReXhEUVVNeFJDeFJRVUZSTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zUTBGQlF6dHBRa0ZEY0VNN1lVRkRTanM3TzBGQlIwUXNhVUpCUVVzc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNSMEZCUnl4UFFVRlBMRU5CUVVNc1RVRkJUU3hGUVVGRkxFTkJRVU1zUlVGQlJTeEZRVUZGTzBGQlEzSkRMRzlDUVVGTkxFVkJRVVVzUjBGQlJ5eHBRa0ZCYVVJc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6czdPMEZCUjNKRExHOUNRVUZOTERKQ1FVRXlRaXhIUVVGSExFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMR3REUVVGclF5eERRVUZETEVOQlFVTTdRVUZETVVZc2IwSkJRVTBzVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEc5Q1FVRnZRaXhEUVVGRE8wRkJRemRFTEc5Q1FVRkpMRU5CUVVNc2RVSkJRWFZDTEVOQlFVTXNNa0pCUVRKQ0xFVkJRVVVzVTBGQlV5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRPenRCUVVWNFJTeHJRa0ZCUlN4RFFVRkRMRTlCUVU4c1EwRkJReXd5UWtGQk1rSXNRMEZCUXl4RFFVRkRPMEZCUTNoRExHdENRVUZGTEVOQlFVTXNVVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJReXhEUVVGRE96dEJRVVUxUWl4dlFrRkJTU3hEUVVGRExHbENRVUZwUWl4RFFVRkRMRU5CUVVNc1JVRkJSU3hKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRPMkZCUTNoRU96dEJRVVZFTEdkQ1FVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFMUJRVTBzUTBGQlF5eHJRa0ZCYTBJc1EwRkJReXhEUVVGRE8wRkJRelZETEdkQ1FVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFMUJRVTBzUTBGQlF5eGpRVUZqTEVOQlFVTXNRMEZCUXpzN1FVRkZlRU1zWjBKQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXpzN08wRkJSM3BETEdsQ1FVRkxMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NUMEZCVHl4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJUdEJRVU55UXl4dlFrRkJTU3hEUVVGRExHbENRVUZwUWl4RFFVRkRMRU5CUVVNc1JVRkJSU3hKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRPMkZCUTNoRU96czdRVUZIUkN4blFrRkJTU3hKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEcxQ1FVRnRRaXhGUVVGRk8wRkJRMjVETEc5Q1FVRkpMRU5CUVVNc2FVSkJRV2xDTEVWQlFVVXNRMEZCUXp0aFFVTTFRanRUUVVOS096czdaVUZGWjBJc05rSkJRVWM3T3p0QlFVTm9RaXhuUWtGQlRTd3dRa0ZCTUVJc1IwRkJSeXhIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4M1FrRkJkMElzUTBGQlF5eERRVUZET3p0QlFVVXZSU3huUWtGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4UFFVRlBMRU5CUVVNc01FSkJRVEJDTEVOQlFVTXNRMEZCUXpzN1FVRkZjRVFzYzBOQlFUQkNMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUVVNc1EwRkJRenM3UVVGRk1VUXNaMEpCUVUwc2NVSkJRWEZDTEVkQlFVY3NTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhOUVVGTkxFVkJRVVVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdRVUZEZWtZc1owSkJRVWtzUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXp0QlFVTmtMR2RDUVVGSkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRkxFVkJRVXM3UVVGRE9VTXNiVUpCUVVjc1EwRkJReXhQUVVGTExGRkJRVkVzUTBGQlF5eDFRa0ZCZFVJc1EwRkJReXhEUVVOeVF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RlFVRkZMRVZCUVVVc1EwRkJReXhWUVVGVkxFZEJRVWNzUlVGQlJTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVTXpReXhOUVVGTkxFTkJRVU1zY1VKQlFYRkNMRU5CUVVNc1EwRkROMElzU1VGQlNTeERRVUZETEZkQlFWY3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhEUVVNeFFpeFJRVUZSTEVOQlFVTXNNRUpCUVRCQ0xFTkJRVU1zUTBGQlFUdGhRVU0xUXl4RFFVRkRMRU5CUVVNN08wRkJSVWdzYzBOQlFUQkNMRU5CUVVNc1JVRkJSU3hEUVVGRExGZEJRVmNzUlVGQlJTeEhRVUZITEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXgxUWtGQmRVSXNSVUZCUlN4SlFVRkpMRU5CUVVNc1lVRkJZU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUXpGSU96czdaVUZGYzBJc2FVTkJRVU1zVjBGQlZ5eEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVN096dEJRVU53UkN4eFFrRkJVeXhEUVVGRExFOUJRVThzUTBGQlF5eFZRVUZETEZGQlFWRXNSVUZCUlN4TFFVRkxMRVZCUVVzN1FVRkRia01zYjBKQlFVMHNXVUZCV1N4SFFVRkhMRWRCUVVjc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZMTEZGQlFWRXNRMEZCUXl4cFFrRkJhVUlzUTBGQlF5eERRVUZETzBGQlEycEZMRzlDUVVGTkxFZEJRVWNzUjBGQlJ5eFBRVUZMTEd0Q1FVRnJRaXhEUVVGRExGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1FVRkRlRVFzYjBKQlFVMHNVVUZCVVN4SFFVRkhMRTlCUVVzc1UwRkJVeXhEUVVGRExGRkJRVkVzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4UFFVRkxMRk5CUVZNc1EwRkJReXhSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdRVUZETDBVc2IwSkJRVTBzVFVGQlRTeEhRVUZITEU5QlFVc3NZVUZCWVN4RFFVRkRMRkZCUVZFc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF6czdRVUZGYUVRc2IwSkJRVTBzYlVKQlFXMUNMRWRCUVVjc1IwRkJSeXhEUVVGRExHMUNRVUZ0UWl4RFFVRkRMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU03TzBGQlJUVkVMRzlDUVVGTkxGRkJRVkVzUjBGQlJ5eEhRVUZITEVWQlFVVXNRMEZEYWtJc1NVRkJTU3hEUVVGRE8wRkJRMFlzZVVKQlFVc3NSVUZCUlN4UFFVRlBMRWRCUVVjc1IwRkJSeXhIUVVGSExHTkJRV01zUjBGQlJ5eE5RVUZOTEVkQlFVY3NTVUZCU1R0cFFrRkRlRVFzUTBGQlF5eERRVUZET3p0QlFVVlFMSGRDUVVGUkxFTkJRMGdzU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkRkRUlzU1VGQlNTeERRVUZETEZsQlFWa3NSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkRla0lzVFVGQlRTeERRVUZETEZsQlFWa3NRMEZCUXl4RFFVTndRaXhOUVVGTkxFTkJRVU1zYlVKQlFXMUNMRU5CUVVNc1EwRkRNMElzVVVGQlVTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRPenRCUVVVelFpeDFRa0ZCU3l4WFFVRlhMRU5CUTFvc1VVRkJVU3hGUVVOU0xGRkJRVkVzUTBGQlF5eExRVUZMTEVWQlEyUXNUMEZCU3l4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eFZRVUZCTEVOQlFVTTdNa0pCUVVrc1EwRkJReXhEUVVGRExFMUJRVTBzU1VGQlNTeE5RVUZOTzJsQ1FVRkJMRU5CUVVNc1EwRkJReXhEUVVGRE96dGhRVWMxUkN4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8xTkJRMW83T3pzN096czdaVUZMVlN4eFFrRkJReXhYUVVGWExFVkJRVVVzWVVGQllTeEZRVUZGTEV0QlFVc3NSVUZCUlRzN08wRkJRek5ETEdsQ1FVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExGVkJRVU1zU1VGQlNTeEZRVUZMTzBGQlEzQkNMRzlDUVVGSkxFZEJRVWNzUjBGQlJ5eFBRVUZMTEd0Q1FVRnJRaXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVVXNZVUZCWVN4RFFVRkRMRU5CUVVNN1FVRkROMFFzYjBKQlFVa3NUVUZCVFN4SFFVRkhMRTlCUVVzc1lVRkJZU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4SFFVRkhMRVZCUVVVc1EwRkJReXhEUVVGRE96dEJRVVY2UkN4MVFrRkJTeXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVTnlRaXhKUVVGSkxFTkJRVU03UVVGRFJpeDVRa0ZCU3l4RlFVRkZMRTlCUVU4c1IwRkJSeXhIUVVGSExFZEJRVWNzWTBGQll5eEhRVUZITEUxQlFVMHNSMEZCUnl4SlFVRkpPMmxDUVVONFJDeERRVUZETEVOQlEwUXNVVUZCVVN4TlFVRkpMRTlCUVVzc1VVRkJVU3hEUVVGRExGbEJRVmtzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJSeXhEUVVNeFJDeFJRVUZSTEVOQlFVa3NUMEZCU3l4UlFVRlJMRU5CUVVNc1dVRkJXU3hEUVVGRExHZENRVUZuUWl4aFFVRlZMRU5CUTJwRkxFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZEWWl4UlFVRlJMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU03WVVGRE9VSXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRUUVVOYU96czdaVUZGVlN4eFFrRkJReXhMUVVGTExFVkJRVVU3UVVGRFppeG5Ra0ZCU1N4RlFVRkZMRWRCUVVjc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF6dEJRVU40UWl4blFrRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVWQlFVVTdRVUZCUlN4MVFrRkJUenRoUVVGRk96dEJRVVZvUXl4blFrRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eEhRVUZITEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1FVRkRia01zWjBKQlFVa3NRMEZCUXl4alFVRmpMRU5CUVVNc1IwRkJSeXhEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZET3p0QlFVVnlReXhuUWtGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4SlFVRkpMRU5CUVVNN1UwRkRla0k3T3p0bFFVVlpMSFZDUVVGRExFdEJRVXNzUlVGQlJUdEJRVU5xUWl4blFrRkJTU3hGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXp0QlFVTjRRaXhuUWtGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRVZCUVVVN1FVRkJSU3gxUWtGQlR6dGhRVUZGT3pzN1FVRkhhRU1zWjBKQlFVa3NWVUZCVlN4SFFVRkpMRXRCUVVzc1EwRkJReXhMUVVGTExFZEJRVWNzUlVGQlJTeERRVUZETEUxQlFVMHNRVUZCUXl4RFFVRkRPMEZCUXpORExHZENRVUZKTEZWQlFWVXNTMEZCU3l4RFFVRkRMRVZCUVVVN1FVRkRiRUlzZFVKQlFVODdZVUZEVmpzN1FVRkZSQ3huUWtGQlNTeFpRVUZaTEVkQlFVY3NSVUZCUlN4RFFVRkRMRmxCUVZrc1EwRkJRenRCUVVOdVF5eG5Ra0ZCU1N4TFFVRkxMRWRCUVVjc1JVRkJSU3hEUVVGRExFdEJRVXNzUjBGQlJ5eFZRVUZWTEVOQlFVTTdRVUZEYkVNc1owSkJRVWtzU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhGUVVGRk8wRkJRM1pDTEhGQ1FVRkxMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPMEZCUTJoRUxIZENRVUZKTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zUTBGQlF5eEZRVUZGTEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dHBRa0ZETDBNN1lVRkRTaXhOUVVGTk8wRkJRMGdzYjBKQlFVa3NRMEZCUXl4cFFrRkJhVUlzUTBGQlF5eFpRVUZaTEVWQlFVVXNTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzJGQlF6RkVPMU5CUTBvN096dGxRVVZaTEhWQ1FVRkRMRXRCUVVzc1JVRkJSVHM3UVVGRmFrSXNaMEpCUVVrc1MwRkJTeXhEUVVGRExFdEJRVXNzUzBGQlN5eERRVUZETEVWQlFVVTdRVUZCUlN4MVFrRkJUenRoUVVGRk96czdPenRCUVV0c1F5eG5Ra0ZCU1N4SlFVRkpMRU5CUVVNc1UwRkJVeXhGUVVGRk8wRkJRMmhDTEc5Q1FVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzJGQlF6TkNPenRCUVVWRUxHZENRVUZKTEZsQlFWa3NSMEZCUnl4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETzBGQlF6RkRMR2RDUVVGSkxGbEJRVmtzUjBGQlJ5eFpRVUZaTEVOQlFVTXNTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhEUVVGRE96dEJRVVZzUkN4blFrRkJTU3hUUVVGVExFZEJRVWNzV1VGQldTeERRVUZETEV0QlFVc3NSVUZCUlN4RFFVRkRPMEZCUTNKRExHZENRVUZKTEZkQlFWY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXpzN1FVRkZiRVVzWjBKQlFVa3NVMEZCVXl4SFFVRkhMRmRCUVZjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTTdPMEZCUlRORExHZENRVUZKTEVOQlFVTXNVMEZCVXl4SFFVRkhPMEZCUTJJc05FSkJRVmtzUlVGQldpeFpRVUZaTzBGQlExb3NjMEpCUVUwc1JVRkJSU3hMUVVGTExFTkJRVU1zUzBGQlN6dEJRVU51UWl4eFFrRkJTeXhGUVVGRkxGTkJRVk03WVVGRGJrSXNRMEZCUXpzN1FVRkZSaXhuUWtGQlNTeERRVUZETEdOQlFXTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1YwRkJWeXhGUVVGRkxFbEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRGJrVXNaMEpCUVVrc1EwRkJReXhqUVVGakxFTkJRVU1zUlVGQlJTeERRVUZETEZOQlFWTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRPenRCUVVVdlJDeHBRa0ZCU3l4RFFVRkRMR05CUVdNc1JVRkJSU3hEUVVGRE8xTkJRekZDT3pzN1pVRkZaMElzTWtKQlFVTXNXVUZCV1N4RlFVRkZMRXRCUVVzc1JVRkJSVHRCUVVOdVF5eHBRa0ZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUzBGQlN5eEZRVUZGTEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1kwRkJZeXhEUVVGRExFTkJRVU03UVVGRGRFUXNZVUZCUXl4RFFVRkRMRWRCUVVjc1IwRkJSeXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEhWQ1FVRjFRaXhIUVVGSExGbEJRVmtzUjBGQlJ5eFpRVUZaTEVkQlFVY3NSMEZCUnl4RFFVRkRMRU5CUXpkRkxFZEJRVWNzUTBGQlF5eFpRVUZaTEVWQlFVVXNTMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhEUVVGRE96dEJRVVZ5UXl4blFrRkJTU3hOUVVGTkxFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExEQkNRVUV3UWl4SFFVRkhMR2xDUVVGcFFpeEhRVUZITEZsQlFWa3NSMEZCUnl4UFFVRlBMRWRCUVVjc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXp0QlFVTjZTU3huUWtGQlNTeEpRVUZKTEVkQlFVY3NUVUZCVFN4RFFVRkRMRXRCUVVzc1JVRkJSU3hIUVVGSExFdEJRVXNzUTBGQlF6dEJRVU5zUXl4clFrRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXpzN1FVRkZjRUlzWVVGQlF5eERRVUZETEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExIZENRVUYzUWl4SFFVRkhMRkZCUVZFc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFZRVUZETEV0QlFVc3NSVUZCUlN4RlFVRkZMRVZCUVVzN1FVRkRNMFVzYjBKQlFVa3NTMEZCU3l4SlFVRkpMRmxCUVZrc1JVRkJSVHRCUVVOMlFpeDNRa0ZCU1N4SFFVRkhMRWRCUVVjc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETzBGQlEyaENMSGRDUVVGSkxFbEJRVWtzUjBGQlJ5eFJRVUZSTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRGRrUXNkVUpCUVVjc1EwRkJReXhIUVVGSExFTkJRVU1zVFVGQlRTeEZRVUZGTEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJRenRwUWtGRGFFTTdZVUZEU2l4RFFVRkRMRU5CUVVNN1UwRkRUanM3TzJWQlJWTXNiMEpCUVVNc1NVRkJTU3hGUVVGRk8wRkJRMklzWjBKQlFVMHNTVUZCU1N4SFFVRkhMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEZsQlFWa3NRMEZCUXl4blFrRkJaMElzUTBGQlF5eERRVUZETzBGQlF6bEVMR2RDUVVGTkxGRkJRVkVzUjBGQlJ5d3JRa0ZCWjBJc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFpRVUZaTEVOQlFVTXNaMEpCUVdkQ0xFVkJRVVU3UVVGRE1VVXNiMEpCUVVrc1JVRkJSU3hqUVVGRExFbEJRVWs3TWtKQlFVc3NTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJUU3hKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEV0QlFVc3NXVUZCVHl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFZEJRVWNzUjBGQlN5eEZRVUZGTzJsQ1FVRkJPMkZCUTNoR0xFTkJRVU1zUTBGQlF6czdRVUZGU0N4dFFrRkJUeXhIUVVGSExFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03VTBGRGNrTTdPenM3T3pzN1pVRkxWeXh6UWtGQlF5eExRVUZMTEVWQlFVVTdRVUZEYUVJc2JVSkJRVThzUTBGQlF5eExRVUZMTEVkQlFVY3NSVUZCUlN4SFFVRkhMRWRCUVVjc1IwRkJSeXhGUVVGRkxFTkJRVUVzUjBGQlNTeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4TFFVRkxMRWRCUVVjc1MwRkJTeXhEUVVGQkxFRkJRVU1zUTBGQlF6dFRRVU01UnpzN096czdPenM3WlVGTldTeDFRa0ZCUXl4UlFVRlJMRVZCUVVVN1FVRkRjRUlzWjBKQlFVMHNhVUpCUVdsQ0xFZEJRVWNzVVVGQlVTeEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTjRReXhuUWtGQlRTeGpRVUZqTEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExGVkJRVlVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRmRCUVZjc1EwRkJRU3hIUVVGSkxFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNWMEZCVnl4SFFVRkhMRVZCUVVVc1EwRkJRenRCUVVNdlJ5eHRRa0ZCVHl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExHbENRVUZwUWl4SFFVRkhMR05CUVdNc1EwRkJReXhEUVVGRE8xTkJRM2hFT3pzN096czdPenRsUVUxcFFpdzBRa0ZCUXl4VFFVRlRMRVZCUVVVc1ZVRkJWU3hGUVVGRk8wRkJRM1JETEdkQ1FVRkpMRmxCUVZrc1IwRkJSeXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRPMEZCUXpkRExHZENRVUZKTEZWQlFWVXNSVUZCUlR0QlFVTmFMRFJDUVVGWkxFbEJRVWtzU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJRenRoUVVNNVF6dEJRVU5FTEcxQ1FVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFZRVUZWTEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhYUVVGWExFTkJRVUVzU1VGQlN5eFpRVUZaTEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhYUVVGWExFTkJRVUVzUVVGQlF5eERRVUZETzFOQlF6bEhPenM3T3pzN096dGxRVTFSTEcxQ1FVRkRMRWxCUVVrc1JVRkJSVHRCUVVOYUxHMUNRVUZQTEdsQ1FVRm5RaXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZET1VJc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1IwRkRhRVVzVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXp0alFVRkRPMU5CUTNSQ096czdWMEZ1VkVNc1VVRkJVVHM3TzNGQ1FYTlVReXhSUVVGUk96czdPenM3T3pzN1FVTTFWSFpDTEVsQlFVMHNaVUZCWlN4SFFVRkhMRk5CUVd4Q0xHVkJRV1VzUTBGQlNTeFJRVUZSTEVWQlFVVXNTMEZCU3p0WFFVRkxMRlZCUVVFc1NVRkJTU3hGUVVGSk8wRkJRMnBFTEZsQlFVa3NUVUZCVFN4SFFVRkhMRkZCUVZFc1EwRkJRenRCUVVOMFFpeFpRVUZOTEU5QlFVOHNSMEZCUnl4alFVRmpMRU5CUVVNN1FVRkRMMElzV1VGQlRTeFJRVUZSTEVkQlFVY3NhMEpCUVd0Q0xFTkJRVU03TzBGQlJYQkRMRmxCUVVrc1MwRkJTeXhIUVVGSExFTkJRVU1zUTBGQlF6dEJRVU5rTEdWQlFVOHNTVUZCU1N4RlFVRkZPMEZCUTFRc2FVSkJRVXNzUjBGQlJ5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRE8wRkJReTlDTEdkQ1FVRkpMRU5CUVVNc1MwRkJTeXhGUVVGRkxFMUJRVTA3TzBGQlJXeENMR2RDUVVGSkxFZEJRVWNzUjBGQlJ5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRia0lzWjBKQlFVa3NTVUZCU1N4RFFVRkRMR05CUVdNc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJUdEJRVU14UWl4elFrRkJUU3hIUVVGSExFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMkZCUTJoRU8xTkJRMG83TzBGQlJVUXNaVUZCVHl4TFFVRkxMRVZCUVVVN1FVRkRWaXhwUWtGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03UVVGRGFFTXNaMEpCUVVrc1EwRkJReXhMUVVGTExFVkJRVVVzVFVGQlRUczdRVUZGYkVJc1owSkJRVWtzUjBGQlJ5eEhRVUZITEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVOdVFpeG5Ra0ZCU1N4TFFVRkxMRU5CUVVNc1kwRkJZeXhEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTzBGQlF6TkNMSE5DUVVGTkxFZEJRVWNzVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUzBGQlN5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03WVVGRGRrUTdVMEZEU2pzN1FVRkZSQ3hsUVVGUExFMUJRVTBzUTBGQlF6dExRVU5xUWp0RFFVRkJMRU5CUVVFN08zRkNRVVZqTEVWQlFVVXNaVUZCWlN4RlFVRm1MR1ZCUVdVc1JVRkJSU0lzSW1acGJHVWlPaUpuWlc1bGNtRjBaV1F1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUtHWjFibU4wYVc5dUlHVW9kQ3h1TEhJcGUyWjFibU4wYVc5dUlITW9ieXgxS1h0cFppZ2hibHR2WFNsN2FXWW9JWFJiYjEwcGUzWmhjaUJoUFhSNWNHVnZaaUJ5WlhGMWFYSmxQVDFjSW1aMWJtTjBhVzl1WENJbUpuSmxjWFZwY21VN2FXWW9JWFVtSm1FcGNtVjBkWEp1SUdFb2J5d2hNQ2s3YVdZb2FTbHlaWFIxY200Z2FTaHZMQ0V3S1R0MllYSWdaajF1WlhjZ1JYSnliM0lvWENKRFlXNXViM1FnWm1sdVpDQnRiMlIxYkdVZ0oxd2lLMjhyWENJblhDSXBPM1JvY205M0lHWXVZMjlrWlQxY0lrMVBSRlZNUlY5T1QxUmZSazlWVGtSY0lpeG1mWFpoY2lCc1BXNWJiMTA5ZTJWNGNHOXlkSE02ZTMxOU8zUmJiMTFiTUYwdVkyRnNiQ2hzTG1WNGNHOXlkSE1zWm5WdVkzUnBiMjRvWlNsN2RtRnlJRzQ5ZEZ0dlhWc3hYVnRsWFR0eVpYUjFjbTRnY3lodVAyNDZaU2w5TEd3c2JDNWxlSEJ2Y25SekxHVXNkQ3h1TEhJcGZYSmxkSFZ5YmlCdVcyOWRMbVY0Y0c5eWRITjlkbUZ5SUdrOWRIbHdaVzltSUhKbGNYVnBjbVU5UFZ3aVpuVnVZM1JwYjI1Y0lpWW1jbVZ4ZFdseVpUdG1iM0lvZG1GeUlHODlNRHR2UEhJdWJHVnVaM1JvTzI4ckt5bHpLSEpiYjEwcE8zSmxkSFZ5YmlCemZTa2lMQ0pwYlhCdmNuUWdVMnRsWkhWc1pYSWdabkp2YlNBbkxpOXphMlZrZFd4bGNpYzdYRzVjYmk4cUtseHVJQ29nUjJWdVpYSmhkR1VnYzJOb1pXUjFiR1Z5SUdkeWFXUWdkMmwwYUNCMFlYTnJJR05oY21SelhHNGdLaUJ2Y0hScGIyNXpPbHh1SUNvZ0xTQm9aV0ZrWlhKek9pQnpkSEpwYm1kYlhTQXRJR0Z5Y21GNUlHOW1JR2hsWVdSbGNuTmNiaUFxSUMwZ2RHRnphM002SUZSaGMydGJYU0F0SUdGeWNtRjVJRzltSUhSaGMydHpYRzRnS2lBdElHTnZiblJoYVc1bGNrTnpjME5zWVhOek9pQnpkSEpwYm1jZ0xTQmpjM01nWTJ4aGMzTWdiMllnYldGcGJpQmpiMjUwWVdsdVpYSmNiaUFxSUMwZ2FHVmhaR1Z5UTI5dWRHRnBibVZ5UTNOelEyeGhjM002SUhOMGNtbHVaeUF0SUdOemN5QmpiR0Z6Y3lCdlppQm9aV0ZrWlhJZ1kyOXVkR0ZwYm1WeVhHNGdLaUF0SUhOamFHVmtkV3hsY2tOdmJuUmhhVzVsY2tOemMwTnNZWE56T2lCemRISnBibWNnTFNCamMzTWdZMnhoYzNNZ2IyWWdjMk5vWldSMWJHVnlYRzRnS2lBdElHeHBibVZJWldsbmFIUWdMU0JvWldsbmFIUWdiMllnYjI1bElHaGhiR1l0YUc5MWNpQmpaV3hzSUdsdUlHZHlhV1JjYmlBcUlDMGdZbTl5WkdWeVYybGtkR2dnTFNCM2FXUjBhQ0J2WmlCaWIzSmtaWElnYjJZZ1kyVnNiQ0JwYmlCbmNtbGtYRzRnS2k5Y2JpUXVabTR1YzJ0bFpIVnNaWElnUFNCbWRXNWpkR2x2YmlodmNIUnBiMjV6S1NCN1hHNGdJQ0FnYkdWMElDUmpiMjUwWVdsdVpYSWdQU0FrS0hSb2FYTXBPMXh1SUNBZ0lIWmhjaUJ6YTJWa2RXeGxjaUE5SUc1bGR5QlRhMlZrZFd4bGNpZ2tZMjl1ZEdGcGJtVnlMQ0J2Y0hScGIyNXpLVHRjYmx4dUlDQWdJSEpsZEhWeWJpQnphMlZrZFd4bGNqdGNibjA3WEc1Y2JpUXVjMnRsWkhWc1pYSWdQU0JUYTJWa2RXeGxjanNpTENKcGJYQnZjblFnVTJ0bFpIVnNaWElnWm5KdmJTQW5MaTl6YTJWa2RXeGxjaWM3WEc1cGJYQnZjblFnWVdSaGNIUmxjaUJtY205dElDY3VMMkZrWVhCMFpYSW5PMXh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JUYTJWa2RXeGxjanNpTENKcGJYQnZjblFnZXlCamIyMXdhV3hsVkdWdGNHeGhkR1VnZlNCbWNtOXRJQ2N1TGk5MFpXMXdiR0YwWlNjN1hHNWNibU52Ym5OMElHUnBkaUE5SUNoamMzTkRiR0Z6Y3lrZ1BUNGdKQ2duUEdScGRqNDhMMlJwZGo0bktTNWhaR1JEYkdGemN5aGpjM05EYkdGemN5azdYRzVjYm1OdmJuTjBJR2RsZEVsMFpXMUVhWFp6SUQwZ0tITmxkSFJwYm1kektTQTlQaUI3WEc0Z0lDQWdZMjl1YzNRZ0pHUnBkaUE5SUdScGRpaHpaWFIwYVc1bmN5NXBkR1Z0YzA5d2RHbHZibk11YVhSbGJVTmhjbVJEYzNORGJHRnpjeWs3WEc0Z0lDQWdZMjl1YzNRZ2FYUmxiWE1nUFNCelpYUjBhVzVuY3k1cGRHVnRjMDl3ZEdsdmJuTXVhWFJsYlhNN1hHNGdJQ0FnWTI5dWMzUWdkR1Z0Y0d4aGRHVWdQU0JqYjIxd2FXeGxWR1Z0Y0d4aGRHVW9jMlYwZEdsdVozTXVhWFJsYlhOUGNIUnBiMjV6TG1sMFpXMURZWEprVkdWdGNHeGhkR1VzSUh0Y2JpQWdJQ0FnSUNBZ2RHbHRaVG9nS0dsMFpXMHBJRDArSUdsMFpXMHVhVzUwWlhKMllXd2dQeUJnSkh0cGRHVnRMbWx1ZEdWeWRtRnNMbk4wWVhKMGZTQjBieUFrZTJsMFpXMHVhVzUwWlhKMllXd3VaVzVrZldBZ09pQW5KMXh1SUNBZ0lIMHBPMXh1WEc0Z0lDQWdjbVYwZFhKdUlHbDBaVzF6TG0xaGNDZ29hWFJsYlN3Z2FXNWtaWGdwSUQwK0lDUmthWFl1WTJ4dmJtVW9LVnh1SUNBZ0lDQWdJQ0F1WkdGMFlTZ25hVzVrWlhnbkxDQnBibVJsZUNsY2JpQWdJQ0FnSUNBZ0xtaDBiV3dvZEdWdGNHeGhkR1VvYVhSbGJTa3BYRzRnSUNBZ0tUdGNibjFjYmx4dVkyOXVjM1FnY0c5d2RXeGhkR1ZUYTJWa2RXeGxja2wwWlcxeklEMGdLSE5sZEhScGJtZHpLU0E5UGlCN1hHNGdJQ0FnWTI5dWMzUWdKSE5yWldSMWJHVnlTWFJsYlhORmJDQTlJQ1FvYzJWMGRHbHVaM011YVhSbGJYTlBjSFJwYjI1ekxtTnZiblJoYVc1bGNsTmxiR1ZqZEc5eUtWeHVJQ0FnSUNBZ0lDQXVaVzF3ZEhrb0tWeHVJQ0FnSUNBZ0lDQXVZV1JrUTJ4aGMzTW9jMlYwZEdsdVozTXVhWFJsYlhOUGNIUnBiMjV6TG1sMFpXMXpRM056UTJ4aGMzTXBPMXh1SUNBZ0lHTnZibk4wSUNSdmQyNWxja1J2WTNWdFpXNTBJRDBnSkNna2MydGxaSFZzWlhKSmRHVnRjMFZzV3pCZExtOTNibVZ5Ukc5amRXMWxiblFwTzF4dUlDQWdJR052Ym5OMElDUnphR2xtZEhNZ1BTQWtLQ2N1SnlBcklITmxkSFJwYm1kekxuZHZjbXRwYm1kSmJuUmxjblpoYkZCc1lXTmxhRzlzWkdWeVEzTnpRMnhoYzNNZ0t5QW5JRDRnWkdsMkp5azdYRzVjYmlBZ0lDQmpiMjV6ZENBa2FHVmhaR1Z5UkdsMklEMGdaR2wyS0NsY2JpQWdJQ0FnSUNBZ0xtaDBiV3dvSnp4b01TQmpiR0Z6Y3oxY0luTnBMV2hsWVdSbGNsd2lQaWNnS3lCelpYUjBhVzVuY3k1cGRHVnRjMDl3ZEdsdmJuTXVkR2wwYkdVZ0t5QW5QQzlvTVQ0bktWeHVJQ0FnSUNBZ0lDQXVZWEJ3Wlc1a1ZHOG9KSE5yWldSMWJHVnlTWFJsYlhORmJDazdYRzVjYmlBZ0lDQmpiMjV6ZENBa2MydGxaSFZzWlhKSmRHVnRjME52Ym5SaGFXNWxja1ZzSUQwZ1pHbDJLQ2R6YVMxamIyNTBZV2x1WlhJbktUdGNiaUFnSUNCMllYSWdKR2wwWlcxeklEMGdaMlYwU1hSbGJVUnBkbk1vYzJWMGRHbHVaM01wTzF4dUlDQWdJQ1JwZEdWdGN5NW1iM0pGWVdOb0tHVnNJRDArSUh0Y2JpQWdJQ0FnSUNBZ0pITnJaV1IxYkdWeVNYUmxiWE5EYjI1MFlXbHVaWEpGYkM1aGNIQmxibVFvWld3cE8xeHVJQ0FnSUgwcE8xeHVJQ0FnSUNSemEyVmtkV3hsY2tsMFpXMXpRMjl1ZEdGcGJtVnlSV3d1WVhCd1pXNWtWRzhvSkhOclpXUjFiR1Z5U1hSbGJYTkZiQ2s3WEc1Y2JpQWdJQ0JzWlhRZ2IzQmxjbUYwYVc5dUlEMGdiblZzYkR0Y2JseHVJQ0FnSUdOdmJuTjBJRzF2ZFhObFZYQWdQU0FvWlhabGJuUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLRzl3WlhKaGRHbHZiaUE5UFNCdWRXeHNLU0J5WlhSMWNtNDdYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdleUFrYlc5MmFXNW5RMkZ5WkN3Z0pHTmhjbVFnZlNBOUlHOXdaWEpoZEdsdmJqdGNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQWtjMmxGYkNBOUlDUW9KeTRuSUNzZ2MyVjBkR2x1WjNNdWFYUmxiWE5QY0hScGIyNXpMbWhwWjJoc2FXZG9kRWwwWlcxRGMzTWdLeUFuT25acGMybGliR1VuS1RzZ0x5OGdabWw0YldWY2JseHVJQ0FnSUNBZ0lDQnBaaUFvSkhOcFJXd3ViR1Z1WjNSb0lDRTlQU0F3SUNZbUlDUnphVVZzTG1SaGRHRW9KMjFoZEdOb0p5a2dQVDBnTVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjbTkzU0dWcFoyaDBJRDBnYzJWMGRHbHVaM011YkdsdVpVaGxhV2RvZENBcklERTdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JwYm1SbGVDQTlJSEJoY25ObFNXNTBLQ1J0YjNacGJtZERZWEprTG1SaGRHRW9KMmx1WkdWNEp5a3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYVhSbGJTQTlJSE5sZEhScGJtZHpMbWwwWlcxelQzQjBhVzl1Y3k1cGRHVnRjMXRwYm1SbGVGMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J2Wm1aelpYUkpiazFwYm5WMFpYTWdQU0EyTUNBdklITmxkSFJwYm1kekxuSnZkM05RWlhKSWIzVnlJQ29nS0NSdGIzWnBibWREWVhKa1d6QmRMbTltWm5ObGRGUnZjQ0F2SUhKdmQwaGxhV2RvZENrN0lDOHZJRHc4UFQwZ1JrbFlUVVVnWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCcGJuUmxjblpoYkNBOUlITmxkSFJwYm1kekxtUmhkR0ZiSkhOcFJXd3VjR0Z5Wlc1MEtDa3VaR0YwWVNnblkyOXNkVzF1SnlsZExuZHZjbXRwYm1kVWFXMWxTVzUwWlhKMllXeHpXeVJ6YVVWc0xuQmhjbVZ1ZENncExtUmhkR0VvSjJsMFpXMHRhVzVrWlhnbktWMDdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lITmxkSFJwYm1kekxtbDBaVzF6VDNCMGFXOXVjeTV2YmtsMFpXMVhhV3hzUW1WQmMzTnBaMjVsWkNBbUppQnpaWFIwYVc1bmN5NXBkR1Z0YzA5d2RHbHZibk11YjI1SmRHVnRWMmxzYkVKbFFYTnphV2R1WldRb2V5QnBkR1Z0TENCcGJuUmxjblpoYkN3Z2IyWm1jMlYwU1c1TmFXNTFkR1Z6SUgwcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBa2JXOTJhVzVuUTJGeVpGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNWtaWFJoWTJnb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNWpjM01vZXlCMGIzQTZJQ1J6YVVWc1d6QmRMbTltWm5ObGRGUnZjQ3dnYkdWbWREb2dNQ0I5S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1b1pXbG5hSFFvSkhOcFJXeGJNRjB1WTJ4cFpXNTBTR1ZwWjJoMEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNTNhV1IwYUNnbllYVjBieWNwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTG5KbGJXOTJaVU5zWVhOektHQWtlM05sZEhScGJtZHpMbWwwWlcxelQzQjBhVzl1Y3k1cGRHVnRRMkZ5WkVOemMwTnNZWE56ZlMxdGIzWnBibWRnS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1aFpHUkRiR0Z6Y3loZ0pIdHpaWFIwYVc1bmN5NXBkR1Z0YzA5d2RHbHZibk11YVhSbGJVTmhjbVJEYzNORGJHRnpjMzB0Y0dsdWJtVmtZQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1WVhCd1pXNWtWRzhvSkhOcFJXd3VjR0Z5Wlc1MEtDa3BPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWtiVzkyYVc1blEyRnlaQzV2YmlnbmJXOTFjMlZrYjNkdUp5d2diVzkxYzJWRWIzZHVUMjVEWVhKa0tUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNSdGIzWnBibWREWVhKa0xuSmxiVzkyWlNncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSkdOaGNtUXVjMmh2ZHlncE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSkNnbkxpY2dLeUJ6WlhSMGFXNW5jeTVwZEdWdGMwOXdkR2x2Ym5NdWFHbG5hR3hwWjJoMFNYUmxiVU56Y3lrdWFHbGtaU2dwTzF4dVhHNGdJQ0FnSUNBZ0lHOXdaWEpoZEdsdmJpQTlJRzUxYkd3N1hHNGdJQ0FnSUNBZ0lDUnZkMjVsY2tSdlkzVnRaVzUwTG05bVppZ25iVzkxYzJWdGIzWmxKeXdnYlc5MWMyVk5iM1psS1R0Y2JpQWdJQ0FnSUNBZ0pHOTNibVZ5Ukc5amRXMWxiblF1YjJabUtDZHRiM1Z6WlhWd0p5d2diVzkxYzJWVmNDazdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lHTnZibk4wSUcxdmRYTmxUVzkyWlNBOUlDaGxkbVZ1ZENrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2IzQmxjbUYwYVc5dUlEMDlJRzUxYkd3cElISmxkSFZ5Ymp0Y2JseHVJQ0FnSUNBZ0lDQmpiMjV6ZENCN0lDUnRiM1pwYm1kRFlYSmtMQ0J2Wm1aelpYUllMQ0J2Wm1aelpYUlpJSDBnUFNCdmNHVnlZWFJwYjI0N1hHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2JtVjNUMlptYzJWMFdDQTlJR1YyWlc1MExuQmhaMlZZSUMwZ2IyWm1jMlYwV0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVsZDA5bVpuTmxkRmtnUFNCbGRtVnVkQzV3WVdkbFdTQXRJRzltWm5ObGRGazdYRzVjYmlBZ0lDQWdJQ0FnSkcxdmRtbHVaME5oY21RdVkzTnpLSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZjRG9nYm1WM1QyWm1jMlYwV1NBcklDZHdlQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaV1owT2lCdVpYZFBabVp6WlhSWUlDc2dKM0I0SjF4dUlDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0F2THlCSWFXZHNhV2RvZENCemFHbG1kSE5jYmlBZ0lDQWdJQ0FnWTI5dWMzUWdYM2RwYm1SdmR5QTlJQ1J2ZDI1bGNrUnZZM1Z0Wlc1MFd6QmRMbVJsWm1GMWJIUldhV1YzTzF4dUlDQWdJQ0FnSUNCamIyNXpkQ0I0SUQwZ1pYWmxiblF1Y0dGblpWZzdYRzRnSUNBZ0lDQWdJR052Ym5OMElIa2dQU0JsZG1WdWRDNXdZV2RsV1NBdElGOTNhVzVrYjNjdWMyTnliMnhzV1R0Y2JseHVJQ0FnSUNBZ0lDQmpiMjV6ZENCeWIzZElaV2xuYUhRZ1BTQnpaWFIwYVc1bmN5NXNhVzVsU0dWcFoyaDBJQ3NnTVR0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnY205M2MxQmxja2h2ZFhJZ1BTQnpaWFIwYVc1bmN5NXliM2R6VUdWeVNHOTFjanRjYmx4dUlDQWdJQ0FnSUNCamIyNXpkQ0JwYm1SbGVDQTlJSEJoY25ObFNXNTBLQ1J0YjNacGJtZERZWEprTG1SaGRHRW9KMmx1WkdWNEp5a3BPMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnBkR1Z0SUQwZ2MyVjBkR2x1WjNNdWFYUmxiWE5QY0hScGIyNXpMbWwwWlcxelcybHVaR1Y0WFR0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWkhWeVlYUnBiMjRnUFNCcGRHVnRMbVIxY21GMGFXOXVPMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQm9aV2xuYUhRZ1BTQmtkWEpoZEdsdmJpQXFJQ2h5YjNkSVpXbG5hSFFnS2lCeWIzZHpVR1Z5U0c5MWNpQXZJRFl3S1R0Y2JseHVJQ0FnSUNBZ0lDQWtjMmhwWm5SekxtVmhZMmdvWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQWtkR2hwY3lBOUlDUW9kR2hwY3lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmxiR1Z0Wlc1MFFtOTFibVJwYm1jZ1BTQjBhR2x6TG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnSkdWc0lEMGdKSFJvYVhNdVptbHVaQ2duTGljZ0t5QnpaWFIwYVc1bmN5NXBkR1Z0YzA5d2RHbHZibk11YUdsbmFHeHBaMmgwU1hSbGJVTnpjeWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoNElENGdaV3hsYldWdWRFSnZkVzVrYVc1bkxteGxablFnSmlZZ2VDQThJR1ZzWlcxbGJuUkNiM1Z1WkdsdVp5NXlhV2RvZENBbUpseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIa2dQaUJsYkdWdFpXNTBRbTkxYm1ScGJtY3VkRzl3SUNZbUlIa2dQQ0JsYkdWdFpXNTBRbTkxYm1ScGJtY3VZbTkwZEc5dEtTQjdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnZabVp6WlhSVWIzQWdQU0I1SUMwZ1pXeGxiV1Z1ZEVKdmRXNWthVzVuTG5SdmNEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCeWIzZERiM1Z1ZENBOUlDaE5ZWFJvTG1ac2IyOXlLRzltWm5ObGRGUnZjQ0F2SUhKdmQwaGxhV2RvZENrZ0xTQXhLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjBiM0FnUFNCTllYUm9MbTFwYmloY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUV0YwYUM1dFlYZ29NQ3dnY205M1EyOTFiblFnS2lCeWIzZElaV2xuYUhRcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTnNhV1Z1ZEVobGFXZG9kQ0F0SUdobGFXZG9kRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J2Wm1aelpYUkpiazFwYm5WMFpYTWdQU0EyTUNBdklITmxkSFJwYm1kekxuSnZkM05RWlhKSWIzVnlJQ29nS0hSdmNDQXZJSEp2ZDBobGFXZG9kQ2s3SUM4dklEdzhQVDBnUmtsWVRVVWdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2FXNTBaWEoyWVd3Z1BTQnpaWFIwYVc1bmN5NWtZWFJoV3lSMGFHbHpMbVJoZEdFb0oyTnZiSFZ0YmljcFhTNTNiM0pyYVc1blZHbHRaVWx1ZEdWeWRtRnNjMXNrZEdocGN5NWtZWFJoS0NkcGRHVnRMV2x1WkdWNEp5bGRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHMWhkR05vVW1WemRXeDBJRDBnYzJWMGRHbHVaM011YVhSbGJYTlBjSFJwYjI1ekxtMWhkR05vUm5WdVl5aHBkR1Z0TENCcGJuUmxjblpoYkN3Z2IyWm1jMlYwU1c1TmFXNTFkR1Z6S1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUmxiQzVqYzNNb2V5QjBiM0E2SUhSdmNDQjlLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdVkzTnpLQ2RpWVdOclozSnZkVzVrTFdOdmJHOXlKeXdnYldGMFkyaFNaWE4xYkhRdVkyOXNiM0lwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNW9aV2xuYUhRb2FHVnBaMmgwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVjMmh2ZHlncE8xeHVYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrWld3dVpHRjBZU2duYldGMFkyZ25MQ0FyYldGMFkyaFNaWE4xYkhRdWJXRjBZMmdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtaV3d1WkdGMFlTZ25iV0YwWTJnbkxDQXdLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrWld3dWFHbGtaU2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0I5TzF4dVhHNGdJQ0FnWTI5dWMzUWdiVzkxYzJWRWIzZHVUMjVEWVhKa0lEMGdLR1YyWlc1MElDOHFPaUJOYjNWelpVVjJaVzUwSUNvdklDa2dQVDRnZTF4dUlDQWdJQ0FnSUNCcFppQW9aWFpsYm5RdWQyaHBZMmdnSVQwOUlERXBJSHNnY21WMGRYSnVPeUI5WEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnSkhOclpXUjFiR1Z5VjNKaGNIQmxjaUE5SUNRb1lDNGtlM05sZEhScGJtZHpMbk5yWldSMWJHVnlWM0poY0hCbGNrTnpjME5zWVhOemZXQXBPMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQWtZMkZ5WkNBOUlDUW9aWFpsYm5RdVkzVnljbVZ1ZEZSaGNtZGxkQ2s3WEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnSkcxdmRtbHVaME5oY21RZ1BWeHVJQ0FnSUNBZ0lDQWdJQ0FnSkdOaGNtUXVZMnh2Ym1Vb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnTG1SaGRHRW9KMmx1WkdWNEp5d2dKR05oY21RdVpHRjBZU2duYVc1a1pYZ25LU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDNWhaR1JEYkdGemN5aGdKSHR6WlhSMGFXNW5jeTVwZEdWdGMwOXdkR2x2Ym5NdWFYUmxiVU5oY21SRGMzTkRiR0Z6YzMwdGJXOTJhVzVuWUNsY2JpQWdJQ0FnSUNBZ0lDQWdJQzV5WlcxdmRtVkRiR0Z6Y3loZ0pIdHpaWFIwYVc1bmN5NXBkR1Z0YzA5d2RHbHZibk11YVhSbGJVTmhjbVJEYzNORGJHRnpjMzB0Y0dsdWJtVmtZQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDNTNhV1IwYUNna1kyRnlaQzUzYVdSMGFDZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0xtRndjR1Z1WkZSdktDUnphMlZrZFd4bGNsZHlZWEJ3WlhJcE8xeHVYRzRnSUNBZ0lDQWdJQzh2ZG1GeUlHSnZkVzVqWlNBOUlDUmpZWEprV3pCZExtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwTzF4dUlDQWdJQ0FnSUNBdkx5Qm1hWGh0WlNCZVhsNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2IyWm1jMlYwV0NBOUlHVjJaVzUwTG5CaFoyVllJQzBnWlhabGJuUXViMlptYzJWMFdDeGNiaUFnSUNBZ0lDQWdJQ0FnSUc5bVpuTmxkRmtnUFNCbGRtVnVkQzV3WVdkbFdTQXRJR1YyWlc1MExtOW1abk5sZEZrN1hHNWNiaUFnSUNBZ0lDQWdKRzF2ZG1sdVowTmhjbVF1WTNOektIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSdmNEb2diMlptYzJWMFdTQXJJQ2R3ZUNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWldaME9pQnZabVp6WlhSWUlDc2dKM0I0SjF4dUlDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0J2Y0dWeVlYUnBiMjRnUFNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FrWTJGeVpDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNSdGIzWnBibWREWVhKa0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnYjJabWMyVjBXRG9nWlhabGJuUXViMlptYzJWMFdDeGNiaUFnSUNBZ0lDQWdJQ0FnSUc5bVpuTmxkRms2SUdWMlpXNTBMbTltWm5ObGRGbGNiaUFnSUNBZ0lDQWdmVHRjYmx4dUlDQWdJQ0FnSUNBa1kyRnlaQzVvYVdSbEtDazdYRzVjYmlBZ0lDQWdJQ0FnSkc5M2JtVnlSRzlqZFcxbGJuUXViMjRvSjIxdmRYTmxiVzkyWlNjc0lHMXZkWE5sVFc5MlpTazdYRzRnSUNBZ0lDQWdJQ1J2ZDI1bGNrUnZZM1Z0Wlc1MExtOXVLQ2R0YjNWelpYVndKeXdnYlc5MWMyVlZjQ2s3WEc1Y2JpQWdJQ0FnSUNBZ1pYWmxiblF1Y0hKbGRtVnVkRVJsWm1GMWJIUW9LVHRjYmlBZ0lDQjlPMXh1WEc0Z0lDQWdKSE5yWldSMWJHVnlTWFJsYlhORmJDNW1hVzVrS0NjdUp5QXJJSE5sZEhScGJtZHpMbWwwWlcxelQzQjBhVzl1Y3k1cGRHVnRRMkZ5WkVOemMwTnNZWE56S1M1dmJpZ25iVzkxYzJWa2IzZHVKeXdnYlc5MWMyVkViM2R1VDI1RFlYSmtLVHRjYm4xY2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ2NHOXdkV3hoZEdWVGEyVmtkV3hsY2tsMFpXMXpPeUlzSW1OdmJuTjBJR1JsWm1GMWJIUlRaWFIwYVc1bmN5QTlJSHRjYmlBZ0lDQXZMeUJFWVhSaElHRjBkSEpwWW5WMFpYTmNiaUFnSUNCb1pXRmtaWEp6T2lCdWRXeHNMQ0FnTHk4Z2MzUnlhVzVuVzEwZ0xTQkJjbkpoZVNCdlppQmpiMngxYlc0Z2FHVmhaR1Z5YzF4dUlDQWdJSFJoYzJ0ek9pQmJYU3dnSUNBZ0lDQXZMeUJVWVhOclcxMGdMU0JCY25KaGVTQnZaaUIwWVhOcmN5NGdVbVZ4ZFdseVpXUWdabWxsYkdSek9pQmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2FXUTZJRzUxYldKbGNpd2djM1JoY25SVWFXMWxPaUJ1ZFcxaVpYSXNJR1IxY21GMGFXOXVPaUJ1ZFcxaVpYSXNJR052YkhWdGJqb2diblZ0WW1WeVhHNWNiaUFnSUNCdWIzUkJiR3h2WTJGMFpXUk1ZV0psYkRvZ0owNXZkQ0JoYkd4dlkyRjBaV1FuTEZ4dVhHNGdJQ0FnTHk4Z1EyRnlaQ0IwWlcxd2JHRjBaU0F0SUVsdWJtVnlJR052Ym5SbGJuUWdiMllnZEdGemF5QmpZWEprTGlCY2JpQWdJQ0F2THlCWmIzVW5jbVVnWVdKc1pTQjBieUIxYzJVZ0pIdHJaWGw5SUdsdWMybGtaU0IwWlcxd2JHRjBaU3dnZDJobGNtVWdhMlY1SUdseklHRnVlU0J3Y205d1pYSjBlU0JtY205dElIUmhjMnN1WEc0Z0lDQWdZMkZ5WkZSbGJYQnNZWFJsT2lBblBHUnBkajRrZTJsa2ZUd3ZaR2wyUGljc1hHNWNiaUFnSUNBdkx5QlBia05zYVdOcklHVjJaVzUwSUdoaGJtUnNaWEpjYmlBZ0lDQnZia05zYVdOck9pQm1kVzVqZEdsdmJpQW9aU3dnZEdGemF5a2dleUI5TEZ4dVhHNGdJQ0FnTHk4Z1EzTnpJR05zWVhOelpYTmNiaUFnSUNCemEyVmtkV3hsY2xkeVlYQndaWEpEYzNORGJHRnpjem9nSjNOclpXUjFiR1Z5TFhkeVlYQndaWEluTEZ4dUlDQWdJR052Ym5SaGFXNWxja056YzBOc1lYTnpPaUFuYzJ0bFpIVnNaWEl0WTI5dWRHRnBibVZ5Snl4Y2JpQWdJQ0JvWldGa1pYSkRiMjUwWVdsdVpYSkRjM05EYkdGemN6b2dKM05yWldSMWJHVnlMV2hsWVdSbGNuTW5MRnh1SUNBZ0lITmphR1ZrZFd4bGNrTnZiblJoYVc1bGNrTnpjME5zWVhOek9pQW5jMnRsWkhWc1pYSXRiV0ZwYmljc1hHNGdJQ0FnZEdGemExQnNZV05sYUc5c1pHVnlRM056UTJ4aGMzTTZJQ2R6YTJWa2RXeGxjaTEwWVhOckxYQnNZV05sYUc5c1pHVnlKeXhjYmlBZ0lDQjNiM0pyYVc1blNXNTBaWEoyWVd4UWJHRmpaV2h2YkdSbGNrTnpjME5zWVhOek9pQW5jMnRsWkhWc1pYSXRhVzUwWlhKMllXd3RjR3hoWTJWb2IyeGtaWEluTEZ4dUlDQWdJR05sYkd4RGMzTkRiR0Z6Y3pvZ0ozTnJaV1IxYkdWeUxXTmxiR3duTEZ4dUlDQWdJSEpsYzJsNllXSnNaVWhoYm1Sc1pYSkRjM05EYkdGemN6b2dKM0psYzJsNllXSnNaUzFvWVc1a2JHVnlKeXhjYmlBZ0lDQnlaWE5wZW1GaWJHVlRiR2xrWlhKRGMzTkRiR0Z6Y3pvZ0ozSmxjMmw2WVdKc1pTMXpiR2xrWlhJbkxGeHVYRzRnSUNBZ2JHbHVaVWhsYVdkb2REb2dNekFzSUNBZ0lDQWdJQ0FnTHk4Z2FHVnBaMmgwSUc5bUlHOXVaU0JzYVc1bElHbHVJR2R5YVdSY2JpQWdJQ0JpYjNKa1pYSlhhV1IwYURvZ01Td2dJQ0FnSUNBZ0lDQXZMeUIzYVdSMGFDQnZaaUJpYjJGeVpDQnZaaUJuY21sa0lHTmxiR3hjYmlBZ0lDQmpiMngxYlc1WGFXUjBhRG9nTWpBd0xGeHVJQ0FnSUcxcGJrTnZiSFZ0YmxkcFpIUm9PaUF4TURBc1hHNWNiaUFnSUNCeWIzZHpVR1Z5U0c5MWNqb2dNaXdnSUNBZ0lDQWdJQ0F2THlCamIzVnVkQ0J2WmlCeWIzZHpJR1p2Y2lCdmJtVWdhRzkxY2x4dVhHNGdJQ0FnWTI5c2RXMXVVbVZ6YVhwbFJXNWhZbXhsWkRvZ2RISjFaU3dnTHk4Z2FYTWdZMjlzZFcxdWN5QnlaWE5wZW1GaWJHVmNibHh1SUNBZ0lHUmxZblZuT2lCMGNuVmxMRnh1WEc0Z0lDQWdhWFJsYlhOUGNIUnBiMjV6T2lCN1hHNGdJQ0FnSUNBZ0lHVnVZV0pzWldRNklHWmhiSE5sTEZ4dUlDQWdJQ0FnSUNCcGRHVnRjME56YzBOc1lYTnpPaUFuYzJ0bFpIVnNaWEl0YVhSbGJYTW5MRnh1SUNBZ0lDQWdJQ0JvYVdkb2JHbG5hSFJKZEdWdFEzTnpPaUFuYzJrdGFHbG5hR3hwWjJoMExXbDBaVzBuTEZ4dUlDQWdJQ0FnSUNCamIyNTBZV2x1WlhKVFpXeGxZM1J2Y2pvZ1hDSWpjMnRsWkhWc1pYSXRhWFJsYlhOY0lpeGNiaUFnSUNBZ0lDQWdhWFJsYlVOaGNtUkRjM05EYkdGemN6b2dKM05wTFdOaGNtUW5MRnh1SUNBZ0lDQWdJQ0JwZEdWdFEyRnlaRlJsYlhCc1lYUmxPaUFuUEdScGRqNGtlMlIxY21GMGFXOXVmVHd2WkdsMlBpY3NYRzRnSUNBZ0lDQWdJR2wwWlcxek9pQmJYU3hjYmlBZ0lDQWdJQ0FnZEdsMGJHVTZJQ2RKZEdWdGN5Y3NYRzRnSUNBZ0lDQWdJRzFoZEdOb1JuVnVZem9nS0NrZ1BUNGdleUJ5WlhSMWNtNGdleUJ0WVhSamFEb2dkSEoxWlNCOUlIMWNiaUFnSUNCOVhHNTlPMXh1WEc1bGVIQnZjblFnZXlCa1pXWmhkV3gwVTJWMGRHbHVaM01nZlRzaUxDSnBiWEJ2Y25RZ2V5QmtaV1poZFd4MFUyVjBkR2x1WjNNZ2ZTQm1jbTl0SUNjdUwzTmxkSFJwYm1kekp6dGNibWx0Y0c5eWRDQndiM0IxYkdGMFpWTnJaV1IxYkdWeVNYUmxiWE1nWm5KdmJTQW5MaTlwZEdWdGN5YzdYRzVwYlhCdmNuUWdleUJqYjIxd2FXeGxWR1Z0Y0d4aGRHVWdmU0JtY205dElDY3VMM1JsYlhCc1lYUmxKenRjYmx4dVkyOXVjM1FnWkdsMklEMGdLR056YzBOc1lYTnpLU0E5UGlBa0tDYzhaR2wyUGp3dlpHbDJQaWNwTG1Ga1pFTnNZWE56S0dOemMwTnNZWE56S1R0Y2JseHVZMnhoYzNNZ1UydGxaSFZzWlhJZ2UxeHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtDUmpiMjUwWVdsdVpYSXNJRzl3ZEdsdmJuTXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXpaWFIwYVc1bmN5QTlJQ1F1WlhoMFpXNWtLSFJ5ZFdVc0lHUmxabUYxYkhSVFpYUjBhVzVuY3l3Z2IzQjBhVzl1Y3lrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11SkdOdmJuUmhhVzVsY2lBOUlDUmpiMjUwWVdsdVpYSTdYRzRnSUNBZ0lDQWdJSFJvYVhNdUpHOTNibVZ5Ukc5amRXMWxiblFnUFNBa0tDUmpiMjUwWVdsdVpYSmJNRjB1YjNkdVpYSkViMk4xYldWdWRDazdYRzRnSUNBZ0lDQWdJSFJvYVhNdUpHaGxZV1JsY2tOdmJuUmhhVzVsY2lBOUlHNTFiR3c3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVKSE5qYUdWa2RXeGxSV3dnUFNCdWRXeHNYRzRnSUNBZ0lDQWdJSFJvYVhNdWIzQmxjbUYwYVc5dUlEMGdiblZzYkR0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOcGVtVkJiR3hEYjJ4MWJXNXpJRDBnZEhKMVpUdGNibHh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV6WlhSMGFXNW5jeTVrWldKMVp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1MGFXMWxLQ2R6YTJWa2RXeGxjaWNwTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1eVpXWnlaWE5vS0NrN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVjMlYwZEdsdVozTXVaR1ZpZFdjcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZEdsdFpVVnVaQ2duYzJ0bFpIVnNaWEluS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUhObGRGSnZkM05RWlhKSWIzVnlLSEp2ZDNOUVpYSkliM1Z5S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YzJWMGRHbHVaM011Y205M2MxQmxja2h2ZFhJZ1BTQnliM2R6VUdWeVNHOTFjanRjYmlBZ0lDQWdJQ0FnZEdocGN5NXlaV1p5WlhOb0tDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2MyVjBVbVZ6YVhwbFFXeHNRMjlzZFcxdWN5aHlaWE5wZW1WQmJHeERiMngxYlc1ektTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWNtVnphWHBsUVd4c1EyOXNkVzF1Y3lBOUlISmxjMmw2WlVGc2JFTnZiSFZ0Ym5NN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WbWNtVnphQ2dwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV3YjNCMWJHRjBaU2dwTzF4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1elpYUjBhVzVuY3k1cGRHVnRjMDl3ZEdsdmJuTXVaVzVoWW14bFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXdkV3hoZEdWVGEyVmtkV3hsY2tsMFpXMXpLSFJvYVhNdWMyVjBkR2x1WjNNcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NHOXdkV3hoZEdVb0tTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdUpHTnZiblJoYVc1bGNpNWxiWEIwZVNncE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TGlSamIyNTBZV2x1WlhJdVlXUmtRMnhoYzNNb2RHaHBjeTV6WlhSMGFXNW5jeTVqYjI1MFlXbHVaWEpEYzNORGJHRnpjeWs3WEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYUdWaFpHVnljeUE5SUhSb2FYTXVjMlYwZEdsdVozTXVhR1ZoWkdWeWN5QS9YRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEhScGJtZHpMbWhsWVdSbGNuTWdPbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSMGFXNW5jeTVrWVhSaExtMWhjQ2gwYUdsekxuTmxkSFJwYm1kekxtZGxkRWhsWVdSbGNpazdYRzVjYmlBZ0lDQWdJQ0FnTHk4Z1FXUmtJR2hsWVdSbGNuTmNiaUFnSUNBZ0lDQWdkR2hwY3k0a2FHVmhaR1Z5UTI5dWRHRnBibVZ5SUQwZ1pHbDJLSFJvYVhNdWMyVjBkR2x1WjNNdWFHVmhaR1Z5UTI5dWRHRnBibVZ5UTNOelEyeGhjM01wTzF4dUlDQWdJQ0FnSUNCb1pXRmtaWEp6TG1admNrVmhZMmdvS0dWc1pXMWxiblFwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGRpZ3BMblJsZUhRb1pXeGxiV1Z1ZENsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdVlYQndaVzVrVkc4b2RHaHBjeTRrYUdWaFpHVnlRMjl1ZEdGcGJtVnlLVHRjYmlBZ0lDQWdJQ0FnZlN3Z2RHaHBjeWs3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVKR052Ym5SaGFXNWxjaTVoY0hCbGJtUW9kR2hwY3k0a2FHVmhaR1Z5UTI5dWRHRnBibVZ5S1R0Y2JseHVJQ0FnSUNBZ0lDQXZMeUJCWkdRZ2MyTm9aV1IxYkdWeVhHNGdJQ0FnSUNBZ0lIUm9hWE11SkhOamFHVmtkV3hsUld3Z1BTQmthWFlvZEdocGN5NXpaWFIwYVc1bmN5NXpZMmhsWkhWc1pYSkRiMjUwWVdsdVpYSkRjM05EYkdGemN5azdYRzRnSUNBZ0lDQWdJR052Ym5OMElITmphR1ZrZFd4bFZHbHRaV3hwYm1WRmJDQTlJR1JwZGloMGFHbHpMbk5sZEhScGJtZHpMbk5qYUdWa2RXeGxja052Ym5SaGFXNWxja056YzBOc1lYTnpJQ3NnSnkxMGFXMWxiR2x1WlNjcE8xeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCelkyaGxaSFZzWlVKdlpIbEZiQ0E5SUdScGRpaDBhR2x6TG5ObGRIUnBibWR6TG5OamFHVmtkV3hsY2tOdmJuUmhhVzVsY2tOemMwTnNZWE56SUNzZ0p5MWliMlI1SnlrN1hHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1ozSnBaRU52YkhWdGJrVnNaVzFsYm5RZ1BTQmthWFlvS1R0Y2JseHVJQ0FnSUNBZ0lDQm1iM0lnS0d4bGRDQnBJRDBnTURzZ2FTQThJREkwT3lCcEt5c3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJRkJ2Y0hWc1lYUmxJSFJwYldWc2FXNWxYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLR3hsZENCcUlEMGdNRHNnYWlBOElIUm9hWE11YzJWMGRHbHVaM011Y205M2MxQmxja2h2ZFhJN0lHb3JLeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBhVzFsYkdsdVpVTmxiR3dnUFNCa2FYWW9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdWFHVnBaMmgwS0hSb2FYTXVjMlYwZEdsdVozTXViR2x1WlVobGFXZG9kQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtRmtaRU5zWVhOektHb2dQVDBnZEdocGN5NXpaWFIwYVc1bmN5NXliM2R6VUdWeVNHOTFjaUF0SURFZ1B5QmNJbXhoYzNSY0lpQTZJRndpWENJcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dvZ1BUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhVzFsYkdsdVpVTmxiR3dnUFNCMGFXMWxiR2x1WlVObGJHeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNWpjM01vWENKc2FXNWxMV2hsYVdkb2RGd2lMQ0IwYUdsekxuTmxkSFJwYm1kekxteHBibVZJWldsbmFIUWdLeUFuY0hnbktWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xuUmxlSFFvYWlBOVBTQXdJRDhnZEdocGN5NTBiMVJwYldWVGRISnBibWNvYVNrZ09pQmNJbHdpS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHbHRaV3hwYm1WRFpXeHNMbUZ3Y0dWdVpGUnZLSE5qYUdWa2RXeGxWR2x0Wld4cGJtVkZiQ2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYWW9kR2hwY3k1elpYUjBhVzVuY3k1alpXeHNRM056UTJ4aGMzTXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1b1pXbG5hSFFvZEdocGN5NXpaWFIwYVc1bmN5NXNhVzVsU0dWcFoyaDBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdVlXUmtRMnhoYzNNb2FpQTlQU0IwYUdsekxuTmxkSFJwYm1kekxuSnZkM05RWlhKSWIzVnlJQzBnTVNBL0lGd2liR0Z6ZEZ3aUlEb2dYQ0pjSWlsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMbUZ3Y0dWdVpGUnZLR2R5YVdSRGIyeDFiVzVGYkdWdFpXNTBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUM4dklGQnZjSFZzWVhSbElHZHlhV1JjYmlBZ0lDQWdJQ0FnWm05eUlDaHNaWFFnYWlBOUlEQTdJR29nUENCb1pXRmtaWEp6TG14bGJtZDBhRHNnYWlzcktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JsYkNBOUlHZHlhV1JEYjJ4MWJXNUZiR1Z0Wlc1MExtTnNiMjVsS0NrN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklHWnBlRzFsSUZ0M2IzSnJhVzVuVkdsdFpVbHVkR1Z5ZG1Gc2N5QnRkWE4wSUc1dmRDQjFjMlVnYVc1a1pYaGRYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0IzYjNKcmFXNW5TVzUwWlhKMllXeHpVR3hoWTJWb2IyeGtaWElnUFNCa2FYWW9kR2hwY3k1elpYUjBhVzVuY3k1M2IzSnJhVzVuU1c1MFpYSjJZV3hRYkdGalpXaHZiR1JsY2tOemMwTnNZWE56S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHbHVkR1Z5ZG1Gc2N5QTlJSFJvYVhNdWMyVjBkR2x1WjNNdVpHRjBZVnRxWFM1M2IzSnJhVzVuVkdsdFpVbHVkR1Z5ZG1Gc2N6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZWEJ3Wlc1a1FYWmhhV3hoWW14bFNXNTBaWEoyWVd3b2QyOXlhMmx1WjBsdWRHVnlkbUZzYzFCc1lXTmxhRzlzWkdWeUxDQnBiblJsY25aaGJITXNJR29wTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JsYkM1d2NtVndaVzVrS0hkdmNtdHBibWRKYm5SbGNuWmhiSE5RYkdGalpXaHZiR1JsY2lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JsYkM1aGNIQmxibVJVYnloelkyaGxaSFZzWlVKdlpIbEZiQ2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRYQmtZWFJsUTI5c2RXMXVWMmxrZEdnb2Fpd2dkR2hwY3k1elpYUjBhVzVuY3k1amIyeDFiVzVYYVdSMGFDazdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMaVJ6WTJobFpIVnNaVVZzTG1Gd2NHVnVaQ2h6WTJobFpIVnNaVlJwYldWc2FXNWxSV3dwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMaVJ6WTJobFpIVnNaVVZzTG1Gd2NHVnVaQ2h6WTJobFpIVnNaVUp2WkhsRmJDazdYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NGtZMjl1ZEdGcGJtVnlMbUZ3Y0dWdVpDaDBhR2x6TGlSelkyaGxaSFZzWlVWc0tUdGNibHh1SUNBZ0lDQWdJQ0F2THlCVFpYUWdaR1ZtWVhWc2RDQjNhV1IwYUNCbWIzSWdZMjlzZFcxdWMxeHVJQ0FnSUNBZ0lDQm1iM0lnS0d4bGRDQnFJRDBnTURzZ2FpQThJR2hsWVdSbGNuTXViR1Z1WjNSb095QnFLeXNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRYQmtZWFJsUTI5c2RXMXVWMmxrZEdnb2Fpd2dkR2hwY3k1elpYUjBhVzVuY3k1amIyeDFiVzVYYVdSMGFDazdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBdkx5QkRiMjVtYVdkMWNtVWdjbVZ6YVhwcGJtZGNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVjMlYwZEdsdVozTXVZMjlzZFcxdVVtVnphWHBsUlc1aFlteGxaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amIyNW1hV2QxY21WU1pYTnBlbWx1WnlncE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVabWxuZFhKbFVtVnphWHBwYm1jb0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElITnJaV1IxYkdWeVJXeFNaWE5wZW1GaWJHVklZVzVrYkdWeUlEMGdaR2wyS0hSb2FYTXVjMlYwZEdsdVozTXVjbVZ6YVhwaFlteGxTR0Z1Wkd4bGNrTnpjME5zWVhOektUdGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxpUmpiMjUwWVdsdVpYSXVjSEpsY0dWdVpDaHphMlZrZFd4bGNrVnNVbVZ6YVhwaFlteGxTR0Z1Wkd4bGNpazdYRzVjYmlBZ0lDQWdJQ0FnYzJ0bFpIVnNaWEpGYkZKbGMybDZZV0pzWlVoaGJtUnNaWEl1ZDJsa2RHZ29kR2hwY3k0a1kyOXVkR0ZwYm1WeUxuZHBaSFJvS0NrcE8xeHVYRzRnSUNBZ0lDQWdJR052Ym5OMElISmxjMmw2WVdKc1pWTnNhV1JsY2tobGFXZG9kQ0E5SUhSb2FYTXVKSE5qYUdWa2RXeGxSV3d1YUdWcFoyaDBLQ2tnS3lCMGFHbHpMaVJvWldGa1pYSkRiMjUwWVdsdVpYSXVhR1ZwWjJoMEtDazdYRzRnSUNBZ0lDQWdJR3hsZENCcGJtUmxlQ0E5SURBN1hHNGdJQ0FnSUNBZ0lIUm9hWE11SkdobFlXUmxja052Ym5SaGFXNWxjaTVtYVc1a0tDZGthWFluS1M1bFlXTm9LQ2hmTENCbGJDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2wyS0hSb2FYTXVjMlYwZEdsdVozTXVjbVZ6YVhwaFlteGxVMnhwWkdWeVEzTnpRMnhoYzNNcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtTnpjeWduYkdWbWRDY3NJR1ZzTG05bVpuTmxkRXhsWm5RZ0t5QmxiQzVqYkdsbGJuUlhhV1IwYUNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdWFHVnBaMmgwS0hKbGMybDZZV0pzWlZOc2FXUmxja2hsYVdkb2RDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVaR0YwWVNnblkyOXNkVzF1TFdsa0p5d2dhVzVrWlhnckt5bGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVZWEJ3Wlc1a1ZHOG9jMnRsWkhWc1pYSkZiRkpsYzJsNllXSnNaVWhoYm1Sc1pYSXBYRzRnSUNBZ0lDQWdJSDBwTzF4dVhHNGdJQ0FnSUNBZ0lITnJaV1IxYkdWeVJXeFNaWE5wZW1GaWJHVklZVzVrYkdWeUxtOXVLQ2R0YjNWelpXUnZkMjRuTENBbkxpY2dLeUIwYUdsekxuTmxkSFJwYm1kekxuSmxjMmw2WVdKc1pWTnNhV1JsY2tOemMwTnNZWE56TENCMGFHbHpMbTl1VUc5cGJuUmxja1J2ZDI0dVltbHVaQ2gwYUdsektTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1lYQndaVzVrUVhaaGFXeGhZbXhsU1c1MFpYSjJZV3dvY0d4aFkyVm9iMnhrWlhJc0lHbHVkR1Z5ZG1Gc2N5d2dZMjlzZFcxdUtTQjdYRzRnSUNBZ0lDQWdJR2x1ZEdWeWRtRnNjeTVtYjNKRllXTm9LQ2hwYm5SbGNuWmhiQ3dnYVc1a1pYZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHbHVibVZ5UTI5dWRHVnVkQ0E5SUdScGRpZ3BMblJsZUhRb2RHaHBjeTV6WlhSMGFXNW5jeTV1YjNSQmJHeHZZMkYwWldSTVlXSmxiQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCMGIzQWdQU0IwYUdsekxtZGxkRU5oY21SVWIzQlFiM05wZEdsdmJpaHBiblJsY25aaGJDNXpkR0Z5ZENrZ0t5QXlPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWkhWeVlYUnBiMjRnUFNCMGFHbHpMbkJoY25ObFZHbHRaU2hwYm5SbGNuWmhiQzVsYm1RcElDMGdkR2hwY3k1d1lYSnpaVlJwYldVb2FXNTBaWEoyWVd3dWMzUmhjblFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2FHVnBaMmgwSUQwZ2RHaHBjeTVuWlhSRFlYSmtTR1ZwWjJoMEtHUjFjbUYwYVc5dUtTQXRJRFU3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElITnJTWFJsYlVocFoyaDBiR2xuYUhSRWFYWWdQU0JrYVhZb0ozTnBMV2hwWjJoc2FXZG9kQzFwZEdWdEp5a3VhR2xrWlNncE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J6YUdsbWRFUnBkaUE5SUdScGRpZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMbUYwZEhJb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEhsc1pUb2dKM1J2Y0RvZ0p5QXJJSFJ2Y0NBcklDZHdlRHNnYUdWcFoyaDBPaUFuSUNzZ2FHVnBaMmgwSUNzZ0ozQjRKMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6YUdsbWRFUnBkbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzVrWVhSaEtDZGpiMngxYlc0bkxDQmpiMngxYlc0cFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtUmhkR0VvSjJsMFpXMHRhVzVrWlhnbkxDQnBibVJsZUNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdVlYQndaVzVrS0dsdWJtVnlRMjl1ZEdWdWRDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVZWEJ3Wlc1a0tITnJTWFJsYlVocFoyaDBiR2xuYUhSRWFYWXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMbUZ3Y0dWdVpGUnZLSEJzWVdObGFHOXNaR1Z5S1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhjSEJsYm1SVVlYTnJjeWhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdsbWRFUnBkaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm5SbGNuWmhiQzV6ZEdGeWRDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRIUnBibWR6TG5SaGMydHpMbVpwYkhSbGNpaDBJRDArSUhRdVkyOXNkVzF1SUQwOUlHTnZiSFZ0YmlrcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1ZFOUVUem9nWGw1ZUlHWnBiSFJsY2lCaWVTQnphR2xtZENCcGJuUmxjblpoYkNCMGIyOWNibHh1SUNBZ0lDQWdJQ0I5TENCMGFHbHpLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaW9nWEc0Z0lDQWdJQ29nUjJWdVpYSmhkR1VnZEdGemF5QmpZWEprYzF4dUlDQWdJQ0FxTDF4dUlDQWdJR0Z3Y0dWdVpGUmhjMnR6S0hCc1lXTmxhRzlzWkdWeUxDQnBiblJsY25aaGJGTjBZWEowTENCMFlYTnJjeWtnZTF4dUlDQWdJQ0FnSUNCMFlYTnJjeTVtYjNKRllXTm9LQ2gwWVhOcktTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZEc5d0lEMGdkR2hwY3k1blpYUkRZWEprVkc5d1VHOXphWFJwYjI0b2RHRnpheTV6ZEdGeWRDd2dhVzUwWlhKMllXeFRkR0Z5ZENrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FHVnBaMmgwSUQwZ2RHaHBjeTVuWlhSRFlYSmtTR1ZwWjJoMEtIUmhjMnN1YVhSbGJTNWtkWEpoZEdsdmJpQXZJRFl3S1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5aWFJKZEdWdFJHbDJLSFJoYzJzdWFYUmxiU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1WVhSMGNpaDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMGVXeGxPaUFuZEc5d09pQW5JQ3NnZEc5d0lDc2dKM0I0T3lCb1pXbG5hSFE2SUNjZ0t5Qm9aV2xuYUhRZ0t5QW5jSGduWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdVlXUmtRMnhoYzNNb1lDUjdkR2hwY3k1elpYUjBhVzVuY3k1cGRHVnRjMDl3ZEdsdmJuTXVhWFJsYlVOaGNtUkRjM05EYkdGemMzMWdLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzVoWkdSRGJHRnpjeWhnSkh0MGFHbHpMbk5sZEhScGJtZHpMbWwwWlcxelQzQjBhVzl1Y3k1cGRHVnRRMkZ5WkVOemMwTnNZWE56ZlMxd2FXNXVaV1JnS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1M2FXUjBhQ2duWVhWMGJ5Y3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMbUZ3Y0dWdVpGUnZLSEJzWVdObGFHOXNaR1Z5S1R0Y2JpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3lrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYjI1UWIybHVkR1Z5VlhBb1pYWmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ2JHVjBJRzl3SUQwZ2RHaHBjeTV2Y0dWeVlYUnBiMjQ3WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hkR2hwY3k1dmNHVnlZWFJwYjI0cElIc2djbVYwZFhKdU95QjlYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NGtiM2R1WlhKRWIyTjFiV1Z1ZEM1dlptWW9KMjF2ZFhObGRYQW5LVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NGtiM2R1WlhKRWIyTjFiV1Z1ZEM1dlptWW9KMjF2ZFhObGJXOTJaU2NwTzF4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11YjNCbGNtRjBhVzl1SUQwZ2JuVnNiRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnZibEJ2YVc1MFpYSk5iM1psS0dWMlpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUd4bGRDQnZjQ0E5SUhSb2FYTXViM0JsY21GMGFXOXVPMXh1SUNBZ0lDQWdJQ0JwWmlBb0lYUm9hWE11YjNCbGNtRjBhVzl1S1NCN0lISmxkSFZ5YmpzZ2ZWeHVYRzRnSUNBZ0lDQWdJQzh2SUVSbGRHVnliV2x1WlNCMGFHVWdaR1ZzZEdFZ1kyaGhibWRsSUdKbGRIZGxaVzRnYzNSaGNuUWdZVzVrSUc1bGR5QnRiM1Z6WlNCd2IzTnBkR2x2Yml3Z1lYTWdZU0J3WlhKalpXNTBZV2RsSUc5bUlIUm9aU0IwWVdKc1pTQjNhV1IwYUZ4dUlDQWdJQ0FnSUNCc1pYUWdaR2xtWm1WeVpXNWpaU0E5SUNobGRtVnVkQzV3WVdkbFdDQXRJRzl3TG5OMFlYSjBXQ2s3SUM4dklDOGdkR2hwY3k0a2MyTm9aV1IxYkdWRmJDNTNhV1IwYUNncElDb2dNVEF3TzF4dUlDQWdJQ0FnSUNCcFppQW9aR2xtWm1WeVpXNWpaU0E5UFQwZ01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdiR1YwSUdOdmJIVnRiazUxYldKbGNpQTlJRzl3TG1OdmJIVnRiazUxYldKbGNqdGNiaUFnSUNBZ0lDQWdiR1YwSUhkcFpIUm9JRDBnYjNBdWQybGtkR2dnS3lCa2FXWm1aWEpsYm1ObE8xeHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXlaWE5wZW1WQmJHeERiMngxYlc1ektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLR3hsZENCcElEMGdNRHNnYVNBOElIUm9hWE11YzJWMGRHbHVaM011WkdGMFlTNXNaVzVuZEdnN0lHa3JLeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkWEJrWVhSbFEyOXNkVzF1VjJsa2RHZ29hU3dnZDJsa2RHZ3VkRzlHYVhobFpDZ3lLU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMblZ3WkdGMFpVTnZiSFZ0YmxkcFpIUm9LR052YkhWdGJrNTFiV0psY2l3Z2QybGtkR2d1ZEc5R2FYaGxaQ2d5S1NrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCdmJsQnZhVzUwWlhKRWIzZHVLR1YyWlc1MEtTQjdYRzRnSUNBZ0lDQWdJQzh2SUU5dWJIa2dZWEJ3YkdsbGN5QjBieUJzWldaMExXTnNhV05ySUdSeVlXZG5hVzVuWEc0Z0lDQWdJQ0FnSUdsbUlDaGxkbVZ1ZEM1M2FHbGphQ0FoUFQwZ01Ta2dleUJ5WlhSMWNtNDdJSDFjYmx4dUlDQWdJQ0FnSUNBdkx5QkpaaUJoSUhCeVpYWnBiM1Z6SUhSb2FYTXViM0JsY21GMGFXOXVJR2x6SUdSbFptbHVaV1FzSUhkbElHMXBjM05sWkNCMGFHVWdiR0Z6ZENCdGIzVnpaWFZ3TGx4dUlDQWdJQ0FnSUNBdkx5QlFjbTlpWVdKc2VTQm5iMkppYkdWa0lIVndJR0o1SUhWelpYSWdiVzkxYzJsdVp5QnZkWFFnZEdobElIZHBibVJ2ZHlCMGFHVnVJSEpsYkdWaGMybHVaeTVjYmlBZ0lDQWdJQ0FnTHk4Z1YyVW5iR3dnYzJsdGRXeGhkR1VnWVNCd2IybHVkR1Z5ZFhBZ2FHVnlaU0J3Y21sdmNpQjBieUJwZEZ4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1dmNHVnlZWFJwYjI0cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViMjVRYjJsdWRHVnlWWEFvWlhabGJuUXBPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2JHVjBJQ1JqZFhKeVpXNTBSM0pwY0NBOUlDUW9aWFpsYm5RdVkzVnljbVZ1ZEZSaGNtZGxkQ2s3WEc0Z0lDQWdJQ0FnSUd4bGRDQmpiMngxYlc1T2RXMWlaWElnUFNBa1kzVnljbVZ1ZEVkeWFYQXVaR0YwWVNnblkyOXNkVzF1TFdsa0p5azdYRzVjYmlBZ0lDQWdJQ0FnYkdWMElHZHlhWEJKYm1SbGVDQTlJQ1JqZFhKeVpXNTBSM0pwY0M1cGJtUmxlQ2dwTzF4dUlDQWdJQ0FnSUNCc1pYUWdKR3hsWm5SRGIyeDFiVzRnUFNCMGFHbHpMaVJvWldGa1pYSkRiMjUwWVdsdVpYSXVabWx1WkNnblpHbDJKeWt1WlhFb1ozSnBjRWx1WkdWNEtUdGNibHh1SUNBZ0lDQWdJQ0JzWlhRZ2JHVm1kRmRwWkhSb0lEMGdKR3hsWm5SRGIyeDFiVzViTUYwdVkyeHBaVzUwVjJsa2RHZzdYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NXZjR1Z5WVhScGIyNGdQU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMngxYlc1T2RXMWlaWElzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkR0Z5ZEZnNklHVjJaVzUwTG5CaFoyVllMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUd4bFpuUlhhV1IwYUZ4dUlDQWdJQ0FnSUNCOU8xeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdUpHOTNibVZ5Ukc5amRXMWxiblF1YjI0b0oyMXZkWE5sYlc5MlpTY3NJSFJvYVhNdWIyNVFiMmx1ZEdWeVRXOTJaUzVpYVc1a0tIUm9hWE1wS1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTRrYjNkdVpYSkViMk4xYldWdWRDNXZiaWduYlc5MWMyVjFjQ2NzSUhSb2FYTXViMjVRYjJsdWRHVnlWWEF1WW1sdVpDaDBhR2x6S1NrN1hHNWNiaUFnSUNBZ0lDQWdaWFpsYm5RdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0IxY0dSaGRHVkRiMngxYlc1WGFXUjBhQ2hqYjJ4MWJXNU9kVzFpWlhJc0lIZHBaSFJvS1NCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvSUQwZ1RXRjBhQzV0WVhnb2QybGtkR2dzSUhSb2FYTXVjMlYwZEdsdVozTXViV2x1UTI5c2RXMXVWMmxrZEdncE8xeHVJQ0FnSUNBZ0lDQWtLQ2N1SnlBcklIUm9hWE11YzJWMGRHbHVaM011YUdWaFpHVnlRMjl1ZEdGcGJtVnlRM056UTJ4aGMzTWdLeUFuSUQ0Z1pHbDJPbVZ4S0NjZ0t5QmpiMngxYlc1T2RXMWlaWElnS3lBbktTY3BYRzRnSUNBZ0lDQWdJQ0FnSUNBdVkzTnpLQ2RtYkdWNExXSmhjMmx6Snl3Z2QybGtkR2dnS3lBbmNIZ25LVHRjYmx4dUlDQWdJQ0FnSUNCc1pYUWdZMjlzZFcxdUlEMGdKQ2duTGljZ0t5QjBhR2x6TG5ObGRIUnBibWR6TG5OamFHVmtkV3hsY2tOdmJuUmhhVzVsY2tOemMwTnNZWE56SUNzZ0p5MWliMlI1SUQ0Z1pHbDJPbVZ4S0NjZ0t5QmpiMngxYlc1T2RXMWlaWElnS3lBbktTQStJQzRuSUNzZ2RHaHBjeTV6WlhSMGFXNW5jeTVqWld4c1EzTnpRMnhoYzNNcE8xeHVJQ0FnSUNBZ0lDQjJZWElnWkdsbVppQTlJR052YkhWdGJpNTNhV1IwYUNncElDMGdkMmxrZEdnN1hHNGdJQ0FnSUNBZ0lHTnZiSFZ0Ymk1M2FXUjBhQ2gzYVdSMGFDazdYRzVjYmlBZ0lDQWdJQ0FnSkNnbkxpY2dLeUIwYUdsekxuTmxkSFJwYm1kekxuSmxjMmw2WVdKc1pVaGhibVJzWlhKRGMzTkRiR0Z6Y3lBcklDY2dQaUJrYVhZbktTNWxZV05vS0NocGJtUmxlQ3dnWld3cElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwYm1SbGVDQStQU0JqYjJ4MWJXNU9kVzFpWlhJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnSkdWc0lEMGdKQ2hsYkNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3hsWm5RZ1BTQndZWEp6WlVsdWRDZ2taV3d1WTNOektDZHNaV1owSnlrdWNtVndiR0ZqWlNnbmNIZ25MQ0FuSnlrcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUmxiQzVqYzNNb0oyeGxablFuTENCc1pXWjBJQzBnWkdsbVppazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHZGxkRWwwWlcxRWFYWW9hWFJsYlNrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENBa1pHbDJJRDBnWkdsMktIUm9hWE11YzJWMGRHbHVaM011YVhSbGJYTlBjSFJwYjI1ekxtbDBaVzFEWVhKa1EzTnpRMnhoYzNNcE8xeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCMFpXMXdiR0YwWlNBOUlHTnZiWEJwYkdWVVpXMXdiR0YwWlNoMGFHbHpMbk5sZEhScGJtZHpMbWwwWlcxelQzQjBhVzl1Y3k1cGRHVnRRMkZ5WkZSbGJYQnNZWFJsTENCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYVcxbE9pQW9hWFJsYlNrZ1BUNGdhWFJsYlM1cGJuUmxjblpoYkNBL0lHQWtlMmwwWlcwdWFXNTBaWEoyWVd3dWMzUmhjblI5SUhSdklDUjdhWFJsYlM1cGJuUmxjblpoYkM1bGJtUjlZQ0E2SUNjblhHNGdJQ0FnSUNBZ0lIMHBPMXh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJrYVhZb0tTNW9kRzFzS0hSbGJYQnNZWFJsS0dsMFpXMHBLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQXFJRU52Ym5abGNuUWdaRzkxWW14bElIWmhiSFZsSUc5bUlHaHZkWEp6SUhSdklIcGxjbTh0Y0hKbGNHOXphWFJsWkNCemRISnBibWNnZDJsMGFDQXpNQ0J2Y2lBd01DQjJZV3gxWlNCdlppQnRhVzUxZEdWelhHNGdJQ0FnS2k5Y2JpQWdJQ0IwYjFScGJXVlRkSEpwYm1jb2RtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNoMllXeDFaU0E4SURFd0lEOGdKekFuSURvZ0p5Y3BJQ3NnVFdGMGFDNWpaV2xzS0haaGJIVmxLU0FySUNoTllYUm9MbU5sYVd3b2RtRnNkV1VwSUQ0Z1RXRjBhQzVtYkc5dmNpaDJZV3gxWlNrZ1B5QW5Pak13SnlBNklDYzZNREFuS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCU1pYUjFjbTRnYUdWcFoyaDBJRzltSUhSaGMyc2dZMkZ5WkNCaVlYTmxaQ0J2YmlCa2RYSmhkR2x2YmlCdlppQjBhR1VnZEdGemExeHVJQ0FnSUNBcUlHUjFjbUYwYVc5dUlDMGdhVzRnYUc5MWNuTmNiaUFnSUNBZ0tpOWNiaUFnSUNCblpYUkRZWEprU0dWcFoyaDBLR1IxY21GMGFXOXVLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR1IxY21GMGFXOXVTVzVOYVc1MWRHVnpJRDBnWkhWeVlYUnBiMjRnS2lBMk1EdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2FHVnBaMmgwVDJaTmFXNTFkR1VnUFNBb2RHaHBjeTV6WlhSMGFXNW5jeTVzYVc1bFNHVnBaMmgwSUNzZ2RHaHBjeTV6WlhSMGFXNW5jeTVpYjNKa1pYSlhhV1IwYUNrZ0tpQjBhR2x6TG5ObGRIUnBibWR6TG5KdmQzTlFaWEpJYjNWeUlDOGdOakE3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xtTmxhV3dvWkhWeVlYUnBiMjVKYmsxcGJuVjBaWE1nS2lCb1pXbG5hSFJQWmsxcGJuVjBaU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nVW1WMGRYSnVJSFJ2Y0NCdlptWnpaWFFnYjJZZ2RHRnpheUJqWVhKa0lHSmhjMlZrSUc5dUlITjBZWEowSUhScGJXVWdiMllnZEdobElIUmhjMnRjYmlBZ0lDQWdLaUJ6ZEdGeWRGUnBiV1VnTFNCcGJpQm9iM1Z5YzF4dUlDQWdJQ0FxTDF4dUlDQWdJR2RsZEVOaGNtUlViM0JRYjNOcGRHbHZiaWh6ZEdGeWRGUnBiV1VzSUc5bVpuTmxkRlJwYldVcElIdGNiaUFnSUNBZ0lDQWdiR1YwSUhOMFlYSjBWR2x0WlVsdWRDQTlJSFJvYVhNdWNHRnljMlZVYVcxbEtITjBZWEowVkdsdFpTazdYRzRnSUNBZ0lDQWdJR2xtSUNodlptWnpaWFJVYVcxbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCemRHRnlkRlJwYldWSmJuUWdMVDBnZEdocGN5NXdZWEp6WlZScGJXVW9iMlptYzJWMFZHbHRaU2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNoMGFHbHpMbk5sZEhScGJtZHpMbXhwYm1WSVpXbG5hSFFnS3lCMGFHbHpMbk5sZEhScGJtZHpMbUp2Y21SbGNsZHBaSFJvS1NBcUlDaHpkR0Z5ZEZScGJXVkpiblFnS2lCMGFHbHpMbk5sZEhScGJtZHpMbkp2ZDNOUVpYSkliM1Z5S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCUVlYSnpaU0IwYVcxbElITjBjbWx1WnlCaGJtUWdjSEpsYzJWdWRDQnBkQ0JwYmlCb2IzVnljeUFvWlhndUlDY3hNem96TUNjZ1BUNGdNVE11TlNsY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZXlwemRISnBibWQ5SUhScGJXVWdMU0IwYVcxbElHbHVJR1p2Y20xaGRDQnNhV3RsSUNjeE16bzFNQ2NzSUNjeE1Ub3dNQ2NzSUNjeE5DZGNiaUFnSUNBZ0tpOWNiaUFnSUNCd1lYSnpaVlJwYldVb2RHbHRaU2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnTDF4Y1pIc3hMREo5WEZ3NlhGeGtleko5THk1MFpYTjBLSFJwYldVcElEOWNiaUFnSUNBZ0lDQWdJQ0FnSUhCaGNuTmxTVzUwS0hScGJXVXVjM0JzYVhRb0p6b25LVnN3WFNrZ0t5QndZWEp6WlVsdWRDaDBhVzFsTG5Od2JHbDBLQ2M2SnlsYk1WMHBJQzhnTmpBZ09seHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGeWMyVkpiblFvZEdsdFpTazdYRzRnSUNBZ2ZWeHVmVnh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JUYTJWa2RXeGxjanNpTENKamIyNXpkQ0JqYjIxd2FXeGxWR1Z0Y0d4aGRHVWdQU0FvZEdWdGNHeGhkR1VzSUdaMWJtTnpLU0E5UGlCcGRHVnRJRDArSUh0Y2JpQWdJQ0JzWlhRZ2NtVnpkV3gwSUQwZ2RHVnRjR3hoZEdVN1hHNGdJQ0FnWTI5dWMzUWdjbVZuUzJWNWN5QTlJQzljWENSY1hIc29YRngzS3lsY1hIMHZaenRjYmlBZ0lDQmpiMjV6ZENCeVpXZEdkVzVqY3lBOUlDOWNYQ1JjWEhzb1hGeDNLeWxjWENoY1hDbGNYSDB2Wnp0Y2JseHVJQ0FnSUd4bGRDQnRZWFJqYUNBOUlERTdYRzRnSUNBZ2QyaHBiR1VnS0hSeWRXVXBJSHRjYmlBZ0lDQWdJQ0FnYldGMFkyZ2dQU0J5WldkTFpYbHpMbVY0WldNb2RHVnRjR3hoZEdVcE8xeHVJQ0FnSUNBZ0lDQnBaaUFvSVcxaGRHTm9LU0JpY21WaGF6dGNibHh1SUNBZ0lDQWdJQ0JzWlhRZ2EyVjVJRDBnYldGMFkyaGJNVjA3WEc0Z0lDQWdJQ0FnSUdsbUlDaHBkR1Z0TG1oaGMwOTNibEJ5YjNCbGNuUjVLR3RsZVNrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGMzVnNkQ0E5SUhKbGMzVnNkQzV5WlhCc1lXTmxLRzFoZEdOb1d6QmRMQ0JwZEdWdFcydGxlVjBwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnZDJocGJHVWdLR1oxYm1OektTQjdYRzRnSUNBZ0lDQWdJRzFoZEdOb0lEMGdjbVZuUm5WdVkzTXVaWGhsWXloMFpXMXdiR0YwWlNrN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doYldGMFkyZ3BJR0p5WldGck8xeHVYRzRnSUNBZ0lDQWdJR3hsZENCclpYa2dQU0J0WVhSamFGc3hYVHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHWjFibU56TG1oaGMwOTNibEJ5YjNCbGNuUjVLR3RsZVNrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGMzVnNkQ0E5SUhKbGMzVnNkQzV5WlhCc1lXTmxLRzFoZEdOb1d6QmRMQ0JtZFc1amMxdHJaWGxkS0dsMFpXMHBLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnlaWE4xYkhRN1hHNTlYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJSHNnWTI5dGNHbHNaVlJsYlhCc1lYUmxJSDA3SWwxOSJ9\n","import Skeduler from './skeduler';\n\n/**\n * Generate scheduler grid with task cards\n * options:\n * - headers: string[] - array of headers\n * - tasks: Task[] - array of tasks\n * - containerCssClass: string - css class of main container\n * - headerContainerCssClass: string - css class of header container\n * - schedulerContainerCssClass: string - css class of scheduler\n * - lineHeight - height of one half-hour cell in grid\n * - borderWidth - width of border of cell in grid\n */\n$.fn.skeduler = function(options) {\n    let $container = $(this);\n    var skeduler = new Skeduler($container, options);\n\n    return skeduler;\n};\n\n$.skeduler = Skeduler;","import Skeduler from './skeduler';\nimport adapter from './adapter';\n\nexport default Skeduler;","import { compileTemplate } from '../template';\n\nconst div = (cssClass) => $('<div></div>').addClass(cssClass);\n\nconst getItemDivs = (settings) => {\n    const $div = div(settings.itemsOptions.itemCardCssClass);\n    const items = settings.itemsOptions.items;\n    const template = compileTemplate(settings.itemsOptions.itemCardTemplate, {\n        time: (item) => item.interval ? `${item.interval.start} to ${item.interval.end}` : ''\n    });\n\n    return items.map((item, index) => $div.clone()\n        .data('index', index)\n        .html(template(item))\n    );\n}\n\nconst populateSkedulerItems = (settings) => {\n    const $skedulerItemsEl = $(settings.itemsOptions.containerSelector)\n        .empty()\n        .addClass(settings.itemsOptions.itemsCssClass);\n    const $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    const $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\n\n    const $headerDiv = div()\n        .html('<h1 class=\"si-header\">' + settings.itemsOptions.title + '</h1>')\n        .appendTo($skedulerItemsEl);\n\n    const $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(el => {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    let operation = null;\n\n    const mouseUp = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard, $card } = operation;\n\n        const $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        if ($siEl.length !== 0 && $siEl.data('match') == 1) {\n            const rowHeight = settings.lineHeight + 1;\n            const index = parseInt($movingCard.data('index'));\n            const item = settings.itemsOptions.items[index];\n            const offsetInMinutes = 60 / settings.rowsPerHour * ($movingCard[0].offsetTop / rowHeight); // <<== FIXME \n            const interval = settings.data[$siEl.parent().data('column')].workingTimeIntervals[$siEl.parent().data('item-index')];\n\n            settings.itemsOptions.onItemWillBeAssigned && settings.itemsOptions.onItemWillBeAssigned({ item, interval, offsetInMinutes });\n\n            $movingCard\n                .detach()\n                .css({ top: $siEl[0].offsetTop, left: 0 })\n                .height($siEl[0].clientHeight)\n                .width('auto')\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n                .appendTo($siEl.parent());\n\n            $movingCard.on('mousedown', mouseDownOnCard);\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    const mouseMove = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard, offsetX, offsetY } = operation;\n\n        const newOffsetX = event.pageX - offsetX,\n            newOffsetY = event.pageY - offsetY;\n\n        $movingCard.css({\n            top: newOffsetY + 'px',\n            left: newOffsetX + 'px'\n        });\n\n        // Higlight shifts\n        const _window = $ownerDocument[0].defaultView;\n        const x = event.pageX;\n        const y = event.pageY - _window.scrollY;\n\n        const rowHeight = settings.lineHeight + 1;\n        const rowsPerHour = settings.rowsPerHour;\n\n        const index = parseInt($movingCard.data('index'));\n        const item = settings.itemsOptions.items[index];\n        const duration = item.duration;\n        const height = duration * (rowHeight * rowsPerHour / 60);\n\n        $shifts.each(function() {\n            const $this = $(this);\n            const elementBounding = this.getBoundingClientRect();\n            const $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\n\n            if (x > elementBounding.left && x < elementBounding.right &&\n                y > elementBounding.top && y < elementBounding.bottom) {\n\n                const offsetTop = y - elementBounding.top;\n                const rowCount = (Math.floor(offsetTop / rowHeight) - 1);\n                const top = Math.min(\n                    Math.max(0, rowCount * rowHeight),\n                    this.clientHeight - height\n                );\n\n                const offsetInMinutes = 60 / settings.rowsPerHour * (top / rowHeight); // <<== FIXME \n                const interval = settings.data[$this.data('column')].workingTimeIntervals[$this.data('item-index')];\n                const matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\n\n                $el.css({ top: top })\n                    .css('background-color', matchResult.color)\n                    .height(height)\n                    .show();\n\n\n                $el.data('match', +matchResult.match);\n            } else {\n                $el.data('match', 0);\n                $el.hide();\n            }\n        });\n    };\n\n    const mouseDownOnCard = (event /*: MouseEvent */ ) => {\n        if (event.which !== 1) { return; }\n\n        const $skedulerWrapper = $(`.${settings.skedulerWrapperCssClass}`);\n        const $card = $(event.currentTarget);\n\n        const $movingCard =\n            $card.clone()\n            .data('index', $card.data('index'))\n            .addClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n            .removeClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n            .width($card.width())\n            .appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        const offsetX = event.pageX - event.offsetX,\n            offsetY = event.pageY - event.offsetY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card,\n            $movingCard,\n            offsetX: event.offsetX,\n            offsetY: event.offsetY\n        };\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $skedulerItemsEl.find('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\n}\n\nexport default populateSkedulerItems;","const defaultSettings = {\n    // Data attributes\n    headers: null,  // string[] - Array of column headers\n    tasks: [],      // Task[] - Array of tasks. Required fields: \n                    // id: number, startTime: number, duration: number, column: number\n\n    notAllocatedLabel: 'Not allocated',\n\n    // Card template - Inner content of task card. \n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function (e, task) { },\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30,         // height of one line in grid\n    borderWidth: 1,         // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2,         // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '<div>${duration}</div>',\n        items: [],\n        title: 'Items',\n        matchFunc: () => { return { match: true } }\n    }\n};\n\nexport { defaultSettings };","import { defaultSettings } from './settings';\nimport populateSkedulerItems from './items';\nimport { compileTemplate } from './template';\n\nconst div = (cssClass) => $('<div></div>').addClass(cssClass);\n\nclass Skeduler {\n    constructor($container, options) {\n        this.settings = $.extend(true, defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null\n        this.operation = null;\n        this.resizeAllColumns = true;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.refresh();\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    setRowsPerHour(rowsPerHour) {\n        this.settings.rowsPerHour = rowsPerHour;\n        this.refresh();\n    }\n\n    setResizeAllColumns(resizeAllColumns) {\n        this.resizeAllColumns = resizeAllColumns;\n    }\n\n    refresh() {\n        this.populate();\n        if (this.settings.itemsOptions.enabled) {\n            populateSkedulerItems(this.settings);\n        }\n    }\n\n    populate() {\n        this.$container.empty();\n        this.$container.addClass(this.settings.containerCssClass);\n\n        const headers = this.settings.headers ?\n            this.settings.headers :\n            this.settings.data.map(this.settings.getHeader);\n\n        // Add headers\n        this.$headerContainer = div(this.settings.headerContainerCssClass);\n        headers.forEach((element) => {\n            div().text(element)\n                .appendTo(this.$headerContainer);\n        }, this);\n        this.$container.append(this.$headerContainer);\n\n        // Add scheduler\n        this.$scheduleEl = div(this.settings.schedulerContainerCssClass);\n        const scheduleTimelineEl = div(this.settings.schedulerContainerCssClass + '-timeline');\n        const scheduleBodyEl = div(this.settings.schedulerContainerCssClass + '-body');\n\n        const gridColumnElement = div();\n\n        for (let i = 0; i < 24; i++) {\n            // Populate timeline\n            for (let j = 0; j < this.settings.rowsPerHour; j++) {\n                let timelineCell = div()\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                if (j == 0) {\n                    timelineCell = timelineCell\n                        .css(\"line-height\", this.settings.lineHeight + 'px')\n                        .text(j == 0 ? this.toTimeString(i) : \"\");\n                }\n                timelineCell.appendTo(scheduleTimelineEl);\n\n                div(this.settings.cellCssClass)\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\")\n                    .appendTo(gridColumnElement);\n            }\n        }\n\n        // Populate grid\n        for (let j = 0; j < headers.length; j++) {\n            const el = gridColumnElement.clone();\n\n            // fixme [workingTimeIntervals must not use index]\n            const workingIntervalsPlaceholder = div(this.settings.workingIntervalPlaceholderCssClass);\n            const intervals = this.settings.data[j].workingTimeIntervals;\n            this.appendAvailableInterval(workingIntervalsPlaceholder, intervals, j);\n\n            el.prepend(workingIntervalsPlaceholder);\n            el.appendTo(scheduleBodyEl);\n\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        this.$scheduleEl.append(scheduleTimelineEl);\n        this.$scheduleEl.append(scheduleBodyEl);\n\n        this.$container.append(this.$scheduleEl);\n\n        // Set default width for columns\n        for (let j = 0; j < headers.length; j++) {\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        // Configure resizing\n        if (this.settings.columnResizeEnabled) {\n            this.configureResizing();\n        }\n    }\n\n    configureResizing() {\n        const skedulerElResizableHandler = div(this.settings.resizableHandlerCssClass);\n\n        this.$container.prepend(skedulerElResizableHandler);\n\n        skedulerElResizableHandler.width(this.$container.width());\n\n        const resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n        let index = 0;\n        this.$headerContainer.find('div').each((_, el) => {\n            div(this.settings.resizableSliderCssClass)\n                .css('left', el.offsetLeft + el.clientWidth)\n                .height(resizableSliderHeight)\n                .data('column-id', index++)\n                .appendTo(skedulerElResizableHandler)\n        });\n\n        skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n    }\n\n    appendAvailableInterval(placeholder, intervals, column) {\n        intervals.forEach((interval, index) => {\n            const innerContent = div().text(this.settings.notAllocatedLabel);\n            const top = this.getCardTopPosition(interval.start) + 2;\n            const duration = this.parseTime(interval.end) - this.parseTime(interval.start);\n            const height = this.getCardHeight(duration) - 5;\n\n            const skItemHightlightDiv = div('si-highlight-item').hide();\n\n            const shiftDiv = div()\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n            shiftDiv\n                .data('column', column)\n                .data('item-index', index)\n                .append(innerContent)\n                .append(skItemHightlightDiv)\n                .appendTo(placeholder);\n\n            this.appendTasks(\n                shiftDiv,\n                interval.start,\n                this.settings.tasks.filter(t => t.column == column));\n            // TODO: ^^^ filter by shift interval too\n\n        }, this);\n    }\n\n    /** \n     * Generate task cards\n     */\n    appendTasks(placeholder, intervalStart, tasks) {\n        tasks.forEach((task) => {\n            let top = this.getCardTopPosition(task.start, intervalStart);\n            let height = this.getCardHeight(task.item.duration / 60);\n\n            this.getItemDiv(task.item)\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                })\n                .addClass(`${this.settings.itemsOptions.itemCardCssClass}`)\n                .addClass(`${this.settings.itemsOptions.itemCardCssClass}-pinned`)\n                .width('auto')\n                .appendTo(placeholder);\n        }, this);\n    }\n\n    onPointerUp(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        this.$ownerDocument.off('mouseup');\n        this.$ownerDocument.off('mousemove');\n\n        this.operation = null;\n    }\n\n    onPointerMove(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        // Determine the delta change between start and new mouse position, as a percentage of the table width\n        let difference = (event.pageX - op.startX); // / this.$scheduleEl.width() * 100;\n        if (difference === 0) {\n            return;\n        }\n\n        let columnNumber = op.columnNumber;\n        let width = op.width + difference;\n        if (this.resizeAllColumns) {\n            for (let i = 0; i < this.settings.data.length; i++) {\n                this.updateColumnWidth(i, width.toFixed(2));\n            }\n        } else {\n            this.updateColumnWidth(columnNumber, width.toFixed(2));\n        }\n    }\n\n    onPointerDown(event) {\n        // Only applies to left-click dragging\n        if (event.which !== 1) { return; }\n\n        // If a previous this.operation is defined, we missed the last mouseup.\n        // Probably gobbled up by user mousing out the window then releasing.\n        // We'll simulate a pointerup here prior to it\n        if (this.operation) {\n            this.onPointerUp(event);\n        }\n\n        let $currentGrip = $(event.currentTarget);\n        let columnNumber = $currentGrip.data('column-id');\n\n        let gripIndex = $currentGrip.index();\n        let $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n        let leftWidth = $leftColumn[0].clientWidth;\n\n        this.operation = {\n            columnNumber,\n            startX: event.pageX,\n            width: leftWidth\n        };\n\n        this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n        this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n        event.preventDefault();\n    }\n\n    updateColumnWidth(columnNumber, width) {\n        width = Math.max(width, this.settings.minColumnWidth);\n        $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')')\n            .css('flex-basis', width + 'px');\n\n        let column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n        var diff = column.width() - width;\n        column.width(width);\n\n        $('.' + this.settings.resizableHandlerCssClass + ' > div').each((index, el) => {\n            if (index >= columnNumber) {\n                let $el = $(el);\n                let left = parseInt($el.css('left').replace('px', ''));\n                $el.css('left', left - diff);\n            }\n        });\n    }\n\n    getItemDiv(item) {\n        const $div = div(this.settings.itemsOptions.itemCardCssClass);\n        const template = compileTemplate(this.settings.itemsOptions.itemCardTemplate, {\n            time: (item) => item.interval ? `${item.interval.start} to ${item.interval.end}` : ''\n        });\n\n        return div().html(template(item));\n    }\n\n    /**\n    * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n    */\n    toTimeString(value) {\n        return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n    }\n\n    /**\n     * Return height of task card based on duration of the task\n     * duration - in hours\n     */\n    getCardHeight(duration) {\n        const durationInMinutes = duration * 60;\n        const heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n        return Math.ceil(durationInMinutes * heightOfMinute);\n    }\n\n    /**\n     * Return top offset of task card based on start time of the task\n     * startTime - in hours\n     */\n    getCardTopPosition(startTime, offsetTime) {\n        let startTimeInt = this.parseTime(startTime);\n        if (offsetTime) {\n            startTimeInt -= this.parseTime(offsetTime);\n        }\n        return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n    }\n\n    /**\n     * Parse time string and present it in hours (ex. '13:30' => 13.5)\n     * @param {*string} time - time in format like '13:50', '11:00', '14'\n     */\n    parseTime(time) {\n        return /\\d{1,2}\\:\\d{2}/.test(time) ?\n            parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 :\n            parseInt(time);\n    }\n}\n\nexport default Skeduler;","const compileTemplate = (template, funcs) => item => {\n    let result = template;\n    const regKeys = /\\$\\{(\\w+)\\}/g;\n    const regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n    let match = 1;\n    while (true) {\n        match = regKeys.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (item.hasOwnProperty(key)) {\n            result = result.replace(match[0], item[key]);\n        }\n    }\n\n    while (funcs) {\n        match = regFuncs.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (funcs.hasOwnProperty(key)) {\n            result = result.replace(match[0], funcs[key](item));\n        }\n    }\n\n    return result;\n}\n\nexport default { compileTemplate };"]}