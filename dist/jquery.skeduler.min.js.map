{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jquery.skeduler.js","src/adapter.js","src/index.js","src/items/index.js","src/settings.js","src/skeduler.js","src/template/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_skeduler","_skeduler2","$","fn","skeduler","options","this","each","$container","./skeduler","2","Object","defineProperty","value","_adapter","./adapter","3","_template","div","cssClass","addClass","getItemDivs","settings","$div","itemsOptions","itemCardCssClass","items","template","compileTemplate","itemCardTemplate","time","item","interval","start","end","map","index","clone","data","html","populateSkedulerItems","$skedulerItemsEl","containerSelector","empty","itemsCssClass","$ownerDocument","ownerDocument","$shifts","workingIntervalPlaceholderCssClass","$skedulerItemsContainerEl","appendTo","$items","forEach","el","append","operation","mouseUp","event","_operation","$movingCard","$card","$siEl","highlightItemCss","detach","css","top","offsetTop","left","height","clientHeight","width","removeClass","parent","on","mouseDownOnCard","remove","show","hide","off","mouseMove","_operation2","offsetX","offsetY","newOffsetX","pageX","newOffsetY","pageY","_window","defaultView","x","y","scrollY","rowHeight","lineHeight","rowsPerHour","parseInt","duration","$this","elementBounding","getBoundingClientRect","$el","find","right","bottom","rowCount","Math","floor","offsetInMinutes","workingTimeIntervals","matchResult","matchFunc","_top","min","max","color","match","which","$skedulerWrapper","skedulerWrapperCssClass","currentTarget","preventDefault","../template","4","defaultSettings","headers","tasks","cardTemplate","onClick","task","containerCssClass","headerContainerCssClass","schedulerContainerCssClass","taskPlaceholderCssClass","cellCssClass","resizableHandlerCssClass","resizableSliderCssClass","borderWidth","columnWidth","minColumnWidth","columnResizeEnabled","debug","enabled","5","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_settings","_items","_items2","Skeduler","extend","$headerContainer","$scheduleEl","console","populate","timeEnd","_this","getHeader","element","text","scheduleTimelineEl","scheduleBodyEl","gridColumnElement","j","timelineCell","toTimeString","_loop","tasksPlaceholder","appendTasks","filter","column","workingIntervalsPlaceholder","intervals","appendAvailableInterval","prepend","updateColumnWidth","configureResizing","_this2","skedulerElResizableHandler","resizableSliderHeight","_","offsetLeft","clientWidth","onPointerDown","bind","ceil","durationInMinutes","heightOfMinute","startTime","startTimeInt","parseTime","test","split","result","placeholder","_this3","innerContent","renderInnerCardContent","getCardTopPosition","getCardHeight","card","attr","style","title","_this4","skItemHightlightDiv","op","difference","startX","columnNumber","toFixed","onPointerUp","$currentGrip","gripIndex","$leftColumn","eq","leftWidth","onPointerMove","diff","replace","./items","./settings","./template","6","funcs","regKeys","regFuncs","exec","hasOwnProperty"],"mappings":"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","file":"jquery.skeduler.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * jquery-skeduler - This is jQuery plugin which provider you simple scheduler with some items on OX and 24-hours timeline on OY.\n * @date Mon Jul 10 2017 13:22:29 GMT+1000 (Russia TZ 9 Standard Time)\n * @version v0.1.0-beta.0\n * @link \n * @license ISC\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\n// export type Task = {\n//     id: number;\n//     startTime: number;\n//     duration: number;\n//     column: number\n// }\n\n// export type Options = {\n//     headers: string[];\n//     tasks: Task[];\n//     containerCssClass: string;\n//     headerContainerCssClass: string;\n//     schedulerContainerCssClass: string;\n//     lineHeight: number;\n//     borderWidth: number;\n// }\n\n/**\r\n* Generate scheduler grid with task cards\r\n* options:\r\n* - headers: string[] - array of headers\r\n* - tasks: Task[] - array of tasks\r\n* - containerCssClass: string - css class of main container\r\n* - headerContainerCssClass: string - css class of header container\r\n* - schedulerContainerCssClass: string - css class of scheduler\r\n* - lineHeight - height of one half-hour cell in grid\r\n* - borderWidth - width of border of cell in grid\r\n*/\n$.fn.skeduler = function (options) {\n    return this.each(function () {\n        var $container = $(this);\n\n        var skeduler = new _skeduler2['default']($container, options);\n    });\n};\n\n$.skeduler = _skeduler2['default'];\n\n},{\"./skeduler\":5}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nexports['default'] = _skeduler2['default'];\nmodule.exports = exports['default'];\n\n},{\"./adapter\":1,\"./skeduler\":5}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _template = require('../template');\n\nvar div = function div(cssClass) {\n    return $('<div></div>').addClass(cssClass);\n};\n\nvar getItemDivs = function getItemDivs(settings) {\n    var $div = div(settings.itemsOptions.itemCardCssClass);\n    var items = settings.itemsOptions.items;\n    var template = (0, _template.compileTemplate)(settings.itemsOptions.itemCardTemplate, {\n        time: function time(item) {\n            return item.interval ? item.interval.start + ' to ' + item.interval.end : '';\n        }\n    });\n\n    return items.map(function (item, index) {\n        return $div.clone().data('index', index).html(template(item));\n    });\n};\n\nvar populateSkedulerItems = function populateSkedulerItems(settings) {\n    var $skedulerItemsEl = $(settings.itemsOptions.containerSelector).empty().addClass(settings.itemsOptions.itemsCssClass);\n    var $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    var $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\n\n    // TODO: Generate item's divs\n    var $headerDiv = div().html('<h1 class=\"si-header\">Items</h1>').appendTo($skedulerItemsEl);\n\n    var $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(function (el) {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    var operation = null;\n\n    var mouseUp = function mouseUp(event) {\n        if (operation == null) return;\n\n        var _operation = operation;\n        var $movingCard = _operation.$movingCard;\n        var $card = _operation.$card;\n\n        var $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        if ($siEl.length !== 0 && $siEl.data('match') == 1) {\n            $movingCard.detach().css({ top: $siEl[0].offsetTop, left: 0 }).height($siEl[0].clientHeight).width('auto').removeClass(settings.itemsOptions.itemCardCssClass + '-moving').addClass(settings.itemsOptions.itemCardCssClass + '-pinned').appendTo($siEl.parent());\n\n            $movingCard.on('mousedown', mouseDownOnCard);\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    var mouseMove = function mouseMove(event) {\n        if (operation == null) return;\n\n        var _operation2 = operation;\n        var $movingCard = _operation2.$movingCard;\n        var offsetX = _operation2.offsetX;\n        var offsetY = _operation2.offsetY;\n\n        var newOffsetX = event.pageX - offsetX,\n            newOffsetY = event.pageY - offsetY;\n\n        $movingCard.css({\n            top: newOffsetY + 'px',\n            left: newOffsetX + 'px'\n        });\n\n        // Higlight shifts\n        var _window = $ownerDocument[0].defaultView;\n        var x = event.pageX;\n        var y = event.pageY - _window.scrollY;\n\n        var rowHeight = settings.lineHeight + 1;\n        var rowsPerHour = settings.rowsPerHour;\n\n        var index = parseInt($movingCard.data('index'));\n        var item = settings.itemsOptions.items[index];\n        var duration = item.duration;\n        var height = duration * (rowHeight * rowsPerHour / 60);\n\n        $shifts.each(function () {\n            var $this = $(this);\n            var elementBounding = this.getBoundingClientRect();\n            var $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\n\n            if (x > elementBounding.left && x < elementBounding.right && y > elementBounding.top && y < elementBounding.bottom) {\n\n                var offsetTop = y - elementBounding.top;\n                var rowCount = Math.floor(offsetTop / rowHeight) - 1;\n                var offsetInMinutes = 60 / settings.rowsPerHour * rowCount; // <<== FIXME\n\n                var interval = settings.data[$this.data('column')].workingTimeIntervals[$this.data('item-index')];\n                var matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\n\n                var _top = Math.min(Math.max(0, rowCount * rowHeight), this.clientHeight - height);\n\n                $el.css({ top: _top }).css('background-color', matchResult.color).height(height).show();\n\n                $el.data('match', +matchResult.match);\n            } else {\n                $el.data('match', 0);\n                $el.hide();\n            }\n        });\n    };\n\n    var mouseDownOnCard = function mouseDownOnCard(event /*: MouseEvent */) {\n        if (event.which !== 1) {\n            return;\n        }\n\n        var $skedulerWrapper = $('.' + settings.skedulerWrapperCssClass);\n        var $card = $(event.currentTarget);\n\n        var $movingCard = $card.clone().data('index', $card.data('index')).addClass(settings.itemsOptions.itemCardCssClass + '-moving').removeClass(settings.itemsOptions.itemCardCssClass + '-pinned').width($card.width()).appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        var offsetX = event.pageX - event.offsetX,\n            offsetY = event.pageY - event.offsetY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card: $card, $movingCard: $movingCard,\n            offsetX: event.offsetX, offsetY: event.offsetY\n        };\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $skedulerItemsEl.find('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\n};\n\nexports['default'] = populateSkedulerItems;\nmodule.exports = exports['default'];\n\n},{\"../template\":6}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar defaultSettings = {\n    // Data attributes\n    headers: null, // String[] - Array of column headers\n    tasks: [], // Task[] - Array of tasks. Required fields:\n    // id: number, startTime: number, duration: number, column: number\n\n    // Card template - Inner content of task card.\n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function onClick(e, task) {},\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30, // height of one line in grid\n    borderWidth: 1, // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2, // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '',\n        items: [],\n        matchFunc: function matchFunc() {\n            return { match: true };\n        }\n    }\n};\n\nexports.defaultSettings = defaultSettings;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _settings = require('./settings');\n\nvar _items = require('./items');\n\nvar _items2 = _interopRequireDefault(_items);\n\nvar _template = require('./template');\n\nvar Skeduler = (function () {\n    function Skeduler($container, options) {\n        _classCallCheck(this, Skeduler);\n\n        this.settings = $.extend(true, _settings.defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null;\n        this.operation = null;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.populate();\n        if (this.settings.itemsOptions.enabled) {\n            (0, _items2['default'])(this.settings);\n        }\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    _createClass(Skeduler, [{\n        key: 'populate',\n        value: function populate() {\n            var _this = this;\n\n            this.$container.empty();\n            this.$container.addClass(this.settings.containerCssClass);\n\n            var headers = this.settings.headers ? this.settings.headers : this.settings.data.map(this.settings.getHeader);\n\n            var div = $('<div></div>');\n\n            // Add headers\n            this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\n            headers.forEach(function (element) {\n                div.clone().text(element).appendTo(_this.$headerContainer);\n            }, this);\n            this.$container.append(this.$headerContainer);\n\n            // Add scheduler\n            this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\n            var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\n            var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\n\n            var gridColumnElement = div.clone();\n\n            for (var i = 0; i < 24; i++) {\n                // Populate timeline\n                for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                    var timelineCell = div.clone().height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                    if (j == 0) {\n                        timelineCell = timelineCell.css(\"line-height\", this.settings.lineHeight + 'px').text(j == 0 ? this.toTimeString(i) : \"\");\n                    }\n                    timelineCell.appendTo(scheduleTimelineEl);\n\n                    div.clone().addClass(this.settings.cellCssClass).height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\").appendTo(gridColumnElement);\n                }\n            }\n\n            // Populate grid\n\n            var _loop = function (j) {\n                var el = gridColumnElement.clone();\n\n                var tasksPlaceholder = div.clone().addClass(_this.settings.taskPlaceholderCssClass);\n                _this.appendTasks(tasksPlaceholder, _this.settings.tasks.filter(function (t) {\n                    return t.column == j;\n                }));\n\n                // fixme [workingTimeIntervals must not use index]\n                var workingIntervalsPlaceholder = div.clone().addClass(_this.settings.workingIntervalPlaceholderCssClass);\n                var intervals = _this.settings.data[j].workingTimeIntervals;\n                _this.appendAvailableInterval(workingIntervalsPlaceholder, intervals, j);\n\n                el.prepend(tasksPlaceholder);\n                el.prepend(workingIntervalsPlaceholder);\n                el.appendTo(scheduleBodyEl);\n\n                _this.updateColumnWidth(j, _this.settings.columnWidth);\n            };\n\n            for (var j = 0; j < headers.length; j++) {\n                _loop(j);\n            }\n\n            this.$scheduleEl.append(scheduleTimelineEl);\n            this.$scheduleEl.append(scheduleBodyEl);\n\n            this.$container.append(this.$scheduleEl);\n\n            // Set default width for columns\n            for (var j = 0; j < headers.length; j++) {\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            // Configure resizing\n            if (this.settings.columnResizeEnabled) {\n                this.configureResizing();\n            }\n        }\n    }, {\n        key: 'configureResizing',\n        value: function configureResizing() {\n            var _this2 = this;\n\n            var div = $('<div></div>');\n\n            var skedulerElResizableHandler = div.clone().addClass(this.settings.resizableHandlerCssClass);\n\n            this.$container.prepend(skedulerElResizableHandler);\n\n            skedulerElResizableHandler.width(this.$container.width());\n\n            var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n            var index = 0;\n            this.$headerContainer.find('div').each(function (_, el) {\n                div.clone().addClass(_this2.settings.resizableSliderCssClass).css('left', el.offsetLeft + el.clientWidth).height(resizableSliderHeight).data('column-id', index++).appendTo(skedulerElResizableHandler);\n            });\n\n            skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n        }\n\n        /**\r\n           * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\r\n           */\n    }, {\n        key: 'toTimeString',\n        value: function toTimeString(value) {\n            return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n        }\n\n        /**\r\n         * Return height of task card based on duration of the task\r\n         * duration - in hours\r\n         */\n    }, {\n        key: 'getCardHeight',\n        value: function getCardHeight(duration) {\n            var durationInMinutes = duration * 60;\n            var heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n            return Math.ceil(durationInMinutes * heightOfMinute);\n        }\n\n        /**\r\n         * Return top offset of task card based on start time of the task\r\n         * startTime - in hours\r\n         */\n    }, {\n        key: 'getCardTopPosition',\n        value: function getCardTopPosition(startTime) {\n            var startTimeInt = this.parseTime(startTime);\n            return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n        }\n\n        /**\r\n         * Parse time string and present it in hours (ex. '13:30' => 13.5)\r\n         * @param {*string} time - time in format like '13:50', '11:00', '14'\r\n         */\n    }, {\n        key: 'parseTime',\n        value: function parseTime(time) {\n            return (/\\d{2}\\:\\d{2}/.test(time) ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 : parseInt(time)\n            );\n        }\n\n        /**\r\n        * Render card template\r\n        */\n    }, {\n        key: 'renderInnerCardContent',\n        value: function renderInnerCardContent(task) {\n            var template = this.settings.cardTemplate;\n            var result = (0, _template.compileTemplate)(template)(task);\n\n            return $(result);\n        }\n\n        /** \r\n         * Generate task cards\r\n         */\n    }, {\n        key: 'appendTasks',\n        value: function appendTasks(placeholder, tasks) {\n            var _this3 = this;\n\n            tasks.forEach(function (task) {\n                var innerContent = _this3.renderInnerCardContent(task);\n                var top = _this3.getCardTopPosition(task.startTime);\n                var height = _this3.getCardHeight(task.duration);\n\n                var card = $('<div></div>').attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\n                    title: _this3.toTimeString(task.startTime) + ' - ' + _this3.toTimeString(task.startTime + task.duration)\n                });\n                card.on('click', function (e) {\n                    _this3.settings.onClick && _this3.settings.onClick(e, task);\n                });\n                card.append(innerContent).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'appendAvailableInterval',\n        value: function appendAvailableInterval(placeholder, intervals, column) {\n            var _this4 = this;\n\n            var div = $('<div></div>');\n            intervals.forEach(function (interval, index) {\n                var innerContent = div.clone().text('Not allocated');\n                var top = _this4.getCardTopPosition(interval.start) + 2;\n                var duration = _this4.parseTime(interval.end) - _this4.parseTime(interval.start);\n                var height = _this4.getCardHeight(duration) - 5;\n\n                var skItemHightlightDiv = div.clone().addClass('si-highlight-item').hide();\n\n                var card = div.clone().attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n                card.data('column', column).data('item-index', index).append(innerContent).append(skItemHightlightDiv).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'onPointerUp',\n        value: function onPointerUp(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            this.$ownerDocument.off('mouseup');\n            this.$ownerDocument.off('mousemove');\n\n            this.operation = null;\n        }\n    }, {\n        key: 'onPointerMove',\n        value: function onPointerMove(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            // Determine the delta change between start and new mouse position, as a percentage of the table width\n            var difference = event.pageX - op.startX; // / this.$scheduleEl.width() * 100;\n            if (difference === 0) {\n                return;\n            }\n\n            var columnNumber = op.columnNumber;\n            var width = op.width + difference;\n            this.updateColumnWidth(columnNumber, width.toFixed(2));\n        }\n    }, {\n        key: 'onPointerDown',\n        value: function onPointerDown(event) {\n            // Only applies to left-click dragging\n            if (event.which !== 1) {\n                return;\n            }\n\n            // If a previous this.operation is defined, we missed the last mouseup.\n            // Probably gobbled up by user mousing out the window then releasing.\n            // We'll simulate a pointerup here prior to it\n            if (this.operation) {\n                this.onPointerUp(event);\n            }\n\n            var $currentGrip = $(event.currentTarget);\n            var columnNumber = $currentGrip.data('column-id');\n\n            var gripIndex = $currentGrip.index();\n            var $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n            var leftWidth = $leftColumn[0].clientWidth;\n\n            this.operation = {\n                columnNumber: columnNumber,\n                startX: event.pageX,\n                width: leftWidth\n            };\n\n            this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n            this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'updateColumnWidth',\n        value: function updateColumnWidth(columnNumber, width) {\n            width = Math.max(width, this.settings.minColumnWidth);\n            $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')').css('flex-basis', width + 'px');\n\n            var column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n            var diff = column.width() - width;\n            column.width(width);\n\n            $('.' + this.settings.resizableHandlerCssClass + ' > div').each(function (index, el) {\n                if (index >= columnNumber) {\n                    var $el = $(el);\n                    var left = parseInt($el.css('left').replace('px', ''));\n                    $el.css('left', left - diff);\n                }\n            });\n        }\n    }]);\n\n    return Skeduler;\n})();\n\nexports['default'] = Skeduler;\nmodule.exports = exports['default'];\n\n},{\"./items\":3,\"./settings\":4,\"./template\":6}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar compileTemplate = function compileTemplate(template, funcs) {\n    return function (item) {\n        var result = template;\n        var regKeys = /\\$\\{(\\w+)\\}/g;\n        var regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n        var match = 1;\n        while (true) {\n            match = regKeys.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (item.hasOwnProperty(key)) {\n                result = result.replace(match[0], item[key]);\n            }\n        }\n\n        while (funcs) {\n            match = regFuncs.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (funcs.hasOwnProperty(key)) {\n                result = result.replace(match[0], funcs[key](item));\n            }\n        }\n\n        return result;\n    };\n};\n\nexports[\"default\"] = { compileTemplate: compileTemplate };\nmodule.exports = exports[\"default\"];\n\n},{}]},{},[2])\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import Skeduler from './skeduler';\r\n\r\n// export type Task = {\r\n//     id: number;\r\n//     startTime: number;\r\n//     duration: number;\r\n//     column: number\r\n// }\r\n\r\n// export type Options = {\r\n//     headers: string[];\r\n//     tasks: Task[];\r\n//     containerCssClass: string;\r\n//     headerContainerCssClass: string;\r\n//     schedulerContainerCssClass: string;\r\n//     lineHeight: number;\r\n//     borderWidth: number;\r\n// }\r\n\r\n/**\r\n* Generate scheduler grid with task cards\r\n* options:\r\n* - headers: string[] - array of headers\r\n* - tasks: Task[] - array of tasks\r\n* - containerCssClass: string - css class of main container\r\n* - headerContainerCssClass: string - css class of header container\r\n* - schedulerContainerCssClass: string - css class of scheduler\r\n* - lineHeight - height of one half-hour cell in grid\r\n* - borderWidth - width of border of cell in grid\r\n*/\r\n$.fn.skeduler = function (options) {\r\n    return this.each(function () {\r\n        let $container = $(this);\r\n \r\n        var skeduler = new Skeduler($container, options);\r\n    });\r\n};\r\n\r\n$.skeduler = Skeduler;\r\n","import Skeduler from './skeduler';\r\nimport adapter from './adapter';\r\n\r\nexport default Skeduler;","import { compileTemplate } from '../template';\r\n\r\nconst div = (cssClass) => $('<div></div>').addClass(cssClass);\r\n\r\nconst getItemDivs = (settings) => {\r\n    const $div = div(settings.itemsOptions.itemCardCssClass);\r\n    const items = settings.itemsOptions.items;\r\n    const template = compileTemplate(settings.itemsOptions.itemCardTemplate, {\r\n        time: (item) => item.interval ? `${item.interval.start} to ${item.interval.end}` : ''\r\n    });\r\n\r\n    return items.map((item, index) => $div.clone()\r\n        .data('index', index)\r\n        .html(template(item))\r\n    );\r\n}\r\n\r\nconst populateSkedulerItems = (settings) => {\r\n    const $skedulerItemsEl = $(settings.itemsOptions.containerSelector)\r\n        .empty()\r\n        .addClass(settings.itemsOptions.itemsCssClass);\r\n    const $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\r\n    const $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\r\n\r\n    // TODO: Generate item's divs\r\n    const $headerDiv = div()\r\n        .html('<h1 class=\"si-header\">Items</h1>')\r\n        .appendTo($skedulerItemsEl);\r\n\r\n    const $skedulerItemsContainerEl = div('si-container');\r\n    var $items = getItemDivs(settings);\r\n    $items.forEach(el => {\r\n        $skedulerItemsContainerEl.append(el);\r\n    });\r\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\r\n\r\n    let operation = null;\r\n\r\n    const mouseUp = (event) => {\r\n        if (operation == null) return;\r\n\r\n        const { $movingCard, $card } = operation;\r\n\r\n        const $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\r\n\r\n        if ($siEl.length !== 0 && $siEl.data('match') == 1) {\r\n            $movingCard\r\n                .detach()\r\n                .css({ top: $siEl[0].offsetTop, left: 0 })\r\n                .height($siEl[0].clientHeight)\r\n                .width('auto')\r\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\r\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\r\n                .appendTo($siEl.parent());\r\n\r\n            $movingCard.on('mousedown', mouseDownOnCard);\r\n        } else {\r\n            $movingCard.remove();\r\n            $card.show();\r\n        }\r\n\r\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\r\n\r\n        operation = null;\r\n        $ownerDocument.off('mousemove', mouseMove);\r\n        $ownerDocument.off('mouseup', mouseUp);\r\n    };\r\n\r\n    const mouseMove = (event) => {\r\n        if (operation == null) return;\r\n\r\n        const { $movingCard, offsetX, offsetY } = operation;\r\n\r\n        const newOffsetX = event.pageX - offsetX,\r\n            newOffsetY = event.pageY - offsetY;\r\n\r\n        $movingCard.css({\r\n            top: newOffsetY + 'px',\r\n            left: newOffsetX + 'px'\r\n        });\r\n\r\n        // Higlight shifts\r\n        const _window = $ownerDocument[0].defaultView;\r\n        const x = event.pageX;\r\n        const y = event.pageY - _window.scrollY;\r\n\r\n        const rowHeight = settings.lineHeight + 1;\r\n        const rowsPerHour = settings.rowsPerHour;\r\n\r\n        const index = parseInt($movingCard.data('index'));\r\n        const item = settings.itemsOptions.items[index];\r\n        const duration = item.duration;\r\n        const height = duration * (rowHeight * rowsPerHour / 60);\r\n\r\n        $shifts.each(function () {\r\n            const $this = $(this);\r\n            const elementBounding = this.getBoundingClientRect();\r\n            const $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\r\n\r\n            if (x > elementBounding.left && x < elementBounding.right\r\n                && y > elementBounding.top && y < elementBounding.bottom) {\r\n\r\n                const offsetTop = y - elementBounding.top;\r\n                const rowCount = (Math.floor(offsetTop / rowHeight) - 1);\r\n                const offsetInMinutes = 60 / settings.rowsPerHour * rowCount; // <<== FIXME \r\n\r\n                const interval = settings.data[$this.data('column')].workingTimeIntervals[$this.data('item-index')];\r\n                const matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\r\n\r\n                const top = Math.min(\r\n                    Math.max(0, rowCount * rowHeight),\r\n                    this.clientHeight - height\r\n                );\r\n                \r\n\r\n                $el.css({ top: top })\r\n                    .css('background-color', matchResult.color)\r\n                    .height(height)\r\n                    .show();\r\n\r\n                \r\n                $el.data('match', +matchResult.match);\r\n            } else {\r\n                $el.data('match', 0);\r\n                $el.hide();\r\n            }\r\n        });\r\n    };\r\n\r\n    const mouseDownOnCard = (event /*: MouseEvent */) => {\r\n        if (event.which !== 1) { return; }\r\n\r\n        const $skedulerWrapper = $(`.${settings.skedulerWrapperCssClass}`);\r\n        const $card = $(event.currentTarget);\r\n\r\n        const $movingCard =\r\n            $card.clone()\r\n                .data('index', $card.data('index'))\r\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\r\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\r\n                .width($card.width())\r\n                .appendTo($skedulerWrapper);\r\n\r\n        //var bounce = $card[0].getBoundingClientRect();\r\n        // fixme ^^^\r\n        const offsetX = event.pageX - event.offsetX,\r\n            offsetY = event.pageY - event.offsetY;\r\n\r\n        $movingCard.css({\r\n            top: offsetY + 'px',\r\n            left: offsetX + 'px'\r\n        });\r\n\r\n        operation = {\r\n            $card, $movingCard,\r\n            offsetX: event.offsetX, offsetY: event.offsetY\r\n        };\r\n\r\n        $card.hide();\r\n\r\n        $ownerDocument.on('mousemove', mouseMove);\r\n        $ownerDocument.on('mouseup', mouseUp);\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    $skedulerItemsEl.find('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\r\n}\r\n\r\nexport default populateSkedulerItems;","const defaultSettings = {\r\n    // Data attributes\r\n    headers: null,  // String[] - Array of column headers\r\n    tasks: [],    // Task[] - Array of tasks. Required fields: \r\n    // id: number, startTime: number, duration: number, column: number\r\n\r\n    // Card template - Inner content of task card. \r\n    // You're able to use ${key} inside template, where key is any property from task.\r\n    cardTemplate: '<div>${id}</div>',\r\n\r\n    // OnClick event handler\r\n    onClick: function (e, task) { },\r\n\r\n    // Css classes\r\n    skedulerWrapperCssClass: 'skeduler-wrapper',\r\n    containerCssClass: 'skeduler-container',\r\n    headerContainerCssClass: 'skeduler-headers',\r\n    schedulerContainerCssClass: 'skeduler-main',\r\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\r\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\r\n    cellCssClass: 'skeduler-cell',\r\n    resizableHandlerCssClass: 'resizable-handler',\r\n    resizableSliderCssClass: 'resizable-slider',\r\n\r\n    lineHeight: 30,         // height of one line in grid\r\n    borderWidth: 1,         // width of board of grid cell\r\n    columnWidth: 200,\r\n    minColumnWidth: 100,\r\n\r\n    rowsPerHour: 2,         // count of rows for one hour\r\n\r\n    columnResizeEnabled: true, // is columns resizable\r\n\r\n    debug: true,\r\n\r\n    itemsOptions: {\r\n        enabled: false,\r\n        itemsCssClass: 'skeduler-items',\r\n        highlightItemCss: 'si-highlight-item',\r\n        containerSelector: \"#skeduler-items\",\r\n        itemCardCssClass: 'si-card',\r\n        itemCardTemplate: '',\r\n        items: [],\r\n        matchFunc: () => { return { match: true } }\r\n    }\r\n};\r\n\r\nexport { defaultSettings };","import { defaultSettings } from './settings';\r\nimport populateSkedulerItems from './items';\r\nimport { compileTemplate } from './template';\r\n\r\nclass Skeduler {\r\n    constructor($container, options) {\r\n        this.settings = $.extend(true, defaultSettings, options);\r\n        this.$container = $container;\r\n        this.$ownerDocument = $($container[0].ownerDocument);\r\n        this.$headerContainer = null;\r\n        this.$scheduleEl = null\r\n        this.operation = null;\r\n\r\n        if (this.settings.debug) {\r\n            console.time('skeduler');\r\n        }\r\n\r\n        this.populate();\r\n        if (this.settings.itemsOptions.enabled) {\r\n            populateSkedulerItems(this.settings);\r\n        }\r\n\r\n        if (this.settings.debug) {\r\n            console.timeEnd('skeduler');\r\n        }\r\n    }\r\n\r\n    populate() {\r\n        this.$container.empty();\r\n        this.$container.addClass(this.settings.containerCssClass);\r\n\r\n        const headers = this.settings.headers\r\n            ? this.settings.headers\r\n            : this.settings.data.map(this.settings.getHeader);\r\n\r\n        const div = $('<div></div>');\r\n\r\n        // Add headers\r\n        this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\r\n        headers.forEach((element) => {\r\n            div.clone()\r\n                .text(element)\r\n                .appendTo(this.$headerContainer);\r\n        }, this);\r\n        this.$container.append(this.$headerContainer);\r\n\r\n        // Add scheduler\r\n        this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\r\n        const scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\r\n        const scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\r\n\r\n        const gridColumnElement = div.clone();\r\n\r\n        for (let i = 0; i < 24; i++) {\r\n            // Populate timeline\r\n            for (let j = 0; j < this.settings.rowsPerHour; j++) {\r\n                let timelineCell = div.clone()\r\n                    .height(this.settings.lineHeight)\r\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\r\n\r\n                if (j == 0) {\r\n                    timelineCell = timelineCell\r\n                        .css(\"line-height\", this.settings.lineHeight + 'px')\r\n                        .text(j == 0 ? this.toTimeString(i) : \"\");\r\n                }\r\n                timelineCell.appendTo(scheduleTimelineEl);\r\n\r\n                div.clone()\r\n                    .addClass(this.settings.cellCssClass)\r\n                    .height(this.settings.lineHeight)\r\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\")\r\n                    .appendTo(gridColumnElement);\r\n            }\r\n        }\r\n\r\n        // Populate grid\r\n        for (let j = 0; j < headers.length; j++) {\r\n            const el = gridColumnElement.clone();\r\n\r\n            const tasksPlaceholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\r\n            this.appendTasks(tasksPlaceholder, this.settings.tasks.filter(t => t.column == j));\r\n\r\n            // fixme [workingTimeIntervals must not use index]\r\n            const workingIntervalsPlaceholder = div.clone().addClass(this.settings.workingIntervalPlaceholderCssClass);\r\n            const intervals = this.settings.data[j].workingTimeIntervals;\r\n            this.appendAvailableInterval(workingIntervalsPlaceholder, intervals, j);\r\n\r\n            el.prepend(tasksPlaceholder);\r\n            el.prepend(workingIntervalsPlaceholder);\r\n            el.appendTo(scheduleBodyEl);\r\n\r\n            this.updateColumnWidth(j, this.settings.columnWidth);\r\n        }\r\n\r\n        this.$scheduleEl.append(scheduleTimelineEl);\r\n        this.$scheduleEl.append(scheduleBodyEl);\r\n\r\n        this.$container.append(this.$scheduleEl);\r\n\r\n        // Set default width for columns\r\n        for (let j = 0; j < headers.length; j++) {\r\n            this.updateColumnWidth(j, this.settings.columnWidth);\r\n        }\r\n\r\n        // Configure resizing\r\n        if (this.settings.columnResizeEnabled) {\r\n            this.configureResizing();\r\n        }\r\n    }\r\n\r\n    configureResizing() {\r\n        const div = $('<div></div>');\r\n\r\n        const skedulerElResizableHandler = div.clone()\r\n            .addClass(this.settings.resizableHandlerCssClass);\r\n\r\n        this.$container.prepend(skedulerElResizableHandler);\r\n\r\n        skedulerElResizableHandler.width(this.$container.width());\r\n\r\n        const resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\r\n        let index = 0;\r\n        this.$headerContainer.find('div').each((_, el) => {\r\n            div.clone()\r\n                .addClass(this.settings.resizableSliderCssClass)\r\n                .css('left', el.offsetLeft + el.clientWidth)\r\n                .height(resizableSliderHeight)\r\n                .data('column-id', index++)\r\n                .appendTo(skedulerElResizableHandler)\r\n        });\r\n\r\n        skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\r\n    }\r\n\r\n    /**\r\n       * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\r\n       */\r\n    toTimeString(value) {\r\n        return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\r\n    }\r\n\r\n    /**\r\n     * Return height of task card based on duration of the task\r\n     * duration - in hours\r\n     */\r\n    getCardHeight(duration) {\r\n        const durationInMinutes = duration * 60;\r\n        const heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\r\n        return Math.ceil(durationInMinutes * heightOfMinute);\r\n    }\r\n\r\n    /**\r\n     * Return top offset of task card based on start time of the task\r\n     * startTime - in hours\r\n     */\r\n    getCardTopPosition(startTime) {\r\n        const startTimeInt = this.parseTime(startTime);\r\n        return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\r\n    }\r\n\r\n    /**\r\n     * Parse time string and present it in hours (ex. '13:30' => 13.5)\r\n     * @param {*string} time - time in format like '13:50', '11:00', '14'\r\n     */\r\n    parseTime(time) {\r\n        return /\\d{2}\\:\\d{2}/.test(time)\r\n            ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60\r\n            : parseInt(time);\r\n    }\r\n\r\n    /**\r\n    * Render card template\r\n    */\r\n    renderInnerCardContent(task) {\r\n        const template = this.settings.cardTemplate;\r\n        const result = compileTemplate(template)(task);\r\n\r\n        return $(result);\r\n    }\r\n\r\n    /** \r\n     * Generate task cards\r\n     */\r\n    appendTasks(placeholder, tasks) {\r\n        tasks.forEach((task) => {\r\n            var innerContent = this.renderInnerCardContent(task);\r\n            var top = this.getCardTopPosition(task.startTime);\r\n            var height = this.getCardHeight(task.duration);\r\n\r\n            var card = $('<div></div>')\r\n                .attr({\r\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\r\n                    title: this.toTimeString(task.startTime) + ' - ' + this.toTimeString(task.startTime + task.duration)\r\n                });\r\n            card.on('click', (e) => { this.settings.onClick && this.settings.onClick(e, task) });\r\n            card.append(innerContent)\r\n                .appendTo(placeholder);\r\n        }, this);\r\n    }\r\n\r\n    appendAvailableInterval(placeholder, intervals, column) {\r\n        const div = $('<div></div>');\r\n        intervals.forEach((interval, index) => {\r\n            const innerContent = div.clone().text('Not allocated');\r\n            const top = this.getCardTopPosition(interval.start) + 2;\r\n            const duration = this.parseTime(interval.end) - this.parseTime(interval.start);\r\n            const height = this.getCardHeight(duration) - 5;\r\n\r\n            const skItemHightlightDiv = div.clone()\r\n                .addClass('si-highlight-item')\r\n                .hide();\r\n\r\n            const card = div.clone()\r\n                .attr({\r\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\r\n                });\r\n\r\n            card\r\n                .data('column', column)\r\n                .data('item-index', index)\r\n                .append(innerContent)\r\n                .append(skItemHightlightDiv)\r\n                .appendTo(placeholder);\r\n\r\n        }, this);\r\n    }\r\n\r\n    onPointerUp(event) {\r\n        let op = this.operation;\r\n        if (!this.operation) { return; }\r\n\r\n        this.$ownerDocument.off('mouseup');\r\n        this.$ownerDocument.off('mousemove');\r\n\r\n        this.operation = null;\r\n    }\r\n\r\n    onPointerMove(event) {\r\n        let op = this.operation;\r\n        if (!this.operation) { return; }\r\n\r\n        // Determine the delta change between start and new mouse position, as a percentage of the table width\r\n        let difference = (event.pageX - op.startX);// / this.$scheduleEl.width() * 100;\r\n        if (difference === 0) {\r\n            return;\r\n        }\r\n\r\n        let columnNumber = op.columnNumber;\r\n        let width = op.width + difference;\r\n        this.updateColumnWidth(columnNumber, width.toFixed(2));\r\n    }\r\n\r\n    onPointerDown(event) {\r\n        // Only applies to left-click dragging\r\n        if (event.which !== 1) { return; }\r\n\r\n        // If a previous this.operation is defined, we missed the last mouseup.\r\n        // Probably gobbled up by user mousing out the window then releasing.\r\n        // We'll simulate a pointerup here prior to it\r\n        if (this.operation) {\r\n            this.onPointerUp(event);\r\n        }\r\n\r\n        let $currentGrip = $(event.currentTarget);\r\n        let columnNumber = $currentGrip.data('column-id');\r\n\r\n        let gripIndex = $currentGrip.index();\r\n        let $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\r\n\r\n        let leftWidth = $leftColumn[0].clientWidth;\r\n\r\n        this.operation = {\r\n            columnNumber,\r\n            startX: event.pageX,\r\n            width: leftWidth\r\n        };\r\n\r\n        this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\r\n        this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    updateColumnWidth(columnNumber, width) {\r\n        width = Math.max(width, this.settings.minColumnWidth);\r\n        $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')')\r\n            .css('flex-basis', width + 'px');\r\n\r\n        let column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\r\n        var diff = column.width() - width;\r\n        column.width(width);\r\n\r\n        $('.' + this.settings.resizableHandlerCssClass + ' > div').each((index, el) => {\r\n            if (index >= columnNumber) {\r\n                let $el = $(el);\r\n                let left = parseInt($el.css('left').replace('px', ''));\r\n                $el.css('left', left - diff);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Skeduler;\r\n","const compileTemplate = (template, funcs) => item => {\r\n    let result = template;\r\n    const regKeys = /\\$\\{(\\w+)\\}/g;\r\n    const regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\r\n\r\n    let match = 1;\r\n    while (true) {\r\n        match = regKeys.exec(template);\r\n        if (!match) break;\r\n\r\n        let key = match[1];\r\n        if (item.hasOwnProperty(key)) {\r\n            result = result.replace(match[0], item[key]);\r\n        }\r\n    }\r\n\r\n    while (funcs) {\r\n        match = regFuncs.exec(template);\r\n        if (!match) break;\r\n\r\n        let key = match[1];\r\n        if (funcs.hasOwnProperty(key)) {\r\n            result = result.replace(match[0], funcs[key](item));\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport default { compileTemplate };"]}