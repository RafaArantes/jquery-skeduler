{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jquery.skeduler.js","src/adapter.js","src/index.js","src/items/index.js","src/settings.js","src/skeduler.js","src/template/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_skeduler","_skeduler2","$","fn","skeduler","options","this","each","$container","./skeduler","2","Object","defineProperty","value","_adapter","./adapter","3","_template","div","cssClass","addClass","getItemDivs","settings","$div","itemsOptions","itemCardCssClass","items","template","compileTemplate","itemCardTemplate","time","item","iterval","start","end","map","index","clone","data","html","populateSkedulerItems","$skedulerItemsEl","containerSelector","empty","itemsCssClass","$ownerDocument","ownerDocument","$shifts","workingIntervalPlaceholderCssClass","$skedulerItemsContainerEl","appendTo","$items","forEach","el","append","operation","mouseUp","event","_operation","$movingCard","$card","siEl","highlightItemCss","detach","css","top","offsetTop","left","height","clientHeight","width","removeClass","parent","on","mouseDownOnCard","hide","remove","show","off","mouseMove","_operation2","offsetX","pageX","offsetY","pageY","_window","defaultView","x","y","scrollY","rowHeight","lineHeight","rowsPerHour","parseInt","console","log","duration","$this","elementBounding","getBoundingClientRect","matchResult","matchFunc","right","bottom","match","_top","Math","min","max","floor","find","color","which","$skedulerWrapper","skedulerWrapperCssClass","currentTarget","preventDefault","../template","4","defaultSettings","headers","tasks","cardTemplate","onClick","task","containerCssClass","headerContainerCssClass","schedulerContainerCssClass","taskPlaceholderCssClass","cellCssClass","resizableHandlerCssClass","resizableSliderCssClass","borderWidth","columnWidth","minColumnWidth","columnResizeEnabled","debug","enabled","5","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_settings","_items","_items2","Skeduler","extend","$headerContainer","$scheduleEl","populate","timeEnd","_this","getHeader","element","text","scheduleTimelineEl","scheduleBodyEl","gridColumnElement","j","timelineCell","toTimeString","tasksPlaceholder","appendTasks","filter","column","workingIntervalsPlaceholder","intervals","d","id","workingTimeIntervals","appendAvailableInterval","prepend","updateColumnWidth","configureResizing","_this2","skedulerElResizableHandler","resizableSliderHeight","_","offsetLeft","clientWidth","onPointerDown","bind","ceil","durationInMinutes","heightOfMinute","startTime","startTimeInt","parseTime","test","split","result","placeholder","_this3","innerContent","renderInnerCardContent","getCardTopPosition","getCardHeight","card","attr","style","title","_this4","interval","skItemHightlightDiv","op","difference","startX","columnNumber","toFixed","onPointerUp","$currentGrip","gripIndex","$leftColumn","eq","leftWidth","onPointerMove","diff","$el","replace","./items","./settings","./template","6","funcs","regKeys","regFuncs","exec","hasOwnProperty"],"mappings":"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","file":"jquery.skeduler.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * jquery-skeduler - This is jQuery plugin which provider you simple scheduler with some items on OX and 24-hours timeline on OY.\n * @date Mon Jul 10 2017 01:04:47 GMT+1000 (+10)\n * @version v0.1.0-beta.0\n * @link \n * @license ISC\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\n// export type Task = {\n//     id: number;\n//     startTime: number;\n//     duration: number;\n//     column: number\n// }\n\n// export type Options = {\n//     headers: string[];\n//     tasks: Task[];\n//     containerCssClass: string;\n//     headerContainerCssClass: string;\n//     schedulerContainerCssClass: string;\n//     lineHeight: number;\n//     borderWidth: number;\n// }\n\n/**\n* Generate scheduler grid with task cards\n* options:\n* - headers: string[] - array of headers\n* - tasks: Task[] - array of tasks\n* - containerCssClass: string - css class of main container\n* - headerContainerCssClass: string - css class of header container\n* - schedulerContainerCssClass: string - css class of scheduler\n* - lineHeight - height of one half-hour cell in grid\n* - borderWidth - width of border of cell in grid\n*/\n$.fn.skeduler = function (options) {\n    return this.each(function () {\n        var $container = $(this);\n\n        var skeduler = new _skeduler2['default']($container, options);\n    });\n};\n\n$.skeduler = _skeduler2['default'];\n\n},{\"./skeduler\":5}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nexports['default'] = _skeduler2['default'];\nmodule.exports = exports['default'];\n\n},{\"./adapter\":1,\"./skeduler\":5}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _template = require('../template');\n\nvar div = function div(cssClass) {\n    return $('<div></div>').addClass(cssClass);\n};\n\nvar getItemDivs = function getItemDivs(settings) {\n    var $div = div(settings.itemsOptions.itemCardCssClass);\n    var items = settings.itemsOptions.items;\n    var template = (0, _template.compileTemplate)(settings.itemsOptions.itemCardTemplate, {\n        time: function time(item) {\n            return item.iterval ? item.iterval.start + ' to ' + item.iterval.end : '';\n        }\n    });\n\n    return items.map(function (item, index) {\n        return $div.clone().data('index', index).html(template(item));\n    });\n};\n\nvar populateSkedulerItems = function populateSkedulerItems(settings) {\n    var $skedulerItemsEl = $(settings.itemsOptions.containerSelector).empty().addClass(settings.itemsOptions.itemsCssClass);\n    var $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    var $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\n\n    // TODO: Generate item's divs\n    var $headerDiv = div().html('<h1 class=\"si-header\">Items</h1>').appendTo($skedulerItemsEl);\n\n    var $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(function (el) {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    var operation = null;\n\n    var mouseUp = function mouseUp(event) {\n        if (operation == null) return;\n\n        var _operation = operation;\n        var $movingCard = _operation.$movingCard;\n        var $card = _operation.$card;\n\n        var siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        if (siEl.length !== 0) {\n            $movingCard.detach().css({ top: siEl[0].offsetTop, left: 0 }).height(siEl[0].clientHeight).width('auto').removeClass(settings.itemsOptions.itemCardCssClass + '-moving').addClass(settings.itemsOptions.itemCardCssClass + '-pinned').appendTo(siEl.parent());\n\n            $movingCard.on('mousedown', mouseDownOnCard);\n\n            $('.' + settings.itemsOptions.highlightItemCss).hide();\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    var mouseMove = function mouseMove(event) {\n        if (operation == null) return;\n\n        var _operation2 = operation;\n        var $movingCard = _operation2.$movingCard;\n\n        var offsetX = event.pageX,\n            offsetY = event.pageY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        // Higlight shifts\n        var _window = $ownerDocument[0].defaultView;\n        var x = event.pageX;\n        var y = event.pageY - _window.scrollY;\n\n        var rowHeight = settings.lineHeight + 1;\n        var rowsPerHour = settings.rowsPerHour;\n\n        // FIXME: index not found\n        var index = parseInt($movingCard.data('index'));\n        console.log(settings.itemsOptions.items, index);\n        var item = settings.itemsOptions.items[index];\n        var duration = item.duration;\n        var height = duration * (rowHeight * rowsPerHour / 60);\n\n        $shifts.each(function () {\n            var $this = $(this);\n            var elementBounding = this.getBoundingClientRect();\n\n            var matchResult = settings.itemsOptions.matchFunc(item, null);\n            //console.log(matchResult);\n            if (x > elementBounding.left && x < elementBounding.right && y > elementBounding.top && y < elementBounding.bottom && matchResult.match) {\n\n                var offsetTop = y - elementBounding.top;\n                var _top = Math.min(Math.max(0, (Math.floor(offsetTop / rowHeight) - 1) * rowHeight), this.clientHeight - height);\n                //console.log($this.find('.' + settings.itemsOptions.highlightItemCss));\n                $this.find('.' + settings.itemsOptions.highlightItemCss).css({ top: _top }).css('background-color', matchResult.color).height(height).show();\n            } else {\n                $this.find('.' + settings.itemsOptions.highlightItemCss).hide();\n            }\n        });\n    };\n\n    var mouseDownOnCard = function mouseDownOnCard(event /*: MouseEvent */) {\n        if (event.which !== 1) {\n            return;\n        }\n\n        var $skedulerWrapper = $('.' + settings.skedulerWrapperCssClass);\n        var $card = $(event.currentTarget);\n\n        var $movingCard = $card.clone().addClass(settings.itemsOptions.itemCardCssClass + '-moving').removeClass(settings.itemsOptions.itemCardCssClass + '-pinned').width($card.width()).appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        var offsetX = event.pageX,\n            offsetY = event.pageY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card: $card, $movingCard: $movingCard\n        };\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $skedulerItemsEl.find('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\n};\n\nexports['default'] = populateSkedulerItems;\nmodule.exports = exports['default'];\n\n},{\"../template\":6}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar defaultSettings = {\n    // Data attributes\n    headers: null, // String[] - Array of column headers\n    tasks: [], // Task[] - Array of tasks. Required fields:\n    // id: number, startTime: number, duration: number, column: number\n\n    // Card template - Inner content of task card.\n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function onClick(e, task) {},\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30, // height of one line in grid\n    borderWidth: 1, // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2, // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '',\n        items: [],\n        matchFunc: function matchFunc() {\n            return { match: true };\n        }\n    }\n};\n\nexports.defaultSettings = defaultSettings;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _settings = require('./settings');\n\nvar _items = require('./items');\n\nvar _items2 = _interopRequireDefault(_items);\n\nvar _template = require('./template');\n\nvar Skeduler = (function () {\n    function Skeduler($container, options) {\n        _classCallCheck(this, Skeduler);\n\n        this.settings = $.extend(true, _settings.defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null;\n        this.operation = null;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.populate();\n        if (this.settings.itemsOptions.enabled) {\n            (0, _items2['default'])(this.settings);\n        }\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    _createClass(Skeduler, [{\n        key: 'populate',\n        value: function populate() {\n            var _this = this;\n\n            this.$container.empty();\n            this.$container.addClass(this.settings.containerCssClass);\n\n            var headers = this.settings.headers ? this.settings.headers : this.settings.data.map(this.settings.getHeader);\n\n            var div = $('<div></div>');\n\n            // Add headers\n            this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\n            headers.forEach(function (element) {\n                div.clone().text(element).appendTo(_this.$headerContainer);\n            }, this);\n            this.$container.append(this.$headerContainer);\n\n            // Add scheduler\n            this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\n            var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\n            var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\n\n            var gridColumnElement = div.clone();\n\n            for (var i = 0; i < 24; i++) {\n                // Populate timeline\n                for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                    var timelineCell = div.clone().height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                    if (j == 0) {\n                        timelineCell = timelineCell.css(\"line-height\", this.settings.lineHeight + 'px').text(j == 0 ? this.toTimeString(i) : \"\");\n                    }\n                    timelineCell.appendTo(scheduleTimelineEl);\n\n                    div.clone().addClass(this.settings.cellCssClass).height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\").appendTo(gridColumnElement);\n                }\n            }\n\n            // Populate grid\n            for (var j = 0; j < headers.length; j++) {\n                var el = gridColumnElement.clone();\n\n                var tasksPlaceholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\n                this.appendTasks(tasksPlaceholder, this.settings.tasks.filter(function (t) {\n                    return t.column == j;\n                }));\n\n                // fixme [workingTimeIntervals must not use index]\n                var workingIntervalsPlaceholder = div.clone().addClass(this.settings.workingIntervalPlaceholderCssClass);\n                var intervals = this.settings.data.find(function (d) {\n                    return d.id === j + 1;\n                }).workingTimeIntervals;\n                this.appendAvailableInterval(workingIntervalsPlaceholder, intervals);\n\n                el.prepend(tasksPlaceholder);\n                el.prepend(workingIntervalsPlaceholder);\n                el.appendTo(scheduleBodyEl);\n\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            this.$scheduleEl.append(scheduleTimelineEl);\n            this.$scheduleEl.append(scheduleBodyEl);\n\n            this.$container.append(this.$scheduleEl);\n\n            // Set default width for columns\n            for (var j = 0; j < headers.length; j++) {\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            // Configure resizing\n            if (this.settings.columnResizeEnabled) {\n                this.configureResizing();\n            }\n        }\n    }, {\n        key: 'configureResizing',\n        value: function configureResizing() {\n            var _this2 = this;\n\n            var div = $('<div></div>');\n\n            var skedulerElResizableHandler = div.clone().addClass(this.settings.resizableHandlerCssClass);\n\n            this.$container.prepend(skedulerElResizableHandler);\n\n            skedulerElResizableHandler.width(this.$container.width());\n\n            var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n            var index = 0;\n            this.$headerContainer.find('div').each(function (_, el) {\n                div.clone().addClass(_this2.settings.resizableSliderCssClass).css('left', el.offsetLeft + el.clientWidth).height(resizableSliderHeight).data('column-id', index++).appendTo(skedulerElResizableHandler);\n            });\n\n            skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n        }\n\n        /**\n           * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n           */\n    }, {\n        key: 'toTimeString',\n        value: function toTimeString(value) {\n            return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n        }\n\n        /**\n         * Return height of task card based on duration of the task\n         * duration - in hours\n         */\n    }, {\n        key: 'getCardHeight',\n        value: function getCardHeight(duration) {\n            var durationInMinutes = duration * 60;\n            var heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n            return Math.ceil(durationInMinutes * heightOfMinute);\n        }\n\n        /**\n         * Return top offset of task card based on start time of the task\n         * startTime - in hours\n         */\n    }, {\n        key: 'getCardTopPosition',\n        value: function getCardTopPosition(startTime) {\n            var startTimeInt = this.parseTime(startTime);\n            return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n        }\n    }, {\n        key: 'parseTime',\n        value: function parseTime(time) {\n            return (/\\d{2}\\:\\d{2}/.test(time) ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 : parseInt(time)\n            );\n        }\n\n        /**\n        * Render card template\n        */\n    }, {\n        key: 'renderInnerCardContent',\n        value: function renderInnerCardContent(task) {\n            var template = this.settings.cardTemplate;\n            var result = (0, _template.compileTemplate)(template)(task);\n\n            return $(result);\n        }\n\n        /** \n         * Generate task cards\n         */\n    }, {\n        key: 'appendTasks',\n        value: function appendTasks(placeholder, tasks) {\n            var _this3 = this;\n\n            tasks.forEach(function (task) {\n                var innerContent = _this3.renderInnerCardContent(task);\n                var top = _this3.getCardTopPosition(task.startTime);\n                var height = _this3.getCardHeight(task.duration);\n\n                var card = $('<div></div>').attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\n                    title: _this3.toTimeString(task.startTime) + ' - ' + _this3.toTimeString(task.startTime + task.duration)\n                });\n                card.on('click', function (e) {\n                    _this3.settings.onClick && _this3.settings.onClick(e, task);\n                });\n                card.append(innerContent).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'appendAvailableInterval',\n        value: function appendAvailableInterval(placeholder, intervals) {\n            var _this4 = this;\n\n            var div = $('<div></div>');\n            intervals.forEach(function (interval) {\n                var innerContent = div.clone().text('Not allocated');\n                var top = _this4.getCardTopPosition(interval.start) + 2;\n                var duration = _this4.parseTime(interval.end) - _this4.parseTime(interval.start);\n                var height = _this4.getCardHeight(duration) - 5;\n\n                var skItemHightlightDiv = div.clone().addClass('si-highlight-item').hide();\n\n                var card = div.clone().attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n                card.append(innerContent).append(skItemHightlightDiv).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'onPointerUp',\n        value: function onPointerUp(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            this.$ownerDocument.off('mouseup');\n            this.$ownerDocument.off('mousemove');\n\n            this.operation = null;\n        }\n    }, {\n        key: 'onPointerMove',\n        value: function onPointerMove(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            // Determine the delta change between start and new mouse position, as a percentage of the table width\n            var difference = event.pageX - op.startX; // / this.$scheduleEl.width() * 100;\n            if (difference === 0) {\n                return;\n            }\n\n            var columnNumber = op.columnNumber;\n            var width = op.width + difference;\n            this.updateColumnWidth(columnNumber, width.toFixed(2));\n        }\n    }, {\n        key: 'onPointerDown',\n        value: function onPointerDown(event) {\n            // Only applies to left-click dragging\n            if (event.which !== 1) {\n                return;\n            }\n\n            // If a previous this.operation is defined, we missed the last mouseup.\n            // Probably gobbled up by user mousing out the window then releasing.\n            // We'll simulate a pointerup here prior to it\n            if (this.operation) {\n                this.onPointerUp(event);\n            }\n\n            var $currentGrip = $(event.currentTarget);\n            var columnNumber = $currentGrip.data('column-id');\n\n            var gripIndex = $currentGrip.index();\n            var $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n            var leftWidth = $leftColumn[0].clientWidth;\n\n            this.operation = {\n                columnNumber: columnNumber,\n                startX: event.pageX,\n                width: leftWidth\n            };\n\n            this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n            this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'updateColumnWidth',\n        value: function updateColumnWidth(columnNumber, width) {\n            width = Math.max(width, this.settings.minColumnWidth);\n            $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')').css('flex-basis', width + 'px');\n\n            var column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n            var diff = column.width() - width;\n            column.width(width);\n\n            $('.' + this.settings.resizableHandlerCssClass + ' > div').each(function (index, el) {\n                if (index >= columnNumber) {\n                    var $el = $(el);\n                    var left = parseInt($el.css('left').replace('px', ''));\n                    $el.css('left', left - diff);\n                }\n            });\n        }\n    }]);\n\n    return Skeduler;\n})();\n\nexports['default'] = Skeduler;\nmodule.exports = exports['default'];\n\n},{\"./items\":3,\"./settings\":4,\"./template\":6}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar compileTemplate = function compileTemplate(template, funcs) {\n    return function (item) {\n        var result = template;\n        var regKeys = /\\$\\{(\\w+)\\}/g;\n        var regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n        var match = 1;\n        while (true) {\n            match = regKeys.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (item.hasOwnProperty(key)) {\n                result = result.replace(match[0], item[key]);\n            }\n        }\n\n        while (funcs) {\n            match = regFuncs.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (funcs.hasOwnProperty(key)) {\n                result = result.replace(match[0], funcs[key](item));\n            }\n        }\n\n        return result;\n    };\n};\n\nexports[\"default\"] = { compileTemplate: compileTemplate };\nmodule.exports = exports[\"default\"];\n\n},{}]},{},[2])\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import Skeduler from './skeduler';\n\n// export type Task = {\n//     id: number;\n//     startTime: number;\n//     duration: number;\n//     column: number\n// }\n\n// export type Options = {\n//     headers: string[];\n//     tasks: Task[];\n//     containerCssClass: string;\n//     headerContainerCssClass: string;\n//     schedulerContainerCssClass: string;\n//     lineHeight: number;\n//     borderWidth: number;\n// }\n\n/**\n* Generate scheduler grid with task cards\n* options:\n* - headers: string[] - array of headers\n* - tasks: Task[] - array of tasks\n* - containerCssClass: string - css class of main container\n* - headerContainerCssClass: string - css class of header container\n* - schedulerContainerCssClass: string - css class of scheduler\n* - lineHeight - height of one half-hour cell in grid\n* - borderWidth - width of border of cell in grid\n*/\n$.fn.skeduler = function (options) {\n    return this.each(function () {\n        let $container = $(this);\n \n        var skeduler = new Skeduler($container, options);\n    });\n};\n\n$.skeduler = Skeduler;\n","import Skeduler from './skeduler';\nimport adapter from './adapter';\n\nexport default Skeduler;","import { compileTemplate } from '../template';\n\nconst div = (cssClass) => $('<div></div>').addClass(cssClass);\n\nconst getItemDivs = (settings) => {\n    const $div = div(settings.itemsOptions.itemCardCssClass);\n    const items = settings.itemsOptions.items;\n    const template = compileTemplate(settings.itemsOptions.itemCardTemplate, {\n        time: (item) => item.iterval ? `${item.iterval.start} to ${item.iterval.end}` : ''\n    });\n\n    return items.map((item, index) => $div.clone()\n        .data('index', index)\n        .html(template(item))\n    );\n}\n\nconst populateSkedulerItems = (settings) => {\n    const $skedulerItemsEl = $(settings.itemsOptions.containerSelector)\n        .empty()\n        .addClass(settings.itemsOptions.itemsCssClass);\n    const $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    const $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\n\n    // TODO: Generate item's divs\n    const $headerDiv = div()\n        .html('<h1 class=\"si-header\">Items</h1>')\n        .appendTo($skedulerItemsEl);\n\n    const $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(el => {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    let operation = null;\n\n    const mouseUp = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard, $card } = operation;\n\n        const siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        if (siEl.length !== 0) {\n            $movingCard\n                .detach()\n                .css({ top: siEl[0].offsetTop, left: 0 })\n                .height(siEl[0].clientHeight)\n                .width('auto')\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n                .appendTo(siEl.parent());\n\n            $movingCard.on('mousedown', mouseDownOnCard);\n\n            $('.' + settings.itemsOptions.highlightItemCss).hide();\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    const mouseMove = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard } = operation;\n\n        const offsetX = event.pageX,\n            offsetY = event.pageY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        // Higlight shifts\n        const _window = $ownerDocument[0].defaultView;\n        const x = event.pageX;\n        const y = event.pageY - _window.scrollY;\n\n        const rowHeight = settings.lineHeight + 1;\n        const rowsPerHour = settings.rowsPerHour;\n\n        // FIXME: index not found\n        const index = parseInt($movingCard.data('index'));\n        console.log(settings.itemsOptions.items, index);\n        const item = settings.itemsOptions.items[index];\n        const duration = item.duration;\n        const height = duration * (rowHeight * rowsPerHour / 60);\n\n        $shifts.each(function () {\n            const $this = $(this);\n            const elementBounding = this.getBoundingClientRect();\n\n            const matchResult = settings.itemsOptions.matchFunc(item, null);\n            //console.log(matchResult);\n            if (x > elementBounding.left && x < elementBounding.right\n                && y > elementBounding.top && y < elementBounding.bottom\n                && matchResult.match) {\n\n                const offsetTop = y - elementBounding.top;\n                const top = Math.min(\n                    Math.max(0, (Math.floor(offsetTop / rowHeight) - 1) * rowHeight),\n                    this.clientHeight - height\n                );\n                //console.log($this.find('.' + settings.itemsOptions.highlightItemCss));\n                $this\n                    .find('.' + settings.itemsOptions.highlightItemCss)\n                    .css({ top: top })\n                    .css('background-color', matchResult.color)\n                    .height(height)\n                    .show();\n\n            } else {\n                $this.find('.' + settings.itemsOptions.highlightItemCss).hide();\n            }\n        });\n    };\n\n    const mouseDownOnCard = (event /*: MouseEvent */) => {\n        if (event.which !== 1) { return; }\n\n        const $skedulerWrapper = $(`.${settings.skedulerWrapperCssClass}`);\n        const $card = $(event.currentTarget);\n\n        const $movingCard =\n            $card.clone()\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n                .width($card.width())\n                .appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        const offsetX = event.pageX,\n            offsetY = event.pageY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card, $movingCard\n        };\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $skedulerItemsEl.find('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\n}\n\nexport default populateSkedulerItems;","const defaultSettings = {\n    // Data attributes\n    headers: null,  // String[] - Array of column headers\n    tasks: [],    // Task[] - Array of tasks. Required fields: \n    // id: number, startTime: number, duration: number, column: number\n\n    // Card template - Inner content of task card. \n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function (e, task) { },\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30,         // height of one line in grid\n    borderWidth: 1,         // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2,         // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '',\n        items: [],\n        matchFunc: () => { return { match: true } }\n    }\n};\n\nexport { defaultSettings };","import { defaultSettings } from './settings';\nimport populateSkedulerItems from './items';\nimport { compileTemplate } from './template';\n\nclass Skeduler {\n    constructor($container, options) {\n        this.settings = $.extend(true, defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null\n        this.operation = null;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.populate();\n        if (this.settings.itemsOptions.enabled) {\n            populateSkedulerItems(this.settings);\n        }\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    populate() {\n        this.$container.empty();\n        this.$container.addClass(this.settings.containerCssClass);\n\n        const headers = this.settings.headers\n            ? this.settings.headers\n            : this.settings.data.map(this.settings.getHeader);\n\n        const div = $('<div></div>');\n\n        // Add headers\n        this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\n        headers.forEach((element) => {\n            div.clone()\n                .text(element)\n                .appendTo(this.$headerContainer);\n        }, this);\n        this.$container.append(this.$headerContainer);\n\n        // Add scheduler\n        this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\n        var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\n        var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\n\n        var gridColumnElement = div.clone();\n\n        for (var i = 0; i < 24; i++) {\n            // Populate timeline\n            for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                var timelineCell = div.clone()\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                if (j == 0) {\n                    timelineCell = timelineCell\n                        .css(\"line-height\", this.settings.lineHeight + 'px')\n                        .text(j == 0 ? this.toTimeString(i) : \"\");\n                }\n                timelineCell.appendTo(scheduleTimelineEl);\n\n                div.clone()\n                    .addClass(this.settings.cellCssClass)\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\")\n                    .appendTo(gridColumnElement);\n            }\n        }\n\n        // Populate grid\n        for (var j = 0; j < headers.length; j++) {\n            var el = gridColumnElement.clone();\n\n            var tasksPlaceholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\n            this.appendTasks(tasksPlaceholder, this.settings.tasks.filter(t => t.column == j));\n\n            // fixme [workingTimeIntervals must not use index]\n            var workingIntervalsPlaceholder = div.clone().addClass(this.settings.workingIntervalPlaceholderCssClass);\n            var intervals = this.settings.data.find(d => d.id === j + 1).workingTimeIntervals;\n            this.appendAvailableInterval(workingIntervalsPlaceholder, intervals);\n\n            el.prepend(tasksPlaceholder);\n            el.prepend(workingIntervalsPlaceholder);\n            el.appendTo(scheduleBodyEl);\n\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        this.$scheduleEl.append(scheduleTimelineEl);\n        this.$scheduleEl.append(scheduleBodyEl);\n\n        this.$container.append(this.$scheduleEl);\n\n        // Set default width for columns\n        for (var j = 0; j < headers.length; j++) {\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        // Configure resizing\n        if (this.settings.columnResizeEnabled) {\n            this.configureResizing();\n        }\n    }\n\n    configureResizing() {\n        const div = $('<div></div>');\n\n        const skedulerElResizableHandler = div.clone()\n            .addClass(this.settings.resizableHandlerCssClass);\n\n        this.$container.prepend(skedulerElResizableHandler);\n\n        skedulerElResizableHandler.width(this.$container.width());\n\n        const resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n        let index = 0;\n        this.$headerContainer.find('div').each((_, el) => {\n            div.clone()\n                .addClass(this.settings.resizableSliderCssClass)\n                .css('left', el.offsetLeft + el.clientWidth)\n                .height(resizableSliderHeight)\n                .data('column-id', index++)\n                .appendTo(skedulerElResizableHandler)\n        });\n\n        skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n    }\n\n    /**\n       * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n       */\n    toTimeString(value) {\n        return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n    }\n\n    /**\n     * Return height of task card based on duration of the task\n     * duration - in hours\n     */\n    getCardHeight(duration) {\n        const durationInMinutes = duration * 60;\n        const heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n        return Math.ceil(durationInMinutes * heightOfMinute);\n    }\n\n    /**\n     * Return top offset of task card based on start time of the task\n     * startTime - in hours\n     */\n    getCardTopPosition(startTime) {\n        const startTimeInt = this.parseTime(startTime);\n        return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n    }\n\n    parseTime(time) {\n        return /\\d{2}\\:\\d{2}/.test(time)\n            ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60\n            : parseInt(time);\n    }\n\n    /**\n    * Render card template\n    */\n    renderInnerCardContent(task) {\n        const template = this.settings.cardTemplate;\n        const result = compileTemplate(template)(task);\n\n        return $(result);\n    }\n\n    /** \n     * Generate task cards\n     */\n    appendTasks(placeholder, tasks) {\n        tasks.forEach((task) => {\n            var innerContent = this.renderInnerCardContent(task);\n            var top = this.getCardTopPosition(task.startTime);\n            var height = this.getCardHeight(task.duration);\n\n            var card = $('<div></div>')\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\n                    title: this.toTimeString(task.startTime) + ' - ' + this.toTimeString(task.startTime + task.duration)\n                });\n            card.on('click', (e) => { this.settings.onClick && this.settings.onClick(e, task) });\n            card.append(innerContent)\n                .appendTo(placeholder);\n        }, this);\n    }\n\n    appendAvailableInterval(placeholder, intervals) {\n        const div = $('<div></div>');\n        intervals.forEach((interval) => {\n            const innerContent = div.clone().text('Not allocated');\n            const top = this.getCardTopPosition(interval.start) + 2;\n            const duration = this.parseTime(interval.end) - this.parseTime(interval.start);\n            const height = this.getCardHeight(duration) - 5;\n\n            const skItemHightlightDiv = div.clone()\n                .addClass('si-highlight-item')\n                .hide();\n\n            const card = div.clone()\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n            card.append(innerContent)\n                .append(skItemHightlightDiv)\n                .appendTo(placeholder);\n\n        }, this);\n    }\n\n    onPointerUp(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        this.$ownerDocument.off('mouseup');\n        this.$ownerDocument.off('mousemove');\n\n        this.operation = null;\n    }\n\n    onPointerMove(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        // Determine the delta change between start and new mouse position, as a percentage of the table width\n        let difference = (event.pageX - op.startX);// / this.$scheduleEl.width() * 100;\n        if (difference === 0) {\n            return;\n        }\n\n        let columnNumber = op.columnNumber;\n        let width = op.width + difference;\n        this.updateColumnWidth(columnNumber, width.toFixed(2));\n    }\n\n    onPointerDown(event) {\n        // Only applies to left-click dragging\n        if (event.which !== 1) { return; }\n\n        // If a previous this.operation is defined, we missed the last mouseup.\n        // Probably gobbled up by user mousing out the window then releasing.\n        // We'll simulate a pointerup here prior to it\n        if (this.operation) {\n            this.onPointerUp(event);\n        }\n\n        let $currentGrip = $(event.currentTarget);\n        let columnNumber = $currentGrip.data('column-id');\n\n        let gripIndex = $currentGrip.index();\n        let $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n        let leftWidth = $leftColumn[0].clientWidth;\n\n        this.operation = {\n            columnNumber,\n            startX: event.pageX,\n            width: leftWidth\n        };\n\n        this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n        this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n        event.preventDefault();\n    }\n\n    updateColumnWidth(columnNumber, width) {\n        width = Math.max(width, this.settings.minColumnWidth);\n        $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')')\n            .css('flex-basis', width + 'px');\n\n        let column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n        var diff = column.width() - width;\n        column.width(width);\n\n        $('.' + this.settings.resizableHandlerCssClass + ' > div').each((index, el) => {\n            if (index >= columnNumber) {\n                let $el = $(el);\n                let left = parseInt($el.css('left').replace('px', ''));\n                $el.css('left', left - diff);\n            }\n        });\n    }\n}\n\nexport default Skeduler;\n","const compileTemplate = (template, funcs) => item => {\n    let result = template;\n    const regKeys = /\\$\\{(\\w+)\\}/g;\n    const regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n    let match = 1;\n    while (true) {\n        match = regKeys.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (item.hasOwnProperty(key)) {\n            result = result.replace(match[0], item[key]);\n        }\n    }\n\n    while (funcs) {\n        match = regFuncs.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (funcs.hasOwnProperty(key)) {\n            result = result.replace(match[0], funcs[key](item));\n        }\n    }\n\n    return result;\n}\n\nexport default { compileTemplate };"]}