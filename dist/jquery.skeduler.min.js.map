{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jquery.skeduler.js","src/adapter.js","src/index.js","src/items/index.js","src/settings.js","src/skeduler.js","src/template/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_skeduler","_skeduler2","$","fn","skeduler","options","$container","this","./skeduler","2","Object","defineProperty","value","_adapter","./adapter","3","_template","div","cssClass","addClass","getItemDivs","settings","$div","itemsOptions","itemCardCssClass","items","template","compileTemplate","itemCardTemplate","time","item","interval","start","end","map","clone","data","index","html","populateSkedulerItems","$skedulerItemsEl","containerSelector","empty","itemsCssClass","$ownerDocument","ownerDocument","$shifts","workingIntervalPlaceholderCssClass","$skedulerItemsContainerEl","title","appendTo","$items","forEach","el","append","operation","mouseUp","event","_operation","$movingCard","$card","$siEl","highlightItemCss","rowHeight","lineHeight","parseInt","isAssigned","tasks","offsetInMinutes","rowsPerHour","offsetTop","parent","workingTimeIntervals","onItemWillBeAssigned","detach","css","top","left","height","clientHeight","width","removeClass","on","mouseDownOnCard","remove","show","hide","off","mouseMove","_operation2","offsetX","offsetY","newOffsetX","pageX","newOffsetY","pageY","_window","defaultView","x","y","scrollY","duration","each","$this","elementBounding","getBoundingClientRect","$el","find","right","bottom","rowCount","Math","floor","_top","min","max","matchResult","matchFunc","color","match","which","$skedulerWrapper","skedulerWrapperCssClass","currentTarget","preventDefault","../template","4","defaultSettings","headers","notAllocatedLabel","cardTemplate","onClick","task","containerCssClass","headerContainerCssClass","schedulerContainerCssClass","taskPlaceholderCssClass","cellCssClass","resizableHandlerCssClass","resizableSliderCssClass","borderWidth","columnWidth","minColumnWidth","columnResizeEnabled","debug","enabled","5","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_settings","_items","_items2","Skeduler","extend","$headerContainer","$scheduleEl","resizeAllColumns","console","refresh","timeEnd","assign","log","populate","_this","getHeader","element","text","scheduleTimelineEl","scheduleBodyEl","gridColumnElement","j","timelineCell","toTimeString","workingIntervalsPlaceholder","intervals","appendAvailableInterval","prepend","updateColumnWidth","configureResizing","_this2","skedulerElResizableHandler","resizableSliderHeight","_","offsetLeft","clientWidth","onPointerDown","bind","placeholder","column","_this3","innerContent","getCardTopPosition","parseTime","getCardHeight","skItemHightlightDiv","shiftDiv","attr","style","appendTasks","filter","intervalStart","_this4","getItemDiv","op","difference","startX","columnNumber","toFixed","onPointerUp","$currentGrip","gripIndex","$leftColumn","eq","leftWidth","onPointerMove","diff","replace","ceil","durationInMinutes","heightOfMinute","startTime","offsetTime","startTimeInt","test","split","./items","./settings","./template","6","funcs","result","regKeys","regFuncs","exec","hasOwnProperty"],"mappings":"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","file":"jquery.skeduler.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * jquery-skeduler - This is jQuery plugin which provider you simple scheduler with some items on OX and 24-hours timeline on OY.\n * @date Mon Aug 14 2017 00:00:55 GMT+1000 (+10)\n * @version v0.2.0-beta.0\n * @link \n * @license ISC\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\n/**\n * Generate scheduler grid with task cards\n * options:\n * - headers: string[] - array of headers\n * - tasks: Task[] - array of tasks\n * - containerCssClass: string - css class of main container\n * - headerContainerCssClass: string - css class of header container\n * - schedulerContainerCssClass: string - css class of scheduler\n * - lineHeight - height of one half-hour cell in grid\n * - borderWidth - width of border of cell in grid\n */\n$.fn.skeduler = function (options) {\n  var $container = $(this);\n  var skeduler = new _skeduler2['default']($container, options);\n\n  return skeduler;\n};\n\n$.skeduler = _skeduler2['default'];\n\n},{\"./skeduler\":5}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nexports['default'] = _skeduler2['default'];\nmodule.exports = exports['default'];\n\n},{\"./adapter\":1,\"./skeduler\":5}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _template = require('../template');\n\nvar div = function div(cssClass) {\n    return $('<div></div>').addClass(cssClass);\n};\n\nvar getItemDivs = function getItemDivs(settings) {\n    var $div = div(settings.itemsOptions.itemCardCssClass);\n    var items = settings.itemsOptions.items;\n    var template = (0, _template.compileTemplate)(settings.itemsOptions.itemCardTemplate, {\n        time: function time(item) {\n            return item.interval ? item.interval.start + ' to ' + item.interval.end : '';\n        }\n    });\n\n    return items.map(function (item) {\n        return $div.clone().data('index', item.index).html(template(item));\n    });\n};\n\nvar populateSkedulerItems = function populateSkedulerItems(settings) {\n    var $skedulerItemsEl = $(settings.itemsOptions.containerSelector).empty().addClass(settings.itemsOptions.itemsCssClass);\n    var $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    var $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\n\n    var $headerDiv = div().html('<h1 class=\"si-header\">' + settings.itemsOptions.title + '</h1>').appendTo($skedulerItemsEl);\n\n    var $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(function (el) {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    var operation = null;\n\n    var mouseUp = function mouseUp(event) {\n        if (operation == null) return;\n\n        var _operation = operation;\n        var $movingCard = _operation.$movingCard;\n        var $card = _operation.$card;\n\n        var $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        if ($siEl.length !== 0 && $siEl.data('match') == 1) {\n            var rowHeight = settings.lineHeight + 1;\n            var index = parseInt($movingCard.data('index'));\n            var isAssigned = !!$movingCard.data('assigned');\n            var item = isAssigned ? settings.tasks[index].item : settings.itemsOptions.items[index];\n            var offsetInMinutes = 60 / settings.rowsPerHour * ($movingCard[0].offsetTop / rowHeight); // <<== FIXME\n            var interval = settings.data[$siEl.parent().data('column')].workingTimeIntervals[$siEl.parent().data('item-index')];\n\n            settings.itemsOptions.onItemWillBeAssigned && settings.itemsOptions.onItemWillBeAssigned({ item: item, interval: interval, offsetInMinutes: offsetInMinutes });\n\n            $movingCard.detach().css({ top: $siEl[0].offsetTop, left: 0 }).height($siEl[0].clientHeight).width('auto').data('assigned', 1).removeClass(settings.itemsOptions.itemCardCssClass + '-moving').addClass(settings.itemsOptions.itemCardCssClass + '-pinned').appendTo($siEl.parent());\n\n            $movingCard.on('mousedown', mouseDownOnCard);\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    var mouseMove = function mouseMove(event) {\n        if (operation == null) return;\n\n        var _operation2 = operation;\n        var $movingCard = _operation2.$movingCard;\n        var offsetX = _operation2.offsetX;\n        var offsetY = _operation2.offsetY;\n\n        var newOffsetX = event.pageX - offsetX,\n            newOffsetY = event.pageY - offsetY;\n\n        $movingCard.css({\n            top: newOffsetY + 'px',\n            left: newOffsetX + 'px'\n        });\n\n        // Higlight shifts\n        var _window = $ownerDocument[0].defaultView;\n        var x = event.pageX;\n        var y = event.pageY - _window.scrollY;\n\n        var rowHeight = settings.lineHeight + 1;\n        var rowsPerHour = settings.rowsPerHour;\n\n        var index = parseInt($movingCard.data('index'));\n        var item = settings.itemsOptions.items[index];\n        var duration = item.duration;\n        var height = duration * (rowHeight * rowsPerHour / 60);\n\n        $shifts.each(function () {\n            var $this = $(this);\n            var elementBounding = this.getBoundingClientRect();\n            var $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\n\n            if (x > elementBounding.left && x < elementBounding.right && y > elementBounding.top && y < elementBounding.bottom) {\n\n                var offsetTop = y - elementBounding.top;\n                var rowCount = Math.floor(offsetTop / rowHeight) - 1;\n                var _top = Math.min(Math.max(0, rowCount * rowHeight), this.clientHeight - height);\n\n                var offsetInMinutes = 60 / settings.rowsPerHour * (_top / rowHeight); // <<== FIXME\n                var interval = settings.data[$this.data('column')].workingTimeIntervals[$this.data('item-index')];\n                var matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\n\n                $el.css({ top: _top }).css('background-color', matchResult.color).height(height).show();\n\n                $el.data('match', +matchResult.match);\n            } else {\n                $el.data('match', 0);\n                $el.hide();\n            }\n        });\n    };\n\n    var mouseDownOnCard = function mouseDownOnCard(event /*: MouseEvent */) {\n        if (event.which !== 1) {\n            return;\n        }\n\n        var $skedulerWrapper = $('.' + settings.skedulerWrapperCssClass);\n        var $card = $(event.currentTarget);\n\n        var $movingCard = $card.clone().data('index', $card.data('index')).addClass(settings.itemsOptions.itemCardCssClass + '-moving').removeClass(settings.itemsOptions.itemCardCssClass + '-pinned').width($card.width()).appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        var offsetX = event.pageX - event.offsetX,\n            offsetY = event.pageY - event.offsetY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card: $card,\n            $movingCard: $movingCard,\n            offsetX: event.offsetX,\n            offsetY: event.offsetY\n        };\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\n};\n\nexports['default'] = populateSkedulerItems;\nmodule.exports = exports['default'];\n\n},{\"../template\":6}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar defaultSettings = {\n    // Data attributes\n    headers: null, // string[] - Array of column headers\n    tasks: [], // Task[] - Array of tasks. Required fields:\n    // id: number, startTime: number, duration: number, column: number\n\n    notAllocatedLabel: 'Not allocated',\n\n    // Card template - Inner content of task card.\n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function onClick(e, task) {},\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30, // height of one line in grid\n    borderWidth: 1, // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2, // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '<div>${duration}</div>',\n        items: [],\n        title: 'Items',\n        matchFunc: function matchFunc() {\n            return { match: true };\n        }\n    }\n};\n\nexports.defaultSettings = defaultSettings;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _settings = require('./settings');\n\nvar _items = require('./items');\n\nvar _items2 = _interopRequireDefault(_items);\n\nvar _template = require('./template');\n\nvar div = function div(cssClass) {\n    return $('<div></div>').addClass(cssClass);\n};\n\nvar Skeduler = (function () {\n    function Skeduler($container, options) {\n        _classCallCheck(this, Skeduler);\n\n        this.settings = $.extend(true, _settings.defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null;\n        this.operation = null;\n        this.resizeAllColumns = true;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.refresh();\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    _createClass(Skeduler, [{\n        key: 'setRowsPerHour',\n        value: function setRowsPerHour(rowsPerHour) {\n            this.settings.rowsPerHour = rowsPerHour;\n            this.refresh();\n        }\n    }, {\n        key: 'setResizeAllColumns',\n        value: function setResizeAllColumns(resizeAllColumns) {\n            this.resizeAllColumns = resizeAllColumns;\n        }\n    }, {\n        key: 'refresh',\n        value: function refresh() {\n            this.settings.itemsOptions.items = this.settings.itemsOptions.items && this.settings.itemsOptions.items.map(function (item, index) {\n                return Object.assign({}, { index: index }, item);\n            }) || [];\n            this.settings.tasks = this.settings.tasks && this.settings.tasks.map(function (task, index) {\n                task.item = Object.assign({}, { index: index }, task.item);\n                return task;\n            }) || [];\n\n            console.log(this.settings.itemsOptions.items, this.settings.tasks);\n\n            this.populate();\n            if (this.settings.itemsOptions.enabled) {\n                (0, _items2['default'])(this.settings);\n            }\n        }\n    }, {\n        key: 'populate',\n        value: function populate() {\n            var _this = this;\n\n            this.$container.empty();\n            this.$container.addClass(this.settings.containerCssClass);\n\n            var headers = this.settings.headers ? this.settings.headers : this.settings.data.map(this.settings.getHeader);\n\n            // Add headers\n            this.$headerContainer = div(this.settings.headerContainerCssClass);\n            headers.forEach(function (element) {\n                div().text(element).appendTo(_this.$headerContainer);\n            }, this);\n            this.$container.append(this.$headerContainer);\n\n            // Add scheduler\n            this.$scheduleEl = div(this.settings.schedulerContainerCssClass);\n            var scheduleTimelineEl = div(this.settings.schedulerContainerCssClass + '-timeline');\n            var scheduleBodyEl = div(this.settings.schedulerContainerCssClass + '-body');\n\n            var gridColumnElement = div();\n\n            for (var i = 0; i < 24; i++) {\n                // Populate timeline\n                for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                    var timelineCell = div().height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                    if (j == 0) {\n                        timelineCell = timelineCell.css(\"line-height\", this.settings.lineHeight + 'px').text(j == 0 ? this.toTimeString(i) : \"\");\n                    }\n                    timelineCell.appendTo(scheduleTimelineEl);\n\n                    div(this.settings.cellCssClass).height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\").appendTo(gridColumnElement);\n                }\n            }\n\n            // Populate grid\n            for (var j = 0; j < headers.length; j++) {\n                var el = gridColumnElement.clone();\n\n                // fixme [workingTimeIntervals must not use index]\n                var workingIntervalsPlaceholder = div(this.settings.workingIntervalPlaceholderCssClass);\n                var intervals = this.settings.data[j].workingTimeIntervals;\n                this.appendAvailableInterval(workingIntervalsPlaceholder, intervals, j);\n\n                el.prepend(workingIntervalsPlaceholder);\n                el.appendTo(scheduleBodyEl);\n\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            this.$scheduleEl.append(scheduleTimelineEl);\n            this.$scheduleEl.append(scheduleBodyEl);\n\n            this.$container.append(this.$scheduleEl);\n\n            // Set default width for columns\n            for (var j = 0; j < headers.length; j++) {\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            // Configure resizing\n            if (this.settings.columnResizeEnabled) {\n                this.configureResizing();\n            }\n        }\n    }, {\n        key: 'configureResizing',\n        value: function configureResizing() {\n            var _this2 = this;\n\n            var skedulerElResizableHandler = div(this.settings.resizableHandlerCssClass);\n\n            this.$container.prepend(skedulerElResizableHandler);\n\n            skedulerElResizableHandler.width(this.$container.width());\n\n            var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n            var index = 0;\n            this.$headerContainer.find('div').each(function (_, el) {\n                div(_this2.settings.resizableSliderCssClass).css('left', el.offsetLeft + el.clientWidth).height(resizableSliderHeight).data('column-id', index++).appendTo(skedulerElResizableHandler);\n            });\n\n            skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n        }\n    }, {\n        key: 'appendAvailableInterval',\n        value: function appendAvailableInterval(placeholder, intervals, column) {\n            var _this3 = this;\n\n            intervals.forEach(function (interval, index) {\n                var innerContent = div().text(_this3.settings.notAllocatedLabel);\n                var top = _this3.getCardTopPosition(interval.start) + 2;\n                var duration = _this3.parseTime(interval.end) - _this3.parseTime(interval.start);\n                var height = _this3.getCardHeight(duration) - 5;\n\n                var skItemHightlightDiv = div('si-highlight-item').hide();\n\n                var shiftDiv = div().attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n                shiftDiv.data('column', column).data('item-index', index).append(innerContent).append(skItemHightlightDiv).appendTo(placeholder);\n\n                _this3.appendTasks(shiftDiv, interval.start, _this3.settings.tasks.filter(function (t) {\n                    return t.column == column;\n                }));\n                // TODO: ^^^ filter by shift interval too\n            }, this);\n        }\n\n        /** \n         * Generate task cards\n         */\n    }, {\n        key: 'appendTasks',\n        value: function appendTasks(placeholder, intervalStart, tasks) {\n            var _this4 = this;\n\n            tasks.forEach(function (task) {\n                var top = _this4.getCardTopPosition(task.start, intervalStart);\n                var height = _this4.getCardHeight(task.item.duration / 60);\n\n                _this4.getItemDiv(task.item).attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                }).addClass('' + _this4.settings.itemsOptions.itemCardCssClass).addClass(_this4.settings.itemsOptions.itemCardCssClass + '-pinned').width('auto').data('index', task.item.index).data('assigned', 1).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'onPointerUp',\n        value: function onPointerUp(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            this.$ownerDocument.off('mouseup');\n            this.$ownerDocument.off('mousemove');\n\n            this.operation = null;\n        }\n    }, {\n        key: 'onPointerMove',\n        value: function onPointerMove(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            // Determine the delta change between start and new mouse position, as a percentage of the table width\n            var difference = event.pageX - op.startX; // / this.$scheduleEl.width() * 100;\n            if (difference === 0) {\n                return;\n            }\n\n            var columnNumber = op.columnNumber;\n            var width = op.width + difference;\n            if (this.resizeAllColumns) {\n                for (var i = 0; i < this.settings.data.length; i++) {\n                    this.updateColumnWidth(i, width.toFixed(2));\n                }\n            } else {\n                this.updateColumnWidth(columnNumber, width.toFixed(2));\n            }\n        }\n    }, {\n        key: 'onPointerDown',\n        value: function onPointerDown(event) {\n            // Only applies to left-click dragging\n            if (event.which !== 1) {\n                return;\n            }\n\n            // If a previous this.operation is defined, we missed the last mouseup.\n            // Probably gobbled up by user mousing out the window then releasing.\n            // We'll simulate a pointerup here prior to it\n            if (this.operation) {\n                this.onPointerUp(event);\n            }\n\n            var $currentGrip = $(event.currentTarget);\n            var columnNumber = $currentGrip.data('column-id');\n\n            var gripIndex = $currentGrip.index();\n            var $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n            var leftWidth = $leftColumn[0].clientWidth;\n\n            this.operation = {\n                columnNumber: columnNumber,\n                startX: event.pageX,\n                width: leftWidth\n            };\n\n            this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n            this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'updateColumnWidth',\n        value: function updateColumnWidth(columnNumber, width) {\n            width = Math.max(width, this.settings.minColumnWidth);\n            $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')').css('flex-basis', width + 'px');\n\n            var column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n            var diff = column.width() - width;\n            column.width(width);\n\n            $('.' + this.settings.resizableHandlerCssClass + ' > div').each(function (index, el) {\n                if (index >= columnNumber) {\n                    var $el = $(el);\n                    var left = parseInt($el.css('left').replace('px', ''));\n                    $el.css('left', left - diff);\n                }\n            });\n        }\n    }, {\n        key: 'getItemDiv',\n        value: function getItemDiv(item) {\n            var $div = div(this.settings.itemsOptions.itemCardCssClass);\n            var template = (0, _template.compileTemplate)(this.settings.itemsOptions.itemCardTemplate, {\n                time: function time(item) {\n                    return item.interval ? item.interval.start + ' to ' + item.interval.end : '';\n                }\n            });\n\n            return div().html(template(item));\n        }\n\n        /**\n        * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n        */\n    }, {\n        key: 'toTimeString',\n        value: function toTimeString(value) {\n            return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n        }\n\n        /**\n         * Return height of task card based on duration of the task\n         * duration - in hours\n         */\n    }, {\n        key: 'getCardHeight',\n        value: function getCardHeight(duration) {\n            var durationInMinutes = duration * 60;\n            var heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n            return Math.ceil(durationInMinutes * heightOfMinute);\n        }\n\n        /**\n         * Return top offset of task card based on start time of the task\n         * startTime - in hours\n         */\n    }, {\n        key: 'getCardTopPosition',\n        value: function getCardTopPosition(startTime, offsetTime) {\n            var startTimeInt = this.parseTime(startTime);\n            if (offsetTime) {\n                startTimeInt -= this.parseTime(offsetTime);\n            }\n            return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n        }\n\n        /**\n         * Parse time string and present it in hours (ex. '13:30' => 13.5)\n         * @param {*string} time - time in format like '13:50', '11:00', '14'\n         */\n    }, {\n        key: 'parseTime',\n        value: function parseTime(time) {\n            return (/\\d{1,2}\\:\\d{2}/.test(time) ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 : parseInt(time)\n            );\n        }\n    }]);\n\n    return Skeduler;\n})();\n\nexports['default'] = Skeduler;\nmodule.exports = exports['default'];\n\n},{\"./items\":3,\"./settings\":4,\"./template\":6}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar compileTemplate = function compileTemplate(template, funcs) {\n    return function (item) {\n        var result = template;\n        var regKeys = /\\$\\{(\\w+)\\}/g;\n        var regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n        var match = 1;\n        while (true) {\n            match = regKeys.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (item.hasOwnProperty(key)) {\n                result = result.replace(match[0], item[key]);\n            }\n        }\n\n        while (funcs) {\n            match = regFuncs.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (funcs.hasOwnProperty(key)) {\n                result = result.replace(match[0], funcs[key](item));\n            }\n        }\n\n        return result;\n    };\n};\n\nexports[\"default\"] = { compileTemplate: compileTemplate };\nmodule.exports = exports[\"default\"];\n\n},{}]},{},[2])\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import Skeduler from './skeduler';\n\n/**\n * Generate scheduler grid with task cards\n * options:\n * - headers: string[] - array of headers\n * - tasks: Task[] - array of tasks\n * - containerCssClass: string - css class of main container\n * - headerContainerCssClass: string - css class of header container\n * - schedulerContainerCssClass: string - css class of scheduler\n * - lineHeight - height of one half-hour cell in grid\n * - borderWidth - width of border of cell in grid\n */\n$.fn.skeduler = function(options) {\n    let $container = $(this);\n    var skeduler = new Skeduler($container, options);\n\n    return skeduler;\n};\n\n$.skeduler = Skeduler;","import Skeduler from './skeduler';\nimport adapter from './adapter';\n\nexport default Skeduler;","import { compileTemplate } from '../template';\n\nconst div = (cssClass) => $('<div></div>').addClass(cssClass);\n\nconst getItemDivs = (settings) => {\n    const $div = div(settings.itemsOptions.itemCardCssClass);\n    const items = settings.itemsOptions.items;\n    const template = compileTemplate(settings.itemsOptions.itemCardTemplate, {\n        time: (item) => item.interval ? `${item.interval.start} to ${item.interval.end}` : ''\n    });\n\n    return items.map((item) => $div.clone()\n        .data('index', item.index)\n        .html(template(item))\n    );\n}\n\nconst populateSkedulerItems = (settings) => {\n    const $skedulerItemsEl = $(settings.itemsOptions.containerSelector)\n        .empty()\n        .addClass(settings.itemsOptions.itemsCssClass);\n    const $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    const $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\n\n    const $headerDiv = div()\n        .html('<h1 class=\"si-header\">' + settings.itemsOptions.title + '</h1>')\n        .appendTo($skedulerItemsEl);\n\n    const $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(el => {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    let operation = null;\n\n    const mouseUp = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard, $card } = operation;\n\n        const $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        if ($siEl.length !== 0 && $siEl.data('match') == 1) {\n            const rowHeight = settings.lineHeight + 1;\n            const index = parseInt($movingCard.data('index'));\n            const isAssigned = !!$movingCard.data('assigned');\n            const item = isAssigned ? settings.tasks[index].item : settings.itemsOptions.items[index];\n            const offsetInMinutes = 60 / settings.rowsPerHour * ($movingCard[0].offsetTop / rowHeight); // <<== FIXME \n            const interval = settings.data[$siEl.parent().data('column')].workingTimeIntervals[$siEl.parent().data('item-index')];\n\n            settings.itemsOptions.onItemWillBeAssigned && settings.itemsOptions.onItemWillBeAssigned({ item, interval, offsetInMinutes });\n\n            $movingCard\n                .detach()\n                .css({ top: $siEl[0].offsetTop, left: 0 })\n                .height($siEl[0].clientHeight)\n                .width('auto')\n                .data('assigned', 1)\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n                .appendTo($siEl.parent());\n\n            $movingCard.on('mousedown', mouseDownOnCard);\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    const mouseMove = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard, offsetX, offsetY } = operation;\n\n        const newOffsetX = event.pageX - offsetX,\n            newOffsetY = event.pageY - offsetY;\n\n        $movingCard.css({\n            top: newOffsetY + 'px',\n            left: newOffsetX + 'px'\n        });\n\n        // Higlight shifts\n        const _window = $ownerDocument[0].defaultView;\n        const x = event.pageX;\n        const y = event.pageY - _window.scrollY;\n\n        const rowHeight = settings.lineHeight + 1;\n        const rowsPerHour = settings.rowsPerHour;\n\n        const index = parseInt($movingCard.data('index'));\n        const item = settings.itemsOptions.items[index];\n        const duration = item.duration;\n        const height = duration * (rowHeight * rowsPerHour / 60);\n\n        $shifts.each(function() {\n            const $this = $(this);\n            const elementBounding = this.getBoundingClientRect();\n            const $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\n\n            if (x > elementBounding.left && x < elementBounding.right &&\n                y > elementBounding.top && y < elementBounding.bottom) {\n\n                const offsetTop = y - elementBounding.top;\n                const rowCount = (Math.floor(offsetTop / rowHeight) - 1);\n                const top = Math.min(\n                    Math.max(0, rowCount * rowHeight),\n                    this.clientHeight - height\n                );\n\n                const offsetInMinutes = 60 / settings.rowsPerHour * (top / rowHeight); // <<== FIXME \n                const interval = settings.data[$this.data('column')].workingTimeIntervals[$this.data('item-index')];\n                const matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\n\n                $el.css({ top: top })\n                    .css('background-color', matchResult.color)\n                    .height(height)\n                    .show();\n\n\n                $el.data('match', +matchResult.match);\n            } else {\n                $el.data('match', 0);\n                $el.hide();\n            }\n        });\n    };\n\n    const mouseDownOnCard = (event /*: MouseEvent */ ) => {\n        if (event.which !== 1) { return; }\n\n        const $skedulerWrapper = $(`.${settings.skedulerWrapperCssClass}`);\n        const $card = $(event.currentTarget);\n\n        const $movingCard =\n            $card.clone()\n            .data('index', $card.data('index'))\n            .addClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n            .removeClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n            .width($card.width())\n            .appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        const offsetX = event.pageX - event.offsetX,\n            offsetY = event.pageY - event.offsetY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card,\n            $movingCard,\n            offsetX: event.offsetX,\n            offsetY: event.offsetY\n        };\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\n}\n\nexport default populateSkedulerItems;","const defaultSettings = {\n    // Data attributes\n    headers: null,  // string[] - Array of column headers\n    tasks: [],      // Task[] - Array of tasks. Required fields: \n                    // id: number, startTime: number, duration: number, column: number\n\n    notAllocatedLabel: 'Not allocated',\n\n    // Card template - Inner content of task card. \n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function (e, task) { },\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30,         // height of one line in grid\n    borderWidth: 1,         // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2,         // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '<div>${duration}</div>',\n        items: [],\n        title: 'Items',\n        matchFunc: () => { return { match: true } }\n    }\n};\n\nexport { defaultSettings };","import { defaultSettings } from './settings';\nimport populateSkedulerItems from './items';\nimport { compileTemplate } from './template';\n\nconst div = (cssClass) => $('<div></div>').addClass(cssClass);\n\nclass Skeduler {\n    constructor($container, options) {\n        this.settings = $.extend(true, defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null\n        this.operation = null;\n        this.resizeAllColumns = true;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.refresh();\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    setRowsPerHour(rowsPerHour) {\n        this.settings.rowsPerHour = rowsPerHour;\n        this.refresh();\n    }\n\n    setResizeAllColumns(resizeAllColumns) {\n        this.resizeAllColumns = resizeAllColumns;\n    }\n\n    refresh() {\n        this.settings.itemsOptions.items = this.settings.itemsOptions.items && this.settings.itemsOptions.items.map(\n            (item, index) => Object.assign({}, {index}, item)\n        ) || [];\n        this.settings.tasks = this.settings.tasks && this.settings.tasks.map(\n            (task, index) => {\n                task.item = Object.assign({}, {index}, task.item);\n                return task;\n            }\n        ) || [];\n\n        console.log(this.settings.itemsOptions.items, this.settings.tasks)\n\n        this.populate();\n        if (this.settings.itemsOptions.enabled) {\n            populateSkedulerItems(this.settings);\n        }\n    }\n\n    populate() {\n        this.$container.empty();\n        this.$container.addClass(this.settings.containerCssClass);\n\n        const headers = this.settings.headers ?\n            this.settings.headers :\n            this.settings.data.map(this.settings.getHeader);\n\n        // Add headers\n        this.$headerContainer = div(this.settings.headerContainerCssClass);\n        headers.forEach((element) => {\n            div().text(element)\n                .appendTo(this.$headerContainer);\n        }, this);\n        this.$container.append(this.$headerContainer);\n\n        // Add scheduler\n        this.$scheduleEl = div(this.settings.schedulerContainerCssClass);\n        const scheduleTimelineEl = div(this.settings.schedulerContainerCssClass + '-timeline');\n        const scheduleBodyEl = div(this.settings.schedulerContainerCssClass + '-body');\n\n        const gridColumnElement = div();\n\n        for (let i = 0; i < 24; i++) {\n            // Populate timeline\n            for (let j = 0; j < this.settings.rowsPerHour; j++) {\n                let timelineCell = div()\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                if (j == 0) {\n                    timelineCell = timelineCell\n                        .css(\"line-height\", this.settings.lineHeight + 'px')\n                        .text(j == 0 ? this.toTimeString(i) : \"\");\n                }\n                timelineCell.appendTo(scheduleTimelineEl);\n\n                div(this.settings.cellCssClass)\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\")\n                    .appendTo(gridColumnElement);\n            }\n        }\n\n        // Populate grid\n        for (let j = 0; j < headers.length; j++) {\n            const el = gridColumnElement.clone();\n\n            // fixme [workingTimeIntervals must not use index]\n            const workingIntervalsPlaceholder = div(this.settings.workingIntervalPlaceholderCssClass);\n            const intervals = this.settings.data[j].workingTimeIntervals;\n            this.appendAvailableInterval(workingIntervalsPlaceholder, intervals, j);\n\n            el.prepend(workingIntervalsPlaceholder);\n            el.appendTo(scheduleBodyEl);\n\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        this.$scheduleEl.append(scheduleTimelineEl);\n        this.$scheduleEl.append(scheduleBodyEl);\n\n        this.$container.append(this.$scheduleEl);\n\n        // Set default width for columns\n        for (let j = 0; j < headers.length; j++) {\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        // Configure resizing\n        if (this.settings.columnResizeEnabled) {\n            this.configureResizing();\n        }\n    }\n\n    configureResizing() {\n        const skedulerElResizableHandler = div(this.settings.resizableHandlerCssClass);\n\n        this.$container.prepend(skedulerElResizableHandler);\n\n        skedulerElResizableHandler.width(this.$container.width());\n\n        const resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n        let index = 0;\n        this.$headerContainer.find('div').each((_, el) => {\n            div(this.settings.resizableSliderCssClass)\n                .css('left', el.offsetLeft + el.clientWidth)\n                .height(resizableSliderHeight)\n                .data('column-id', index++)\n                .appendTo(skedulerElResizableHandler)\n        });\n\n        skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n    }\n\n    appendAvailableInterval(placeholder, intervals, column) {\n        intervals.forEach((interval, index) => {\n            const innerContent = div().text(this.settings.notAllocatedLabel);\n            const top = this.getCardTopPosition(interval.start) + 2;\n            const duration = this.parseTime(interval.end) - this.parseTime(interval.start);\n            const height = this.getCardHeight(duration) - 5;\n\n            const skItemHightlightDiv = div('si-highlight-item').hide();\n\n            const shiftDiv = div()\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n            shiftDiv\n                .data('column', column)\n                .data('item-index', index)\n                .append(innerContent)\n                .append(skItemHightlightDiv)\n                .appendTo(placeholder);\n\n            this.appendTasks(\n                shiftDiv,\n                interval.start,\n                this.settings.tasks.filter(t => t.column == column));\n            // TODO: ^^^ filter by shift interval too\n\n        }, this);\n    }\n\n    /** \n     * Generate task cards\n     */\n    appendTasks(placeholder, intervalStart, tasks) {\n        tasks.forEach((task) => {\n            let top = this.getCardTopPosition(task.start, intervalStart);\n            let height = this.getCardHeight(task.item.duration / 60);\n\n            this.getItemDiv(task.item)\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                })\n                .addClass(`${this.settings.itemsOptions.itemCardCssClass}`)\n                .addClass(`${this.settings.itemsOptions.itemCardCssClass}-pinned`)\n                .width('auto')\n                .data('index', task.item.index)\n                .data('assigned', 1)\n                .appendTo(placeholder);\n        }, this);\n    }\n\n    onPointerUp(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        this.$ownerDocument.off('mouseup');\n        this.$ownerDocument.off('mousemove');\n\n        this.operation = null;\n    }\n\n    onPointerMove(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        // Determine the delta change between start and new mouse position, as a percentage of the table width\n        let difference = (event.pageX - op.startX); // / this.$scheduleEl.width() * 100;\n        if (difference === 0) {\n            return;\n        }\n\n        let columnNumber = op.columnNumber;\n        let width = op.width + difference;\n        if (this.resizeAllColumns) {\n            for (let i = 0; i < this.settings.data.length; i++) {\n                this.updateColumnWidth(i, width.toFixed(2));\n            }\n        } else {\n            this.updateColumnWidth(columnNumber, width.toFixed(2));\n        }\n    }\n\n    onPointerDown(event) {\n        // Only applies to left-click dragging\n        if (event.which !== 1) { return; }\n\n        // If a previous this.operation is defined, we missed the last mouseup.\n        // Probably gobbled up by user mousing out the window then releasing.\n        // We'll simulate a pointerup here prior to it\n        if (this.operation) {\n            this.onPointerUp(event);\n        }\n\n        let $currentGrip = $(event.currentTarget);\n        let columnNumber = $currentGrip.data('column-id');\n\n        let gripIndex = $currentGrip.index();\n        let $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n        let leftWidth = $leftColumn[0].clientWidth;\n\n        this.operation = {\n            columnNumber,\n            startX: event.pageX,\n            width: leftWidth\n        };\n\n        this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n        this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n        event.preventDefault();\n    }\n\n    updateColumnWidth(columnNumber, width) {\n        width = Math.max(width, this.settings.minColumnWidth);\n        $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')')\n            .css('flex-basis', width + 'px');\n\n        let column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n        var diff = column.width() - width;\n        column.width(width);\n\n        $('.' + this.settings.resizableHandlerCssClass + ' > div').each((index, el) => {\n            if (index >= columnNumber) {\n                let $el = $(el);\n                let left = parseInt($el.css('left').replace('px', ''));\n                $el.css('left', left - diff);\n            }\n        });\n    }\n\n    getItemDiv(item) {\n        const $div = div(this.settings.itemsOptions.itemCardCssClass);\n        const template = compileTemplate(this.settings.itemsOptions.itemCardTemplate, {\n            time: (item) => item.interval ? `${item.interval.start} to ${item.interval.end}` : ''\n        });\n\n        return div().html(template(item));\n    }\n\n    /**\n    * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n    */\n    toTimeString(value) {\n        return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n    }\n\n    /**\n     * Return height of task card based on duration of the task\n     * duration - in hours\n     */\n    getCardHeight(duration) {\n        const durationInMinutes = duration * 60;\n        const heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n        return Math.ceil(durationInMinutes * heightOfMinute);\n    }\n\n    /**\n     * Return top offset of task card based on start time of the task\n     * startTime - in hours\n     */\n    getCardTopPosition(startTime, offsetTime) {\n        let startTimeInt = this.parseTime(startTime);\n        if (offsetTime) {\n            startTimeInt -= this.parseTime(offsetTime);\n        }\n        return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n    }\n\n    /**\n     * Parse time string and present it in hours (ex. '13:30' => 13.5)\n     * @param {*string} time - time in format like '13:50', '11:00', '14'\n     */\n    parseTime(time) {\n        return /\\d{1,2}\\:\\d{2}/.test(time) ?\n            parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 :\n            parseInt(time);\n    }\n}\n\nexport default Skeduler;","const compileTemplate = (template, funcs) => item => {\n    let result = template;\n    const regKeys = /\\$\\{(\\w+)\\}/g;\n    const regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n    let match = 1;\n    while (true) {\n        match = regKeys.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (item.hasOwnProperty(key)) {\n            result = result.replace(match[0], item[key]);\n        }\n    }\n\n    while (funcs) {\n        match = regFuncs.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (funcs.hasOwnProperty(key)) {\n            result = result.replace(match[0], funcs[key](item));\n        }\n    }\n\n    return result;\n}\n\nexport default { compileTemplate };"]}