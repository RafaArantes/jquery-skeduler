{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jquery.skeduler.js","src/adapter.js","src/index.js","src/items/index.js","src/settings.js","src/skeduler.js","src/template/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_skeduler","_skeduler2","$","fn","skeduler","options","this","each","$container","./skeduler","2","Object","defineProperty","value","_adapter","./adapter","3","_template","div","cssClass","addClass","getItemDivs","settings","$div","itemsOptions","itemCardCssClass","items","template","compileTemplate","itemCardTemplate","time","item","interval","start","end","map","index","clone","data","html","populateSkedulerItems","$skedulerItemsEl","containerSelector","empty","itemsCssClass","$ownerDocument","ownerDocument","$shifts","workingIntervalPlaceholderCssClass","$skedulerItemsContainerEl","title","appendTo","$items","forEach","el","append","operation","mouseUp","event","_operation","$movingCard","$card","$siEl","highlightItemCss","detach","css","top","offsetTop","left","height","clientHeight","width","removeClass","parent","on","mouseDownOnCard","remove","show","hide","off","mouseMove","_operation2","offsetX","offsetY","newOffsetX","pageX","newOffsetY","pageY","_window","defaultView","x","y","scrollY","rowHeight","lineHeight","rowsPerHour","parseInt","duration","$this","elementBounding","getBoundingClientRect","$el","find","right","bottom","rowCount","Math","floor","_top","min","max","offsetInMinutes","console","log","workingTimeIntervals","matchResult","matchFunc","color","match","which","$skedulerWrapper","skedulerWrapperCssClass","currentTarget","preventDefault","../template","4","defaultSettings","headers","tasks","notAllocatedLabel","cardTemplate","onClick","task","containerCssClass","headerContainerCssClass","schedulerContainerCssClass","taskPlaceholderCssClass","cellCssClass","resizableHandlerCssClass","resizableSliderCssClass","borderWidth","columnWidth","minColumnWidth","columnResizeEnabled","debug","enabled","5","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_settings","_items","_items2","Skeduler","extend","$headerContainer","$scheduleEl","populate","timeEnd","_this","getHeader","element","text","scheduleTimelineEl","scheduleBodyEl","gridColumnElement","j","timelineCell","toTimeString","_loop","tasksPlaceholder","appendTasks","filter","column","workingIntervalsPlaceholder","intervals","appendAvailableInterval","prepend","updateColumnWidth","configureResizing","_this2","skedulerElResizableHandler","resizableSliderHeight","_","offsetLeft","clientWidth","onPointerDown","bind","ceil","durationInMinutes","heightOfMinute","startTime","startTimeInt","parseTime","test","split","result","placeholder","_this3","innerContent","renderInnerCardContent","getCardTopPosition","getCardHeight","card","attr","style","_this4","skItemHightlightDiv","op","difference","startX","columnNumber","toFixed","onPointerUp","$currentGrip","gripIndex","$leftColumn","eq","leftWidth","onPointerMove","diff","replace","./items","./settings","./template","6","funcs","regKeys","regFuncs","exec","hasOwnProperty"],"mappings":"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","file":"jquery.skeduler.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * jquery-skeduler - This is jQuery plugin which provider you simple scheduler with some items on OX and 24-hours timeline on OY.\n * @date Tue Aug 01 2017 00:03:11 GMT+1000 (+10)\n * @version v0.2.0-beta.0\n * @link \n * @license ISC\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\n// export type Task = {\n//     id: number;\n//     startTime: number;\n//     duration: number;\n//     column: number\n// }\n\n// export type Options = {\n//     headers: string[];\n//     tasks: Task[];\n//     containerCssClass: string;\n//     headerContainerCssClass: string;\n//     schedulerContainerCssClass: string;\n//     lineHeight: number;\n//     borderWidth: number;\n// }\n\n/**\n* Generate scheduler grid with task cards\n* options:\n* - headers: string[] - array of headers\n* - tasks: Task[] - array of tasks\n* - containerCssClass: string - css class of main container\n* - headerContainerCssClass: string - css class of header container\n* - schedulerContainerCssClass: string - css class of scheduler\n* - lineHeight - height of one half-hour cell in grid\n* - borderWidth - width of border of cell in grid\n*/\n$.fn.skeduler = function (options) {\n    return this.each(function () {\n        var $container = $(this);\n\n        var skeduler = new _skeduler2['default']($container, options);\n    });\n};\n\n$.skeduler = _skeduler2['default'];\n\n},{\"./skeduler\":5}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nexports['default'] = _skeduler2['default'];\nmodule.exports = exports['default'];\n\n},{\"./adapter\":1,\"./skeduler\":5}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _template = require('../template');\n\nvar div = function div(cssClass) {\n    return $('<div></div>').addClass(cssClass);\n};\n\nvar getItemDivs = function getItemDivs(settings) {\n    var $div = div(settings.itemsOptions.itemCardCssClass);\n    var items = settings.itemsOptions.items;\n    var template = (0, _template.compileTemplate)(settings.itemsOptions.itemCardTemplate, {\n        time: function time(item) {\n            return item.interval ? item.interval.start + ' to ' + item.interval.end : '';\n        }\n    });\n\n    return items.map(function (item, index) {\n        return $div.clone().data('index', index).html(template(item));\n    });\n};\n\nvar populateSkedulerItems = function populateSkedulerItems(settings) {\n    var $skedulerItemsEl = $(settings.itemsOptions.containerSelector).empty().addClass(settings.itemsOptions.itemsCssClass);\n    var $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    var $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\n\n    // TODO: Generate item's divs\n    var $headerDiv = div().html('<h1 class=\"si-header\">' + settings.itemsOptions.title + '</h1>').appendTo($skedulerItemsEl);\n\n    var $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(function (el) {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    var operation = null;\n\n    var mouseUp = function mouseUp(event) {\n        if (operation == null) return;\n\n        var _operation = operation;\n        var $movingCard = _operation.$movingCard;\n        var $card = _operation.$card;\n\n        var $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        if ($siEl.length !== 0 && $siEl.data('match') == 1) {\n            $movingCard.detach().css({ top: $siEl[0].offsetTop, left: 0 }).height($siEl[0].clientHeight).width('auto').removeClass(settings.itemsOptions.itemCardCssClass + '-moving').addClass(settings.itemsOptions.itemCardCssClass + '-pinned').appendTo($siEl.parent());\n\n            $movingCard.on('mousedown', mouseDownOnCard);\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    var mouseMove = function mouseMove(event) {\n        if (operation == null) return;\n\n        var _operation2 = operation;\n        var $movingCard = _operation2.$movingCard;\n        var offsetX = _operation2.offsetX;\n        var offsetY = _operation2.offsetY;\n\n        var newOffsetX = event.pageX - offsetX,\n            newOffsetY = event.pageY - offsetY;\n\n        $movingCard.css({\n            top: newOffsetY + 'px',\n            left: newOffsetX + 'px'\n        });\n\n        // Higlight shifts\n        var _window = $ownerDocument[0].defaultView;\n        var x = event.pageX;\n        var y = event.pageY - _window.scrollY;\n\n        var rowHeight = settings.lineHeight + 1;\n        var rowsPerHour = settings.rowsPerHour;\n\n        var index = parseInt($movingCard.data('index'));\n        var item = settings.itemsOptions.items[index];\n        var duration = item.duration;\n        var height = duration * (rowHeight * rowsPerHour / 60);\n\n        $shifts.each(function () {\n            var $this = $(this);\n            var elementBounding = this.getBoundingClientRect();\n            var $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\n\n            if (x > elementBounding.left && x < elementBounding.right && y > elementBounding.top && y < elementBounding.bottom) {\n\n                var offsetTop = y - elementBounding.top;\n                var rowCount = Math.floor(offsetTop / rowHeight) - 1;\n                var _top = Math.min(Math.max(0, rowCount * rowHeight), this.clientHeight - height);\n\n                var offsetInMinutes = 60 / settings.rowsPerHour * (_top / rowHeight); // <<== FIXME\n                console.log($this.data('item-index'));\n                var interval = settings.data[$this.data('column')].workingTimeIntervals[$this.data('item-index')];\n                var matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\n\n                $el.css({ top: _top }).css('background-color', matchResult.color).height(height).show();\n\n                $el.data('match', +matchResult.match);\n            } else {\n                $el.data('match', 0);\n                $el.hide();\n            }\n        });\n    };\n\n    var mouseDownOnCard = function mouseDownOnCard(event /*: MouseEvent */) {\n        if (event.which !== 1) {\n            return;\n        }\n\n        var $skedulerWrapper = $('.' + settings.skedulerWrapperCssClass);\n        var $card = $(event.currentTarget);\n\n        var $movingCard = $card.clone().data('index', $card.data('index')).addClass(settings.itemsOptions.itemCardCssClass + '-moving').removeClass(settings.itemsOptions.itemCardCssClass + '-pinned').width($card.width()).appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        var offsetX = event.pageX - event.offsetX,\n            offsetY = event.pageY - event.offsetY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card: $card, $movingCard: $movingCard,\n            offsetX: event.offsetX, offsetY: event.offsetY\n        };\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $skedulerItemsEl.find('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\n};\n\nexports['default'] = populateSkedulerItems;\nmodule.exports = exports['default'];\n\n},{\"../template\":6}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar defaultSettings = {\n    // Data attributes\n    headers: null, // string[] - Array of column headers\n    tasks: [], // Task[] - Array of tasks. Required fields:\n    // id: number, startTime: number, duration: number, column: number\n\n    notAllocatedLabel: 'Not allocated',\n\n    // Card template - Inner content of task card.\n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function onClick(e, task) {},\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30, // height of one line in grid\n    borderWidth: 1, // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2, // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '<div>${duration}</div>',\n        items: [],\n        title: 'Items',\n        matchFunc: function matchFunc() {\n            return { match: true };\n        }\n    }\n};\n\nexports.defaultSettings = defaultSettings;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _settings = require('./settings');\n\nvar _items = require('./items');\n\nvar _items2 = _interopRequireDefault(_items);\n\nvar _template = require('./template');\n\nvar Skeduler = (function () {\n    function Skeduler($container, options) {\n        _classCallCheck(this, Skeduler);\n\n        this.settings = $.extend(true, _settings.defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null;\n        this.operation = null;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.populate();\n        if (this.settings.itemsOptions.enabled) {\n            (0, _items2['default'])(this.settings);\n        }\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    _createClass(Skeduler, [{\n        key: 'populate',\n        value: function populate() {\n            var _this = this;\n\n            this.$container.empty();\n            this.$container.addClass(this.settings.containerCssClass);\n\n            var headers = this.settings.headers ? this.settings.headers : this.settings.data.map(this.settings.getHeader);\n\n            var div = $('<div></div>');\n\n            // Add headers\n            this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\n            headers.forEach(function (element) {\n                div.clone().text(element).appendTo(_this.$headerContainer);\n            }, this);\n            this.$container.append(this.$headerContainer);\n\n            // Add scheduler\n            this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\n            var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\n            var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\n\n            var gridColumnElement = div.clone();\n\n            for (var i = 0; i < 24; i++) {\n                // Populate timeline\n                for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                    var timelineCell = div.clone().height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                    if (j == 0) {\n                        timelineCell = timelineCell.css(\"line-height\", this.settings.lineHeight + 'px').text(j == 0 ? this.toTimeString(i) : \"\");\n                    }\n                    timelineCell.appendTo(scheduleTimelineEl);\n\n                    div.clone().addClass(this.settings.cellCssClass).height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\").appendTo(gridColumnElement);\n                }\n            }\n\n            // Populate grid\n\n            var _loop = function (j) {\n                var el = gridColumnElement.clone();\n\n                var tasksPlaceholder = div.clone().addClass(_this.settings.taskPlaceholderCssClass);\n                _this.appendTasks(tasksPlaceholder, _this.settings.tasks.filter(function (t) {\n                    return t.column == j;\n                }));\n\n                // fixme [workingTimeIntervals must not use index]\n                var workingIntervalsPlaceholder = div.clone().addClass(_this.settings.workingIntervalPlaceholderCssClass);\n                var intervals = _this.settings.data[j].workingTimeIntervals;\n                _this.appendAvailableInterval(workingIntervalsPlaceholder, intervals, j);\n\n                el.prepend(tasksPlaceholder);\n                el.prepend(workingIntervalsPlaceholder);\n                el.appendTo(scheduleBodyEl);\n\n                _this.updateColumnWidth(j, _this.settings.columnWidth);\n            };\n\n            for (var j = 0; j < headers.length; j++) {\n                _loop(j);\n            }\n\n            this.$scheduleEl.append(scheduleTimelineEl);\n            this.$scheduleEl.append(scheduleBodyEl);\n\n            this.$container.append(this.$scheduleEl);\n\n            // Set default width for columns\n            for (var j = 0; j < headers.length; j++) {\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            // Configure resizing\n            if (this.settings.columnResizeEnabled) {\n                this.configureResizing();\n            }\n        }\n    }, {\n        key: 'configureResizing',\n        value: function configureResizing() {\n            var _this2 = this;\n\n            var div = $('<div></div>');\n\n            var skedulerElResizableHandler = div.clone().addClass(this.settings.resizableHandlerCssClass);\n\n            this.$container.prepend(skedulerElResizableHandler);\n\n            skedulerElResizableHandler.width(this.$container.width());\n\n            var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n            var index = 0;\n            this.$headerContainer.find('div').each(function (_, el) {\n                div.clone().addClass(_this2.settings.resizableSliderCssClass).css('left', el.offsetLeft + el.clientWidth).height(resizableSliderHeight).data('column-id', index++).appendTo(skedulerElResizableHandler);\n            });\n\n            skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n        }\n\n        /**\n           * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n           */\n    }, {\n        key: 'toTimeString',\n        value: function toTimeString(value) {\n            return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n        }\n\n        /**\n         * Return height of task card based on duration of the task\n         * duration - in hours\n         */\n    }, {\n        key: 'getCardHeight',\n        value: function getCardHeight(duration) {\n            var durationInMinutes = duration * 60;\n            var heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n            return Math.ceil(durationInMinutes * heightOfMinute);\n        }\n\n        /**\n         * Return top offset of task card based on start time of the task\n         * startTime - in hours\n         */\n    }, {\n        key: 'getCardTopPosition',\n        value: function getCardTopPosition(startTime) {\n            var startTimeInt = this.parseTime(startTime);\n            return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n        }\n\n        /**\n         * Parse time string and present it in hours (ex. '13:30' => 13.5)\n         * @param {*string} time - time in format like '13:50', '11:00', '14'\n         */\n    }, {\n        key: 'parseTime',\n        value: function parseTime(time) {\n            return (/\\d{1,2}\\:\\d{2}/.test(time) ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 : parseInt(time)\n            );\n        }\n\n        /**\n        * Render card template\n        */\n    }, {\n        key: 'renderInnerCardContent',\n        value: function renderInnerCardContent(task) {\n            var template = this.settings.cardTemplate;\n            var result = (0, _template.compileTemplate)(template)(task);\n\n            return $(result);\n        }\n\n        /** \n         * Generate task cards\n         */\n    }, {\n        key: 'appendTasks',\n        value: function appendTasks(placeholder, tasks) {\n            var _this3 = this;\n\n            tasks.forEach(function (task) {\n                var innerContent = _this3.renderInnerCardContent(task);\n                var top = _this3.getCardTopPosition(task.startTime);\n                var height = _this3.getCardHeight(task.duration);\n\n                var card = $('<div></div>').attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\n                    title: _this3.toTimeString(task.startTime) + ' - ' + _this3.toTimeString(task.startTime + task.duration)\n                });\n                card.on('click', function (e) {\n                    _this3.settings.onClick && _this3.settings.onClick(e, task);\n                });\n                card.append(innerContent).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'appendAvailableInterval',\n        value: function appendAvailableInterval(placeholder, intervals, column) {\n            var _this4 = this;\n\n            var div = $('<div></div>');\n            intervals.forEach(function (interval, index) {\n                var innerContent = div.clone().text(_this4.settings.notAllocatedLabel);\n                var top = _this4.getCardTopPosition(interval.start) + 2;\n                console.log('top for start: ', top, interval.start);\n                var duration = _this4.parseTime(interval.end) - _this4.parseTime(interval.start);\n                var height = _this4.getCardHeight(duration) - 5;\n\n                var skItemHightlightDiv = div.clone().addClass('si-highlight-item').hide();\n\n                var card = div.clone().attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n                card.data('column', column).data('item-index', index).append(innerContent).append(skItemHightlightDiv).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'onPointerUp',\n        value: function onPointerUp(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            this.$ownerDocument.off('mouseup');\n            this.$ownerDocument.off('mousemove');\n\n            this.operation = null;\n        }\n    }, {\n        key: 'onPointerMove',\n        value: function onPointerMove(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            // Determine the delta change between start and new mouse position, as a percentage of the table width\n            var difference = event.pageX - op.startX; // / this.$scheduleEl.width() * 100;\n            if (difference === 0) {\n                return;\n            }\n\n            var columnNumber = op.columnNumber;\n            var width = op.width + difference;\n            this.updateColumnWidth(columnNumber, width.toFixed(2));\n        }\n    }, {\n        key: 'onPointerDown',\n        value: function onPointerDown(event) {\n            // Only applies to left-click dragging\n            if (event.which !== 1) {\n                return;\n            }\n\n            // If a previous this.operation is defined, we missed the last mouseup.\n            // Probably gobbled up by user mousing out the window then releasing.\n            // We'll simulate a pointerup here prior to it\n            if (this.operation) {\n                this.onPointerUp(event);\n            }\n\n            var $currentGrip = $(event.currentTarget);\n            var columnNumber = $currentGrip.data('column-id');\n\n            var gripIndex = $currentGrip.index();\n            var $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n            var leftWidth = $leftColumn[0].clientWidth;\n\n            this.operation = {\n                columnNumber: columnNumber,\n                startX: event.pageX,\n                width: leftWidth\n            };\n\n            this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n            this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'updateColumnWidth',\n        value: function updateColumnWidth(columnNumber, width) {\n            width = Math.max(width, this.settings.minColumnWidth);\n            $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')').css('flex-basis', width + 'px');\n\n            var column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n            var diff = column.width() - width;\n            column.width(width);\n\n            $('.' + this.settings.resizableHandlerCssClass + ' > div').each(function (index, el) {\n                if (index >= columnNumber) {\n                    var $el = $(el);\n                    var left = parseInt($el.css('left').replace('px', ''));\n                    $el.css('left', left - diff);\n                }\n            });\n        }\n    }]);\n\n    return Skeduler;\n})();\n\nexports['default'] = Skeduler;\nmodule.exports = exports['default'];\n\n},{\"./items\":3,\"./settings\":4,\"./template\":6}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar compileTemplate = function compileTemplate(template, funcs) {\n    return function (item) {\n        var result = template;\n        var regKeys = /\\$\\{(\\w+)\\}/g;\n        var regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n        var match = 1;\n        while (true) {\n            match = regKeys.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (item.hasOwnProperty(key)) {\n                result = result.replace(match[0], item[key]);\n            }\n        }\n\n        while (funcs) {\n            match = regFuncs.exec(template);\n            if (!match) break;\n\n            var key = match[1];\n            if (funcs.hasOwnProperty(key)) {\n                result = result.replace(match[0], funcs[key](item));\n            }\n        }\n\n        return result;\n    };\n};\n\nexports[\"default\"] = { compileTemplate: compileTemplate };\nmodule.exports = exports[\"default\"];\n\n},{}]},{},[2])\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import Skeduler from './skeduler';\n\n// export type Task = {\n//     id: number;\n//     startTime: number;\n//     duration: number;\n//     column: number\n// }\n\n// export type Options = {\n//     headers: string[];\n//     tasks: Task[];\n//     containerCssClass: string;\n//     headerContainerCssClass: string;\n//     schedulerContainerCssClass: string;\n//     lineHeight: number;\n//     borderWidth: number;\n// }\n\n/**\n* Generate scheduler grid with task cards\n* options:\n* - headers: string[] - array of headers\n* - tasks: Task[] - array of tasks\n* - containerCssClass: string - css class of main container\n* - headerContainerCssClass: string - css class of header container\n* - schedulerContainerCssClass: string - css class of scheduler\n* - lineHeight - height of one half-hour cell in grid\n* - borderWidth - width of border of cell in grid\n*/\n$.fn.skeduler = function (options) {\n    return this.each(function () {\n        let $container = $(this);\n \n        var skeduler = new Skeduler($container, options);\n    });\n};\n\n$.skeduler = Skeduler;\n","import Skeduler from './skeduler';\nimport adapter from './adapter';\n\nexport default Skeduler;","import { compileTemplate } from '../template';\n\nconst div = (cssClass) => $('<div></div>').addClass(cssClass);\n\nconst getItemDivs = (settings) => {\n    const $div = div(settings.itemsOptions.itemCardCssClass);\n    const items = settings.itemsOptions.items;\n    const template = compileTemplate(settings.itemsOptions.itemCardTemplate, {\n        time: (item) => item.interval ? `${item.interval.start} to ${item.interval.end}` : ''\n    });\n\n    return items.map((item, index) => $div.clone()\n        .data('index', index)\n        .html(template(item))\n    );\n}\n\nconst populateSkedulerItems = (settings) => {\n    const $skedulerItemsEl = $(settings.itemsOptions.containerSelector)\n        .empty()\n        .addClass(settings.itemsOptions.itemsCssClass);\n    const $ownerDocument = $($skedulerItemsEl[0].ownerDocument);\n    const $shifts = $('.' + settings.workingIntervalPlaceholderCssClass + ' > div');\n\n    // TODO: Generate item's divs\n    const $headerDiv = div()\n        .html('<h1 class=\"si-header\">' + settings.itemsOptions.title + '</h1>')\n        .appendTo($skedulerItemsEl);\n\n    const $skedulerItemsContainerEl = div('si-container');\n    var $items = getItemDivs(settings);\n    $items.forEach(el => {\n        $skedulerItemsContainerEl.append(el);\n    });\n    $skedulerItemsContainerEl.appendTo($skedulerItemsEl);\n\n    let operation = null;\n\n    const mouseUp = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard, $card } = operation;\n\n        const $siEl = $('.' + settings.itemsOptions.highlightItemCss + ':visible'); // fixme\n\n        if ($siEl.length !== 0 && $siEl.data('match') == 1) {\n            $movingCard\n                .detach()\n                .css({ top: $siEl[0].offsetTop, left: 0 })\n                .height($siEl[0].clientHeight)\n                .width('auto')\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n                .appendTo($siEl.parent());\n\n            $movingCard.on('mousedown', mouseDownOnCard);\n        } else {\n            $movingCard.remove();\n            $card.show();\n        }\n\n        $('.' + settings.itemsOptions.highlightItemCss).hide();\n\n        operation = null;\n        $ownerDocument.off('mousemove', mouseMove);\n        $ownerDocument.off('mouseup', mouseUp);\n    };\n\n    const mouseMove = (event) => {\n        if (operation == null) return;\n\n        const { $movingCard, offsetX, offsetY } = operation;\n\n        const newOffsetX = event.pageX - offsetX,\n            newOffsetY = event.pageY - offsetY;\n\n        $movingCard.css({\n            top: newOffsetY + 'px',\n            left: newOffsetX + 'px'\n        });\n\n        // Higlight shifts\n        const _window = $ownerDocument[0].defaultView;\n        const x = event.pageX;\n        const y = event.pageY - _window.scrollY;\n\n        const rowHeight = settings.lineHeight + 1;\n        const rowsPerHour = settings.rowsPerHour;\n\n        const index = parseInt($movingCard.data('index'));\n        const item = settings.itemsOptions.items[index];\n        const duration = item.duration;\n        const height = duration * (rowHeight * rowsPerHour / 60);\n\n        $shifts.each(function () {\n            const $this = $(this);\n            const elementBounding = this.getBoundingClientRect();\n            const $el = $this.find('.' + settings.itemsOptions.highlightItemCss);\n\n            if (x > elementBounding.left && x < elementBounding.right\n                && y > elementBounding.top && y < elementBounding.bottom) {\n\n                const offsetTop = y - elementBounding.top;\n                const rowCount = (Math.floor(offsetTop / rowHeight) - 1);\n                const top = Math.min(\n                    Math.max(0, rowCount * rowHeight),\n                    this.clientHeight - height\n                );\n\n                const offsetInMinutes = 60 / settings.rowsPerHour * (top / rowHeight); // <<== FIXME \n                console.log($this.data('item-index'));\n                const interval = settings.data[$this.data('column')].workingTimeIntervals[$this.data('item-index')];\n                const matchResult = settings.itemsOptions.matchFunc(item, interval, offsetInMinutes);\n\n                $el.css({ top: top })\n                    .css('background-color', matchResult.color)\n                    .height(height)\n                    .show();\n\n\n                $el.data('match', +matchResult.match);\n            } else {\n                $el.data('match', 0);\n                $el.hide();\n            }\n        });\n    };\n\n    const mouseDownOnCard = (event /*: MouseEvent */) => {\n        if (event.which !== 1) { return; }\n\n        const $skedulerWrapper = $(`.${settings.skedulerWrapperCssClass}`);\n        const $card = $(event.currentTarget);\n\n        const $movingCard =\n            $card.clone()\n                .data('index', $card.data('index'))\n                .addClass(`${settings.itemsOptions.itemCardCssClass}-moving`)\n                .removeClass(`${settings.itemsOptions.itemCardCssClass}-pinned`)\n                .width($card.width())\n                .appendTo($skedulerWrapper);\n\n        //var bounce = $card[0].getBoundingClientRect();\n        // fixme ^^^\n        const offsetX = event.pageX - event.offsetX,\n            offsetY = event.pageY - event.offsetY;\n\n        $movingCard.css({\n            top: offsetY + 'px',\n            left: offsetX + 'px'\n        });\n\n        operation = {\n            $card, $movingCard,\n            offsetX: event.offsetX, offsetY: event.offsetY\n        };\n\n        $card.hide();\n\n        $ownerDocument.on('mousemove', mouseMove);\n        $ownerDocument.on('mouseup', mouseUp);\n\n        event.preventDefault();\n    };\n\n    $skedulerItemsEl.find('.' + settings.itemsOptions.itemCardCssClass).on('mousedown', mouseDownOnCard);\n}\n\nexport default populateSkedulerItems;","const defaultSettings = {\n    // Data attributes\n    headers: null,  // string[] - Array of column headers\n    tasks: [],      // Task[] - Array of tasks. Required fields: \n                    // id: number, startTime: number, duration: number, column: number\n\n    notAllocatedLabel: 'Not allocated',\n\n    // Card template - Inner content of task card. \n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function (e, task) { },\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30,         // height of one line in grid\n    borderWidth: 1,         // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2,         // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false,\n        itemsCssClass: 'skeduler-items',\n        highlightItemCss: 'si-highlight-item',\n        containerSelector: \"#skeduler-items\",\n        itemCardCssClass: 'si-card',\n        itemCardTemplate: '<div>${duration}</div>',\n        items: [],\n        title: 'Items',\n        matchFunc: () => { return { match: true } }\n    }\n};\n\nexport { defaultSettings };","import { defaultSettings } from './settings';\nimport populateSkedulerItems from './items';\nimport { compileTemplate } from './template';\n\nclass Skeduler {\n    constructor($container, options) {\n        this.settings = $.extend(true, defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null\n        this.operation = null;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.populate();\n        if (this.settings.itemsOptions.enabled) {\n            populateSkedulerItems(this.settings);\n        }\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    populate() {\n        this.$container.empty();\n        this.$container.addClass(this.settings.containerCssClass);\n\n        const headers = this.settings.headers\n            ? this.settings.headers\n            : this.settings.data.map(this.settings.getHeader);\n\n        const div = $('<div></div>');\n\n        // Add headers\n        this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\n        headers.forEach((element) => {\n            div.clone()\n                .text(element)\n                .appendTo(this.$headerContainer);\n        }, this);\n        this.$container.append(this.$headerContainer);\n\n        // Add scheduler\n        this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\n        const scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\n        const scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\n\n        const gridColumnElement = div.clone();\n\n        for (let i = 0; i < 24; i++) {\n            // Populate timeline\n            for (let j = 0; j < this.settings.rowsPerHour; j++) {\n                let timelineCell = div.clone()\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                if (j == 0) {\n                    timelineCell = timelineCell\n                        .css(\"line-height\", this.settings.lineHeight + 'px')\n                        .text(j == 0 ? this.toTimeString(i) : \"\");\n                }\n                timelineCell.appendTo(scheduleTimelineEl);\n\n                div.clone()\n                    .addClass(this.settings.cellCssClass)\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\")\n                    .appendTo(gridColumnElement);\n            }\n        }\n\n        // Populate grid\n        for (let j = 0; j < headers.length; j++) {\n            const el = gridColumnElement.clone();\n\n            const tasksPlaceholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\n            this.appendTasks(tasksPlaceholder, this.settings.tasks.filter(t => t.column == j));\n\n            // fixme [workingTimeIntervals must not use index]\n            const workingIntervalsPlaceholder = div.clone().addClass(this.settings.workingIntervalPlaceholderCssClass);\n            const intervals = this.settings.data[j].workingTimeIntervals;\n            this.appendAvailableInterval(workingIntervalsPlaceholder, intervals, j);\n\n            el.prepend(tasksPlaceholder);\n            el.prepend(workingIntervalsPlaceholder);\n            el.appendTo(scheduleBodyEl);\n\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        this.$scheduleEl.append(scheduleTimelineEl);\n        this.$scheduleEl.append(scheduleBodyEl);\n\n        this.$container.append(this.$scheduleEl);\n\n        // Set default width for columns\n        for (let j = 0; j < headers.length; j++) {\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        // Configure resizing\n        if (this.settings.columnResizeEnabled) {\n            this.configureResizing();\n        }\n    }\n\n    configureResizing() {\n        const div = $('<div></div>');\n\n        const skedulerElResizableHandler = div.clone()\n            .addClass(this.settings.resizableHandlerCssClass);\n\n        this.$container.prepend(skedulerElResizableHandler);\n\n        skedulerElResizableHandler.width(this.$container.width());\n\n        const resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n        let index = 0;\n        this.$headerContainer.find('div').each((_, el) => {\n            div.clone()\n                .addClass(this.settings.resizableSliderCssClass)\n                .css('left', el.offsetLeft + el.clientWidth)\n                .height(resizableSliderHeight)\n                .data('column-id', index++)\n                .appendTo(skedulerElResizableHandler)\n        });\n\n        skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n    }\n\n    /**\n       * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n       */\n    toTimeString(value) {\n        return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n    }\n\n    /**\n     * Return height of task card based on duration of the task\n     * duration - in hours\n     */\n    getCardHeight(duration) {\n        const durationInMinutes = duration * 60;\n        const heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n        return Math.ceil(durationInMinutes * heightOfMinute);\n    }\n\n    /**\n     * Return top offset of task card based on start time of the task\n     * startTime - in hours\n     */\n    getCardTopPosition(startTime) {\n        const startTimeInt = this.parseTime(startTime);\n        return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n    }\n\n    /**\n     * Parse time string and present it in hours (ex. '13:30' => 13.5)\n     * @param {*string} time - time in format like '13:50', '11:00', '14'\n     */\n    parseTime(time) {\n        return /\\d{1,2}\\:\\d{2}/.test(time)\n            ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60\n            : parseInt(time);\n    }\n\n    /**\n    * Render card template\n    */\n    renderInnerCardContent(task) {\n        const template = this.settings.cardTemplate;\n        const result = compileTemplate(template)(task);\n\n        return $(result);\n    }\n\n    /** \n     * Generate task cards\n     */\n    appendTasks(placeholder, tasks) {\n        tasks.forEach((task) => {\n            var innerContent = this.renderInnerCardContent(task);\n            var top = this.getCardTopPosition(task.startTime);\n            var height = this.getCardHeight(task.duration);\n\n            var card = $('<div></div>')\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\n                    title: this.toTimeString(task.startTime) + ' - ' + this.toTimeString(task.startTime + task.duration)\n                });\n            card.on('click', (e) => { this.settings.onClick && this.settings.onClick(e, task) });\n            card.append(innerContent)\n                .appendTo(placeholder);\n        }, this);\n    }\n\n    appendAvailableInterval(placeholder, intervals, column) {\n        const div = $('<div></div>');\n        intervals.forEach((interval, index) => {\n            const innerContent = div.clone().text(this.settings.notAllocatedLabel);\n            const top = this.getCardTopPosition(interval.start) + 2;\n            console.log('top for start: ', top, interval.start)\n            const duration = this.parseTime(interval.end) - this.parseTime(interval.start);\n            const height = this.getCardHeight(duration) - 5;\n\n            const skItemHightlightDiv = div.clone()\n                .addClass('si-highlight-item')\n                .hide();\n\n            const card = div.clone()\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n            card\n                .data('column', column)\n                .data('item-index', index)\n                .append(innerContent)\n                .append(skItemHightlightDiv)\n                .appendTo(placeholder);\n\n        }, this);\n    }\n\n    onPointerUp(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        this.$ownerDocument.off('mouseup');\n        this.$ownerDocument.off('mousemove');\n\n        this.operation = null;\n    }\n\n    onPointerMove(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        // Determine the delta change between start and new mouse position, as a percentage of the table width\n        let difference = (event.pageX - op.startX);// / this.$scheduleEl.width() * 100;\n        if (difference === 0) {\n            return;\n        }\n\n        let columnNumber = op.columnNumber;\n        let width = op.width + difference;\n        this.updateColumnWidth(columnNumber, width.toFixed(2));\n    }\n\n    onPointerDown(event) {\n        // Only applies to left-click dragging\n        if (event.which !== 1) { return; }\n\n        // If a previous this.operation is defined, we missed the last mouseup.\n        // Probably gobbled up by user mousing out the window then releasing.\n        // We'll simulate a pointerup here prior to it\n        if (this.operation) {\n            this.onPointerUp(event);\n        }\n\n        let $currentGrip = $(event.currentTarget);\n        let columnNumber = $currentGrip.data('column-id');\n\n        let gripIndex = $currentGrip.index();\n        let $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n        let leftWidth = $leftColumn[0].clientWidth;\n\n        this.operation = {\n            columnNumber,\n            startX: event.pageX,\n            width: leftWidth\n        };\n\n        this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n        this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n        event.preventDefault();\n    }\n\n    updateColumnWidth(columnNumber, width) {\n        width = Math.max(width, this.settings.minColumnWidth);\n        $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')')\n            .css('flex-basis', width + 'px');\n\n        let column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n        var diff = column.width() - width;\n        column.width(width);\n\n        $('.' + this.settings.resizableHandlerCssClass + ' > div').each((index, el) => {\n            if (index >= columnNumber) {\n                let $el = $(el);\n                let left = parseInt($el.css('left').replace('px', ''));\n                $el.css('left', left - diff);\n            }\n        });\n    }\n}\n\nexport default Skeduler;\n","const compileTemplate = (template, funcs) => item => {\n    let result = template;\n    const regKeys = /\\$\\{(\\w+)\\}/g;\n    const regFuncs = /\\$\\{(\\w+)\\(\\)\\}/g;\n\n    let match = 1;\n    while (true) {\n        match = regKeys.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (item.hasOwnProperty(key)) {\n            result = result.replace(match[0], item[key]);\n        }\n    }\n\n    while (funcs) {\n        match = regFuncs.exec(template);\n        if (!match) break;\n\n        let key = match[1];\n        if (funcs.hasOwnProperty(key)) {\n            result = result.replace(match[0], funcs[key](item));\n        }\n    }\n\n    return result;\n}\n\nexport default { compileTemplate };"]}