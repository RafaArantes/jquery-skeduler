{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jquery.skeduler.js","src/adapter.js","src/index.js","src/settings.js","src/skeduler.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_skeduler","_skeduler2","$","fn","skeduler","options","this","each","$container","./skeduler","2","Object","defineProperty","value","_adapter","./adapter","3","defaultSettings","headers","tasks","cardTemplate","onClick","task","skedulerWrapperCssClass","containerCssClass","itemsCssClass","headerContainerCssClass","schedulerContainerCssClass","taskPlaceholderCssClass","workingIntervalPlaceholderCssClass","cellCssClass","resizableHandlerCssClass","resizableSliderCssClass","lineHeight","borderWidth","columnWidth","minColumnWidth","rowsPerHour","columnResizeEnabled","debug","itemsOptions","enabled","4","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_settings","Skeduler","settings","extend","$ownerDocument","ownerDocument","$headerContainer","$scheduleEl","operation","console","time","populate","populateSkedulerItems","timeEnd","_this","empty","addClass","data","map","getHeader","div","clone","log","forEach","element","text","appendTo","append","scheduleTimelineEl","scheduleBodyEl","gridColumnElement","j","timelineCell","height","css","toTimeString","el","tasksPlaceholder","appendTasks","filter","column","workingIntervalsPlaceholder","intervals","find","d","id","workingTimeIntervals","appendAvailableInterval","prepend","updateColumnWidth","configureResizing","_this2","$skedulerItemsEl","containerSelector","$shifts","mouseUp","event","_operation","$movingCard","$card","siEl","detach","top","offsetTop","left","clientHeight","width","removeClass","parent","on","mouseDownOnCard","hide","remove","show","off","mouseMove","_operation2","offsetX","pageX","offsetY","pageY","_window","defaultView","x","y","scrollY","rowHeight","parseInt","$this","elementBounding","getBoundingClientRect","right","bottom","_top","Math","min","max","floor","which","$skedulerWrapper","currentTarget","preventDefault","_this3","skedulerElResizableHandler","resizableSliderHeight","index","_","offsetLeft","clientWidth","onPointerDown","bind","ceil","duration","durationInMinutes","heightOfMinute","startTime","startTimeInt","parseTime","test","split","result","hasOwnProperty","replace","placeholder","_this4","innerContent","renderInnerCardContent","getCardTopPosition","getCardHeight","card","attr","style","title","_this5","interval","start","end","skItemHightlightDiv","op","difference","startX","columnNumber","toFixed","onPointerUp","$currentGrip","gripIndex","$leftColumn","eq","leftWidth","onPointerMove","diff","$el","./settings"],"mappings":"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","file":"jquery.skeduler.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * jquery-skeduler - This is jQuery plugin which provider you simple scheduler with some items on OX and 24-hours timeline on OY.\n * @date Mon Jul 03 2017 00:34:46 GMT+1000 (+10)\n * @version v0.1.0-beta.0\n * @link \n * @license ISC\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\n// export type Task = {\n//     id: number;\n//     startTime: number;\n//     duration: number;\n//     column: number\n// }\n\n// export type Options = {\n//     headers: string[];\n//     tasks: Task[];\n//     containerCssClass: string;\n//     headerContainerCssClass: string;\n//     schedulerContainerCssClass: string;\n//     lineHeight: number;\n//     borderWidth: number;\n// }\n\n/**\n* Generate scheduler grid with task cards\n* options:\n* - headers: string[] - array of headers\n* - tasks: Task[] - array of tasks\n* - containerCssClass: string - css class of main container\n* - headerContainerCssClass: string - css class of header container\n* - schedulerContainerCssClass: string - css class of scheduler\n* - lineHeight - height of one half-hour cell in grid\n* - borderWidth - width of border of cell in grid\n*/\n$.fn.skeduler = function (options) {\n    return this.each(function () {\n        var $container = $(this);\n\n        var skeduler = new _skeduler2['default']($container, options);\n    });\n};\n\n$.skeduler = _skeduler2['default'];\n\n},{\"./skeduler\":4}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _skeduler = require('./skeduler');\n\nvar _skeduler2 = _interopRequireDefault(_skeduler);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nexports['default'] = _skeduler2['default'];\nmodule.exports = exports['default'];\n\n},{\"./adapter\":1,\"./skeduler\":4}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar defaultSettings = {\n    // Data attributes\n    headers: null, // String[] - Array of column headers\n    tasks: [], // Task[] - Array of tasks. Required fields:\n    // id: number, startTime: number, duration: number, column: number\n\n    // Card template - Inner content of task card.\n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function onClick(e, task) {},\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    itemsCssClass: 'skeduler-items',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30, // height of one line in grid\n    borderWidth: 1, // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2, // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false\n    }\n};\n\nexports.defaultSettings = defaultSettings;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _settings = require('./settings');\n\nvar Skeduler = (function () {\n    function Skeduler($container, options) {\n        _classCallCheck(this, Skeduler);\n\n        this.settings = $.extend(_settings.defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null;\n        this.operation = null;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.populate($container, options);\n        if (this.settings.itemsOptions.enabled) {\n            this.populateSkedulerItems(this.settings.itemsOptions);\n        }\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    _createClass(Skeduler, [{\n        key: 'populate',\n        value: function populate() {\n            var _this = this;\n\n            this.$container.empty();\n            this.$container.addClass(this.settings.containerCssClass);\n\n            var headers = this.settings.headers ? this.settings.headers : this.settings.data.map(this.settings.getHeader);\n\n            var div = $('<div></div>');\n\n            // Add headers\n            this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\n            console.log('this.$headerContainer', this.$headerContainer);\n            headers.forEach(function (element) {\n                div.clone().text(element).appendTo(_this.$headerContainer);\n            }, this);\n            this.$container.append(this.$headerContainer);\n\n            // Add scheduler\n            this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\n            var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\n            var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\n\n            var gridColumnElement = div.clone();\n\n            for (var i = 0; i < 24; i++) {\n                // Populate timeline\n                for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                    var timelineCell = div.clone().height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                    if (j == 0) {\n                        timelineCell = timelineCell.css(\"line-height\", this.settings.lineHeight + 'px').text(j == 0 ? this.toTimeString(i) : \"\");\n                    }\n                    timelineCell.appendTo(scheduleTimelineEl);\n\n                    div.clone().addClass(this.settings.cellCssClass).height(this.settings.lineHeight).addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\").appendTo(gridColumnElement);\n                }\n            }\n\n            // Populate grid\n            for (var j = 0; j < headers.length; j++) {\n                var el = gridColumnElement.clone();\n\n                var tasksPlaceholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\n                this.appendTasks(tasksPlaceholder, this.settings.tasks.filter(function (t) {\n                    return t.column == j;\n                }));\n\n                // fixme\n                var workingIntervalsPlaceholder = div.clone().addClass(this.settings.workingIntervalPlaceholderCssClass);\n                var intervals = this.settings.data.find(function (d) {\n                    return d.id === j + 1;\n                }).workingTimeIntervals;\n                this.appendAvailableInterval(workingIntervalsPlaceholder, intervals);\n\n                el.prepend(tasksPlaceholder);\n                el.prepend(workingIntervalsPlaceholder);\n                el.appendTo(scheduleBodyEl);\n\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            this.$scheduleEl.append(scheduleTimelineEl);\n            this.$scheduleEl.append(scheduleBodyEl);\n\n            this.$container.append(this.$scheduleEl);\n\n            // Set default width for columns\n            for (var j = 0; j < headers.length; j++) {\n                this.updateColumnWidth(j, this.settings.columnWidth);\n            }\n\n            // Configure resizing\n            if (this.settings.columnResizeEnabled) {\n                this.configureResizing();\n            }\n        }\n    }, {\n        key: 'populateSkedulerItems',\n        value: function populateSkedulerItems(options) {\n            var _this2 = this;\n\n            var $skedulerItemsEl = $(options.containerSelector).addClass(this.settings.itemsCssClass);\n            var $shifts = $('.skeduler-interval-placeholder > div');\n\n            // TODO: Generate item's divs\n            // $skedulerItemsEl.html(`\n            //   <div></div>\n            // `);\n            var operation = null;\n\n            var mouseUp = function mouseUp(event) {\n                if (operation == null) return;\n\n                var _operation = operation;\n                var $movingCard = _operation.$movingCard;\n                var $card = _operation.$card;\n\n                var siEl = $('.si-highlight-item:visible'); // fixme\n\n                if (siEl.length !== 0) {\n                    $movingCard.detach().css({ top: siEl[0].offsetTop, left: 0 }).height(siEl[0].clientHeight).width('auto').removeClass('si-card-moving').addClass('si-card-pinned').appendTo(siEl.parent());\n\n                    $movingCard.on('mousedown', mouseDownOnCard);\n\n                    $('.si-highlight-item').hide();\n                } else {\n                    $movingCard.remove();\n                    $card.show();\n                }\n\n                operation = null;\n                _this2.$ownerDocument.off('mousemove', mouseMove);\n                _this2.$ownerDocument.off('mouseup', mouseUp);\n            };\n\n            var mouseMove = function mouseMove(event) {\n                if (operation == null) return;\n\n                var _operation2 = operation;\n                var $movingCard = _operation2.$movingCard;\n\n                var offsetX = event.pageX,\n                    offsetY = event.pageY;\n\n                $movingCard.css({\n                    top: offsetY + 'px',\n                    left: offsetX + 'px'\n                });\n\n                // Higlight shifts\n                var _window = _this2.$ownerDocument[0].defaultView;\n                var x = event.pageX;\n                var y = event.pageY - _window.scrollY;\n\n                var rowHeight = _this2.settings.lineHeight + 1;\n                var rowsPerHour = _this2.settings.rowsPerHour;\n                var height = parseInt($movingCard.data('duration')) * (rowHeight * rowsPerHour / 60);\n\n                $shifts.each(function () {\n                    var $this = $(this);\n                    var elementBounding = this.getBoundingClientRect();\n                    if (x > elementBounding.left && x < elementBounding.right && y > elementBounding.top && y < elementBounding.bottom && this.clientHeight >= height) {\n                        var offsetTop = y - elementBounding.top;\n                        var _top = Math.min(Math.max(0, (Math.floor(offsetTop / rowHeight) - 1) * rowHeight), this.clientHeight - height);\n\n                        $this.find('.si-highlight-item').css({ top: _top }).height(height).show();\n                    } else {\n                        $this.find('.si-highlight-item').hide();\n                    }\n                });\n            };\n\n            var mouseDownOnCard = function mouseDownOnCard(event /*: MouseEvent */) {\n                if (event.which !== 1) {\n                    return;\n                }\n\n                var $skedulerWrapper = $('.' + _this2.settings.skedulerWrapperCssClass);\n                var $card = $(event.currentTarget);\n\n                var $movingCard = $card.clone().addClass('si-card-moving').removeClass('si-card-pinned').width($card.width()).appendTo($skedulerWrapper);\n\n                //var bounce = $card[0].getBoundingClientRect();\n                // fixme ^^^\n                var offsetX = event.pageX,\n                    offsetY = event.pageY;\n\n                $movingCard.css({\n                    top: offsetY + 'px',\n                    left: offsetX + 'px'\n                });\n\n                operation = {\n                    $card: $card, $movingCard: $movingCard\n                };\n\n                $card.hide();\n\n                _this2.$ownerDocument.on('mousemove', mouseMove);\n                _this2.$ownerDocument.on('mouseup', mouseUp);\n\n                event.preventDefault();\n            };\n\n            $skedulerItemsEl.find('.si-card').on('mousedown', mouseDownOnCard);\n        }\n    }, {\n        key: 'configureResizing',\n        value: function configureResizing() {\n            var _this3 = this;\n\n            var div = $('<div></div>');\n\n            var skedulerElResizableHandler = div.clone().addClass(this.settings.resizableHandlerCssClass);\n\n            this.$container.prepend(skedulerElResizableHandler);\n\n            skedulerElResizableHandler.width(this.$container.width());\n\n            var resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n            var index = 0;\n            this.$headerContainer.find('div').each(function (_, el) {\n                div.clone().addClass(_this3.settings.resizableSliderCssClass).css('left', el.offsetLeft + el.clientWidth).height(resizableSliderHeight).data('column-id', index++).appendTo(skedulerElResizableHandler);\n            });\n\n            skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n        }\n\n        /**\n           * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n           */\n    }, {\n        key: 'toTimeString',\n        value: function toTimeString(value) {\n            return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n        }\n\n        /**\n         * Return height of task card based on duration of the task\n         * duration - in hours\n         */\n    }, {\n        key: 'getCardHeight',\n        value: function getCardHeight(duration) {\n            var durationInMinutes = duration * 60;\n            var heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n            return Math.ceil(durationInMinutes * heightOfMinute);\n        }\n\n        /**\n         * Return top offset of task card based on start time of the task\n         * startTime - in hours\n         */\n    }, {\n        key: 'getCardTopPosition',\n        value: function getCardTopPosition(startTime) {\n            var startTimeInt = this.parseTime(startTime);\n            return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n        }\n    }, {\n        key: 'parseTime',\n        value: function parseTime(time) {\n            return (/\\d{2}\\:\\d{2}/.test(time) ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60 : parseInt(time)\n            );\n        }\n\n        /**\n        * Render card template\n        */\n    }, {\n        key: 'renderInnerCardContent',\n        value: function renderInnerCardContent(task) {\n            var result = this.settings.cardTemplate;\n            for (var key in task) {\n                if (task.hasOwnProperty(key)) {\n                    // TODO: replace all\n                    result = result.replace('${' + key + '}', task[key]);\n                }\n            }\n\n            return $(result);\n        }\n\n        /** \n         * Generate task cards\n         */\n    }, {\n        key: 'appendTasks',\n        value: function appendTasks(placeholder, tasks) {\n            var _this4 = this;\n\n            tasks.forEach(function (task) {\n                var innerContent = _this4.renderInnerCardContent(task);\n                var top = _this4.getCardTopPosition(task.startTime);\n                var height = _this4.getCardHeight(task.duration);\n\n                var card = $('<div></div>').attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\n                    title: _this4.toTimeString(task.startTime) + ' - ' + _this4.toTimeString(task.startTime + task.duration)\n                });\n                card.on('click', function (e) {\n                    _this4.settings.onClick && _this4.settings.onClick(e, task);\n                });\n                card.append(innerContent).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'appendAvailableInterval',\n        value: function appendAvailableInterval(placeholder, intervals) {\n            var _this5 = this;\n\n            var div = $('<div></div>');\n            intervals.forEach(function (interval) {\n                var innerContent = div.clone().text('Not allocated');\n                var top = _this5.getCardTopPosition(interval.start) + 2;\n                var duration = _this5.parseTime(interval.end) - _this5.parseTime(interval.start);\n                var height = _this5.getCardHeight(duration) - 5;\n\n                var skItemHightlightDiv = div.clone().addClass('si-highlight-item').hide();\n\n                var card = div.clone().attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n                card.append(innerContent).append(skItemHightlightDiv).appendTo(placeholder);\n            }, this);\n        }\n    }, {\n        key: 'onPointerUp',\n        value: function onPointerUp(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            this.$ownerDocument.off('mouseup');\n            this.$ownerDocument.off('mousemove');\n\n            this.operation = null;\n        }\n    }, {\n        key: 'onPointerMove',\n        value: function onPointerMove(event) {\n            var op = this.operation;\n            if (!this.operation) {\n                return;\n            }\n\n            // Determine the delta change between start and new mouse position, as a percentage of the table width\n            var difference = event.pageX - op.startX; // / this.$scheduleEl.width() * 100;\n            if (difference === 0) {\n                return;\n            }\n\n            var columnNumber = op.columnNumber;\n            var width = op.width + difference;\n            this.updateColumnWidth(columnNumber, width.toFixed(2));\n        }\n    }, {\n        key: 'onPointerDown',\n        value: function onPointerDown(event) {\n            // Only applies to left-click dragging\n            if (event.which !== 1) {\n                return;\n            }\n\n            // If a previous this.operation is defined, we missed the last mouseup.\n            // Probably gobbled up by user mousing out the window then releasing.\n            // We'll simulate a pointerup here prior to it\n            if (this.operation) {\n                this.onPointerUp(event);\n            }\n\n            var $currentGrip = $(event.currentTarget);\n            var columnNumber = $currentGrip.data('column-id');\n\n            console.log(this.$headerContainer);\n\n            var gripIndex = $currentGrip.index();\n            var $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n            var leftWidth = $leftColumn[0].clientWidth;\n\n            this.operation = {\n                columnNumber: columnNumber,\n                startX: event.pageX,\n                width: leftWidth\n            };\n\n            this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n            this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'updateColumnWidth',\n        value: function updateColumnWidth(columnNumber, width) {\n            width = Math.max(width, this.settings.minColumnWidth);\n            $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')').css('flex-basis', width + 'px');\n\n            var column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n            var diff = column.width() - width;\n            column.width(width);\n\n            $('.' + this.settings.resizableHandlerCssClass + ' > div').each(function (index, el) {\n                if (index >= columnNumber) {\n                    var $el = $(el);\n                    var left = parseInt($el.css('left').replace('px', ''));\n                    $el.css('left', left - diff);\n                }\n            });\n        }\n    }]);\n\n    return Skeduler;\n})();\n\nexports['default'] = Skeduler;\nmodule.exports = exports['default'];\n\n},{\"./settings\":3}]},{},[2])\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import Skeduler from './skeduler';\n\n// export type Task = {\n//     id: number;\n//     startTime: number;\n//     duration: number;\n//     column: number\n// }\n\n// export type Options = {\n//     headers: string[];\n//     tasks: Task[];\n//     containerCssClass: string;\n//     headerContainerCssClass: string;\n//     schedulerContainerCssClass: string;\n//     lineHeight: number;\n//     borderWidth: number;\n// }\n\n/**\n* Generate scheduler grid with task cards\n* options:\n* - headers: string[] - array of headers\n* - tasks: Task[] - array of tasks\n* - containerCssClass: string - css class of main container\n* - headerContainerCssClass: string - css class of header container\n* - schedulerContainerCssClass: string - css class of scheduler\n* - lineHeight - height of one half-hour cell in grid\n* - borderWidth - width of border of cell in grid\n*/\n$.fn.skeduler = function (options) {\n    return this.each(function () {\n        let $container = $(this);\n \n        var skeduler = new Skeduler($container, options);\n    });\n};\n\n$.skeduler = Skeduler;\n","import Skeduler from './skeduler';\nimport adapter from './adapter';\n\nexport default Skeduler;","const defaultSettings = {\n    // Data attributes\n    headers: null,  // String[] - Array of column headers\n    tasks: [],    // Task[] - Array of tasks. Required fields: \n    // id: number, startTime: number, duration: number, column: number\n\n    // Card template - Inner content of task card. \n    // You're able to use ${key} inside template, where key is any property from task.\n    cardTemplate: '<div>${id}</div>',\n\n    // OnClick event handler\n    onClick: function (e, task) { },\n\n    // Css classes\n    skedulerWrapperCssClass: 'skeduler-wrapper',\n    containerCssClass: 'skeduler-container',\n    itemsCssClass: 'skeduler-items',\n    headerContainerCssClass: 'skeduler-headers',\n    schedulerContainerCssClass: 'skeduler-main',\n    taskPlaceholderCssClass: 'skeduler-task-placeholder',\n    workingIntervalPlaceholderCssClass: 'skeduler-interval-placeholder',\n    cellCssClass: 'skeduler-cell',\n    resizableHandlerCssClass: 'resizable-handler',\n    resizableSliderCssClass: 'resizable-slider',\n\n    lineHeight: 30,         // height of one line in grid\n    borderWidth: 1,         // width of board of grid cell\n    columnWidth: 200,\n    minColumnWidth: 100,\n\n    rowsPerHour: 2,         // count of rows for one hour\n\n    columnResizeEnabled: true, // is columns resizable\n\n    debug: true,\n\n    itemsOptions: {\n        enabled: false\n    }\n};\n\nexport { defaultSettings };","import { defaultSettings } from './settings';\n\nclass Skeduler {\n    constructor($container, options) {\n        this.settings = $.extend(defaultSettings, options);\n        this.$container = $container;\n        this.$ownerDocument = $($container[0].ownerDocument);\n        this.$headerContainer = null;\n        this.$scheduleEl = null\n        this.operation = null;\n\n        if (this.settings.debug) {\n            console.time('skeduler');\n        }\n\n        this.populate($container, options);\n        if (this.settings.itemsOptions.enabled) {\n            this.populateSkedulerItems(this.settings.itemsOptions);\n        }\n\n        if (this.settings.debug) {\n            console.timeEnd('skeduler');\n        }\n    }\n\n    populate() {\n        this.$container.empty();\n        this.$container.addClass(this.settings.containerCssClass);\n\n        const headers = this.settings.headers\n            ? this.settings.headers\n            : this.settings.data.map(this.settings.getHeader);\n\n        const div = $('<div></div>');\n\n        // Add headers\n        this.$headerContainer = div.clone().addClass(this.settings.headerContainerCssClass);\n        console.log('this.$headerContainer', this.$headerContainer);\n        headers.forEach((element) => {\n            div.clone()\n                .text(element)\n                .appendTo(this.$headerContainer);\n        }, this);\n        this.$container.append(this.$headerContainer);\n\n        // Add scheduler\n        this.$scheduleEl = div.clone().addClass(this.settings.schedulerContainerCssClass);\n        var scheduleTimelineEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-timeline');\n        var scheduleBodyEl = div.clone().addClass(this.settings.schedulerContainerCssClass + '-body');\n\n        var gridColumnElement = div.clone();\n\n        for (var i = 0; i < 24; i++) {\n            // Populate timeline\n            for (var j = 0; j < this.settings.rowsPerHour; j++) {\n                var timelineCell = div.clone()\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\");\n\n                if (j == 0) {\n                    timelineCell = timelineCell\n                        .css(\"line-height\", this.settings.lineHeight + 'px')\n                        .text(j == 0 ? this.toTimeString(i) : \"\");\n                }\n                timelineCell.appendTo(scheduleTimelineEl);\n\n                div.clone()\n                    .addClass(this.settings.cellCssClass)\n                    .height(this.settings.lineHeight)\n                    .addClass(j == this.settings.rowsPerHour - 1 ? \"last\" : \"\")\n                    .appendTo(gridColumnElement);\n            }\n        }\n\n        // Populate grid\n        for (var j = 0; j < headers.length; j++) {\n            var el = gridColumnElement.clone();\n\n            var tasksPlaceholder = div.clone().addClass(this.settings.taskPlaceholderCssClass);\n            this.appendTasks(tasksPlaceholder, this.settings.tasks.filter(t => t.column == j));\n\n            // fixme\n            var workingIntervalsPlaceholder = div.clone().addClass(this.settings.workingIntervalPlaceholderCssClass);\n            var intervals = this.settings.data.find(d => d.id === j + 1).workingTimeIntervals;\n            this.appendAvailableInterval(workingIntervalsPlaceholder, intervals);\n\n            el.prepend(tasksPlaceholder);\n            el.prepend(workingIntervalsPlaceholder);\n            el.appendTo(scheduleBodyEl);\n\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        this.$scheduleEl.append(scheduleTimelineEl);\n        this.$scheduleEl.append(scheduleBodyEl);\n\n        this.$container.append(this.$scheduleEl);\n\n        // Set default width for columns\n        for (var j = 0; j < headers.length; j++) {\n            this.updateColumnWidth(j, this.settings.columnWidth);\n        }\n\n        // Configure resizing\n        if (this.settings.columnResizeEnabled) {\n            this.configureResizing();\n        }\n    }\n\n    populateSkedulerItems(options) {\n        const $skedulerItemsEl = $(options.containerSelector)\n            .addClass(this.settings.itemsCssClass);\n        const $shifts = $('.skeduler-interval-placeholder > div');\n\n        // TODO: Generate item's divs\n        // $skedulerItemsEl.html(`\n        //   <div></div>\n        // `);\n        let operation = null;\n\n        const mouseUp = (event) => {\n            if (operation == null) return;\n\n            const { $movingCard, $card } = operation;\n\n            const siEl = $('.si-highlight-item:visible'); // fixme\n\n            if (siEl.length !== 0) {\n                $movingCard\n                    .detach()\n                    .css({ top: siEl[0].offsetTop, left: 0 })\n                    .height(siEl[0].clientHeight)\n                    .width('auto')\n                    .removeClass('si-card-moving')\n                    .addClass('si-card-pinned')\n                    .appendTo(siEl.parent());\n\n                $movingCard.on('mousedown', mouseDownOnCard);\n\n                $('.si-highlight-item').hide();\n            } else {\n                $movingCard.remove();\n                $card.show();\n            }\n\n            operation = null;\n            this.$ownerDocument.off('mousemove', mouseMove);\n            this.$ownerDocument.off('mouseup', mouseUp);\n        };\n\n        const mouseMove = (event) => {\n            if (operation == null) return;\n\n            const { $movingCard } = operation;\n\n            const offsetX = event.pageX,\n                  offsetY = event.pageY;\n\n            $movingCard.css({\n                top: offsetY + 'px',\n                left: offsetX + 'px'\n            });\n\n            // Higlight shifts\n            const _window = this.$ownerDocument[0].defaultView;\n            const x = event.pageX;\n            const y = event.pageY - _window.scrollY;\n\n            const rowHeight = this.settings.lineHeight + 1;\n            const rowsPerHour = this.settings.rowsPerHour;\n            const height = parseInt($movingCard.data('duration')) * (rowHeight * rowsPerHour / 60);\n\n            $shifts.each(function () {\n                const $this = $(this);\n                const elementBounding = this.getBoundingClientRect();\n                if (x > elementBounding.left && x < elementBounding.right\n                    && y > elementBounding.top && y < elementBounding.bottom\n                    && this.clientHeight >= height) {\n                    const offsetTop = y - elementBounding.top;\n                    const top = Math.min(\n                        Math.max(0, (Math.floor(offsetTop / rowHeight) - 1) * rowHeight),\n                        this.clientHeight - height\n                    );\n\n                    $this\n                        .find('.si-highlight-item')\n                        .css({ top: top })\n                        .height(height)\n                        .show();\n                } else {\n                    $this.find('.si-highlight-item').hide();\n                }\n            });\n        };\n\n        const mouseDownOnCard = (event /*: MouseEvent */) => {\n            if (event.which !== 1) { return; }\n\n            const $skedulerWrapper = $(`.${this.settings.skedulerWrapperCssClass}`);\n            const $card = $(event.currentTarget);\n\n            const $movingCard =\n                $card.clone()\n                    .addClass('si-card-moving')\n                    .removeClass('si-card-pinned')\n                    .width($card.width())\n                    .appendTo($skedulerWrapper);\n\n            //var bounce = $card[0].getBoundingClientRect();\n            // fixme ^^^\n            const offsetX = event.pageX,\n                  offsetY = event.pageY;\n\n            $movingCard.css({\n                top: offsetY + 'px',\n                left: offsetX + 'px'\n            });\n\n            operation = {\n                $card, $movingCard\n            };\n\n            $card.hide();\n\n            this.$ownerDocument.on('mousemove', mouseMove);\n            this.$ownerDocument.on('mouseup', mouseUp);\n\n            event.preventDefault();\n        };\n\n        $skedulerItemsEl.find('.si-card').on('mousedown', mouseDownOnCard);\n    }\n\n    configureResizing() {\n        const div = $('<div></div>');\n\n        const skedulerElResizableHandler = div.clone()\n            .addClass(this.settings.resizableHandlerCssClass);\n\n        this.$container.prepend(skedulerElResizableHandler);\n\n        skedulerElResizableHandler.width(this.$container.width());\n\n        const resizableSliderHeight = this.$scheduleEl.height() + this.$headerContainer.height();\n        let index = 0;\n        this.$headerContainer.find('div').each((_, el) => {\n            div.clone()\n                .addClass(this.settings.resizableSliderCssClass)\n                .css('left', el.offsetLeft + el.clientWidth)\n                .height(resizableSliderHeight)\n                .data('column-id', index++)\n                .appendTo(skedulerElResizableHandler)\n        });\n\n        skedulerElResizableHandler.on('mousedown', '.' + this.settings.resizableSliderCssClass, this.onPointerDown.bind(this));\n    }\n\n    /**\n       * Convert double value of hours to zero-preposited string with 30 or 00 value of minutes\n       */\n    toTimeString(value) {\n        return (value < 10 ? '0' : '') + Math.ceil(value) + (Math.ceil(value) > Math.floor(value) ? ':30' : ':00');\n    }\n\n    /**\n     * Return height of task card based on duration of the task\n     * duration - in hours\n     */\n    getCardHeight(duration) {\n        const durationInMinutes = duration * 60;\n        const heightOfMinute = (this.settings.lineHeight + this.settings.borderWidth) * this.settings.rowsPerHour / 60;\n        return Math.ceil(durationInMinutes * heightOfMinute);\n    }\n\n    /**\n     * Return top offset of task card based on start time of the task\n     * startTime - in hours\n     */\n    getCardTopPosition(startTime) {\n        const startTimeInt = this.parseTime(startTime);\n        return (this.settings.lineHeight + this.settings.borderWidth) * (startTimeInt * this.settings.rowsPerHour);\n    }\n\n    parseTime(time) {\n        return /\\d{2}\\:\\d{2}/.test(time)\n            ? parseInt(time.split(':')[0]) + parseInt(time.split(':')[1]) / 60\n            : parseInt(time);\n    }\n\n    /**\n    * Render card template\n    */\n    renderInnerCardContent(task) {\n        var result = this.settings.cardTemplate;\n        for (var key in task) {\n            if (task.hasOwnProperty(key)) {\n                // TODO: replace all\n                result = result.replace('${' + key + '}', task[key]);\n            }\n        }\n\n        return $(result);\n    }\n\n    /** \n     * Generate task cards\n     */\n    appendTasks(placeholder, tasks) {\n        tasks.forEach((task) => {\n            var innerContent = this.renderInnerCardContent(task);\n            var top = this.getCardTopPosition(task.startTime);\n            var height = this.getCardHeight(task.duration);\n\n            var card = $('<div></div>')\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px',\n                    title: this.toTimeString(task.startTime) + ' - ' + this.toTimeString(task.startTime + task.duration)\n                });\n            card.on('click', (e) => { this.settings.onClick && this.settings.onClick(e, task) });\n            card.append(innerContent)\n                .appendTo(placeholder);\n        }, this);\n    }\n\n    appendAvailableInterval(placeholder, intervals) {\n        const div = $('<div></div>');\n        intervals.forEach((interval) => {\n            const innerContent = div.clone().text('Not allocated');\n            const top = this.getCardTopPosition(interval.start) + 2;\n            const duration = this.parseTime(interval.end) - this.parseTime(interval.start);\n            const height = this.getCardHeight(duration) - 5;\n\n            const skItemHightlightDiv = div.clone()\n                .addClass('si-highlight-item')\n                .hide();\n\n            const card = div.clone()\n                .attr({\n                    style: 'top: ' + top + 'px; height: ' + height + 'px'\n                });\n\n            card.append(innerContent)\n                .append(skItemHightlightDiv)\n                .appendTo(placeholder);\n\n        }, this);\n    }\n\n    onPointerUp(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        this.$ownerDocument.off('mouseup');\n        this.$ownerDocument.off('mousemove');\n\n        this.operation = null;\n    }\n\n    onPointerMove(event) {\n        let op = this.operation;\n        if (!this.operation) { return; }\n\n        // Determine the delta change between start and new mouse position, as a percentage of the table width\n        let difference = (event.pageX - op.startX);// / this.$scheduleEl.width() * 100;\n        if (difference === 0) {\n            return;\n        }\n\n        let columnNumber = op.columnNumber;\n        let width = op.width + difference;\n        this.updateColumnWidth(columnNumber, width.toFixed(2));\n    }\n\n    onPointerDown(event) {\n        // Only applies to left-click dragging\n        if (event.which !== 1) { return; }\n\n        // If a previous this.operation is defined, we missed the last mouseup.\n        // Probably gobbled up by user mousing out the window then releasing.\n        // We'll simulate a pointerup here prior to it\n        if (this.operation) {\n            this.onPointerUp(event);\n        }\n\n        let $currentGrip = $(event.currentTarget);\n        let columnNumber = $currentGrip.data('column-id');\n\n        console.log(this.$headerContainer);\n\n        let gripIndex = $currentGrip.index();\n        let $leftColumn = this.$headerContainer.find('div').eq(gripIndex);\n\n        let leftWidth = $leftColumn[0].clientWidth;\n\n        this.operation = {\n            columnNumber,\n            startX: event.pageX,\n            width: leftWidth\n        };\n\n        this.$ownerDocument.on('mousemove', this.onPointerMove.bind(this));\n        this.$ownerDocument.on('mouseup', this.onPointerUp.bind(this));\n\n        event.preventDefault();\n    }\n\n    updateColumnWidth(columnNumber, width) {\n        width = Math.max(width, this.settings.minColumnWidth);\n        $('.' + this.settings.headerContainerCssClass + ' > div:eq(' + columnNumber + ')')\n            .css('flex-basis', width + 'px');\n\n        let column = $('.' + this.settings.schedulerContainerCssClass + '-body > div:eq(' + columnNumber + ') > .' + this.settings.cellCssClass);\n        var diff = column.width() - width;\n        column.width(width);\n\n        $('.' + this.settings.resizableHandlerCssClass + ' > div').each((index, el) => {\n            if (index >= columnNumber) {\n                let $el = $(el);\n                let left = parseInt($el.css('left').replace('px', ''));\n                $el.css('left', left - diff);\n            }\n        });\n    }\n}\n\nexport default Skeduler;"]}